// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: errcode.proto

#ifndef PROTOBUF_errcode_2eproto__INCLUDED
#define PROTOBUF_errcode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_errcode_2eproto();
void protobuf_AssignDesc_errcode_2eproto();
void protobuf_ShutdownFile_errcode_2eproto();


enum ol_errcode_t {
  olerr_decode = 100001,
  olerr_invalid_req = 100002,
  olerr_invalid_dbrsp = 100003,
  olerr_multi_login = 110001,
  olerr_role_creating = 110002,
  olerr_no_such_role = 110003,
  olerr_can_transfer_next = 110004,
  olerr_not_enough_level = 110005,
  olerr_not_enough_diamond = 110006,
  olerr_not_enough_coin = 110007,
  olerr_not_enough_exploit = 110008,
  olerr_buy_times_logic_err = 110008,
  olerr_not_enough_explore_times = 110009,
  olerr_nofound_explore_id = 110010,
  olerr_nofound_item_id = 120010,
  olerr_exist_item_id = 120011,
  olerr_not_enough_item = 120012,
  olerr_invalid_pos = 120013,
  olerr_exist_pos = 120014,
  olerr_invalid_item_id = 120015,
  olerr_invalid_hole = 120016,
  olerr_not_enough_reset_gam_times = 120017,
  olerr_open_hole_seq_err = 120018,
  olerr_not_enough_pos = 120019,
  olerr_warm_sport_lv_max = 120020,
  olerr_manor_opt_error = 120021,
  olerr_not_clear_manor_cd = 120022,
  olerr_enter_manor_times_max = 120023,
  olerr_old_shop_items_list = 120030,
  olerr_invalid_buy_item_index = 120031,
  olerr_has_buy_item_index = 120032
};
bool ol_errcode_t_IsValid(int value);
const ol_errcode_t ol_errcode_t_MIN = olerr_decode;
const ol_errcode_t ol_errcode_t_MAX = olerr_has_buy_item_index;
const int ol_errcode_t_ARRAYSIZE = ol_errcode_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* ol_errcode_t_descriptor();
inline const ::std::string& ol_errcode_t_Name(ol_errcode_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    ol_errcode_t_descriptor(), value);
}
inline bool ol_errcode_t_Parse(
    const ::std::string& name, ol_errcode_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ol_errcode_t>(
    ol_errcode_t_descriptor(), name, value);
}
enum db_errcode_t {
  dberr_succ = 0,
  dberr_dbmem = 201001,
  dberr_dbsys = 201002,
  dberr_dbnet = 201003,
  dberr_no_cmd = 201004,
  dberr_protolen = 201005,
  dberr_range = 201006,
  dberr_setflag = 201007,
  dberr_data = 201008,
  dberr_enum = 201009,
  dberr_sendprotolen = 201010,
  dberr_dbdata = 201011,
  dberr_netsend = 201012,
  dberr_netrecv = 201013,
  dberr_keyexists = 201014,
  dberr_keynotfound = 201015,
  dberr_noupdate = 201016,
  dberr_net_timeout = 201017,
  dberr_flowcontrol = 201018,
  dberr_md5 = 201021,
  dberr_password = 201103,
  dberr_uidexists = 201104,
  dberr_uidnofound = 201105,
  dberr_role_notfound = 210001,
  dberr_role_exists = 210002,
  dberr_crtrole_time_limit = 210003,
  dberr_duplicated_nickname = 210004
};
bool db_errcode_t_IsValid(int value);
const db_errcode_t db_errcode_t_MIN = dberr_succ;
const db_errcode_t db_errcode_t_MAX = dberr_duplicated_nickname;
const int db_errcode_t_ARRAYSIZE = db_errcode_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* db_errcode_t_descriptor();
inline const ::std::string& db_errcode_t_Name(db_errcode_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    db_errcode_t_descriptor(), value);
}
inline bool db_errcode_t_Parse(
    const ::std::string& name, db_errcode_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<db_errcode_t>(
    db_errcode_t_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ol_errcode_t>() {
  return ol_errcode_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< db_errcode_t>() {
  return db_errcode_t_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_errcode_2eproto__INCLUDED

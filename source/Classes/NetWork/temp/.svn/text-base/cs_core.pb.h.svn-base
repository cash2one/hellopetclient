// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_core.proto

#ifndef PROTOBUF_cs_5fcore_2eproto__INCLUDED
#define PROTOBUF_cs_5fcore_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cs_5fcore_2eproto();
void protobuf_AssignDesc_cs_5fcore_2eproto();
void protobuf_ShutdownFile_cs_5fcore_2eproto();

class BasicUserBattleInfo;
class UserSkillPart;
class UserSkillInfo;
class BasicUserInfo;
class CSEnterMapReq;
class CSEnterMapRsp;
class CSLeaveMapRsp;
class CSGetMapUsersReq;
class CSGetMapUsersRsp;
class CSGetUserSkillReq;
class CSGetUserSkillRsp;
class CSGetUserInfoReq;
class CSGetUserInfoRsp;
class CSAddUserSkillReq;
class CSAddUserSkillRsp;
class CSUserSkillDiffReq;
class CSUserSkillDiffRsp;
class CSWalkReq;
class CSWalkRsp;
class CSItemAttr;
class CSEquipHole;
class EquipmentBase;
class EquipmentBase_Item_Attr;
class SpiritStoneBase;
class ManorBase;
class CSItemInfo;
class CSAllItemsReq;
class CSAllItemsRsp;
class CSItemAddRsp;
class CSItemRemoveReq;
class CSItemRemoveRsp;
class CSItemUseReq;
class CSItemMoveReq;
class CSItemMoveRsp;
class CSItemUpdateRsp;
class CSItemOrderReq;
class CSInstanceReq;
class CSInstanceRsp;
class CSInstanceRsp_CSInstance;
class CSReward;
class CSReward_RewardInfo;
class CSLevelUpRsp;
class CSBasicUserBattleInfoRsp;
class CSSearchSpiritStoneReq;
class CSSearchSpiritStoneRsp;
class CSSpiritStoneMoveBagReq;
class CSSpiritStoneMoveBagRsp;
class CSSpiritStoneLevelUpReq;
class CSSpiritStoneLevelUpRsp;
class CSSpiritStoneToSPReq;
class CSSpiritStoneToSPRsp;
class CSGetExchangeSSInfoReq;
class ExchangeSSInfo;
class CSGetExchangeSSInfoRsp;
class CSAddManorReq;
class CSAddManorRsp;
class CSWarmSportLvUpReq;
class CSWarmSportLvUpRsp;
class CSManorOptReq;
class CSManorOptRsp;
class CSMonListReq;
class MonInfo;
class CSMonListRsp;
class CSSetMonStatusReq;
class CSSetMonStatusRsp;
class CSPVPQueryRoomReq;
class PVPRoomBase;
class CSPVPQueryRoomRsp;
class CSPVPBaseInfoRsp;
class CSPVPCreateRoomReq;
class CSPVPJoinRoomReq;
class PVPSeatBase;
class CSPVPJoinRoomRsp;
class CSPVPExitRoomReq;
class CSPVPExitRoomRsp;
class CSPVPCloseRoomRsp;
class CSPVPChangeSeatReq;
class CSPVPReadyReq;
class CSPVPCancelReadyReq;
class CSPVPKickoffReq;
class CSPVPKickoffRsp;
class CSPVPStartReq;
class CSPVPStartRsp;
class CSPPVEBattleReq;
class CSPPVEBattleRsp;
class CSPVEQueryRoomReq;
class PVERoomBase;
class CSPVEQueryRoomRsp;
class CSPVEBaseInfoRsp;
class CSPVECreateRoomReq;
class CSPVEJoinRoomReq;
class CSPVEJoinRoomFailureRsp;
class PVESeatBase;
class CSPVEJoinRoomRsp;
class CSPVEExitRoomReq;
class CSPVEExitRoomRsp;
class CSPVECloseRoomRsp;
class CSPVEReadyReq;
class CSPVECancelReadyReq;
class CSPVEKickoffReq;
class CSPVEKickoffRsp;
class CSPVEStartReq;
class CSPVEStartRsp;
class CSPVAIReq;
class CSPVAIInfoReq;
class CSPVAIInfoRsq;
class CSPVAIInfoRsq_CSPVAIInfo;
class CSPVAIInfoRsq_CSPVAILog;
class CSGetEquipLvUpCDReq;
class CSGetEquipLvUpCDRsp;
class CSEquipInlayGemReq;
class CSEquipInlayGemRsp;
class CSResetGemAttrReq;
class CSResetGemAttrRsp;
class CSEquipmentStrengthReq;
class CSEquipmentStrengthRsp;
class CSEquipmentComposeReq;
class CSEquipmentComposeRsp;
class CSTaskInfoReq;
class TaskInfo;
class CSTaskInfoRsp;
class CSTaskDoStepReq;
class CSTaskDoStepRsp;
class CSTaskLogReq;
class CSTaskLogRsp;
class CSAttributesSetReq;
class CSAttributesReq;
class CSAttributesRsp;
class CSAttributesRsp_KeyValue;
class CSOnceSetReq;
class CSOnceReq;
class CSOnceRsp;
class CSOnceRsp_Once;
class CSTrainInfoReq;
class CSTrainInfoRsp;
class CSTrainReq;
class CSTrainRsp;
class CSTrainDetermineReq;
class CSTrainDetermineRsp;
class CSExploreReq;
class CSExploreRsp;
class CSExploreDetermineReq;
class CSExploreDetermineRsp;
class CSQueryDowerReq;
class CSQueryDowerRsp;
class CSQueryDowerRsp_Dower;
class CSDowerInfoReq;
class CSDowerInfoRsp;
class CSDowerReq;
class CSDowerRsp;
class CSExchangeParameterReq;
class CSExchangeParameterRsp;
class ShopItemInfo;
class ShopItemInfo_Item;
class CSGetShopItemsReq;
class CSGetShopItemsRsp;
class CSBuyShopItemReq;
class CSBuyShopItemRsp;
class CSGetUserItemReq;
class CSGetUserItemRsp;
class CSGetUserAttributesReq;
class CSGetUserAttributesRsp;
class CSNotifyMoneyConfInfoRsp;

enum PB_PLAYET_ATTR_T {
  PB_ATTR_PLAYER_SP = 1,
  PB_ATTR_PLAYER_SS_MOD_ID = 2,
  PB_ATTR_PLAYER_GEM_BACKPACK_CAPACITY = 6,
  PB_ATTR_PLAYER_RESET_GEM_TIMES = 11,
  PB_ATTR_EQUIP_LVUP_USED_TIMES = 12,
  PB_ATTR_EFFECTIVENESS = 13,
  PB_ATTR_PLAYER_ENTER_MANOR_TIMES = 16,
  PB_ATTR_PLAYER_EXPLORE_TIMES = 21,
  PB_ATTR_CONSTEL_MIN_DEF = 100,
  PB_ATTR_CONSTEL_1_CAPACIT = 101,
  PB_ATTR_CONSTEL_2_CAPACIT = 102,
  PB_ATTR_CONSTEL_3_CAPACIT = 103,
  PB_ATTR_CONSTEL_4_CAPACIT = 104,
  PB_ATTR_CONSTEL_5_CAPACIT = 105,
  PB_ATTR_CONSTEL_6_CAPACIT = 106,
  PB_ATTR_CONSTEL_7_CAPACIT = 107,
  PB_ATTR_CONSTEL_8_CAPACIT = 108,
  PB_ATTR_CONSTEL_9_CAPACIT = 109,
  PB_ATTR_CONSTEL_10_CAPACIT = 110,
  PB_ATTR_CONSTEL_11_CAPACIT = 111,
  PB_ATTR_CONSTEL_12_CAPACIT = 112,
  PB_ATTR_DEF_MIN_CD = 300000,
  PB_ATTR_EQUIP_LVUP_CD = 300100,
  PB_ATTR_DOWER_LVUP_CD = 300200,
  PB_ATTR_SKILL_LVUP_CD = 300300,
  PB_ATTR_PVAI_CD = 300400,
  PB_ATTR_AB_NORMAL_MAP_CD = 300500,
  PB_ATTR_AB_SPECIAL_MAP_CD = 300501,
  PB_ATTR_WOELD_BOSS_CD = 300600,
  PB_ATTR_MANOR_CD = 300700,
  PB_ATTR_SHOP_CD = 300800,
  PB_ATTR_DEF_MAX_CD = 309999,
  PB_ATTR_DEF_MIN_OTHER = 310000,
  PB_ATTR_DEF_MAX_OTHER = 314999,
  PB_ATTR_RESET_GEM_BUY_TIMES = 315000,
  PB_ATTR_MANOR_BUY_TIMES = 315100,
  PB_ATTR_DEF_MAX_BUY_TIMES = 319999,
  PB_ATTR_DEF_MIN_CAPACITY = 320000,
  PB_ATTR_BUY_MANOR_CAPACITY = 320000,
  PB_ATTR_BUY_SKILL_CAPACITY = 320100,
  PB_ATTR_BUY_CONSTEL_CAPACITY = 320150,
  PB_ATTR_BUY_EQUIP_HOLE_CAPACITY = 320170,
  PB_ATTR_BUY_SS_BAG_CAPACITY = 320200,
  PB_ATTR_BUY_BAG_CAPACITY = 320300,
  PB_ATTR_BUY_STORE_CAPACITY = 320400,
  PB_ATTR_DEF_MAX_CAPACITY = 329999,
  PB_ATTR_PLAYER_STAMINA = 416000,
  PB_ATTR_PLAYER_COIN = 416001,
  PB_ATTR_PLAYER_DIAMOND = 416002,
  PB_ATTR_EXP = 416003,
  PB_ATTR_PLAYER_PRESTIGE = 416004,
  PB_ATTR_PLAYER_GEM_ANIMA = 416005,
  PB_ATTR_PLAYER_SS_CHIP = 416006,
  PB_ATTR_PLAYER_EXPLOIT = 416007,
  PB_ATTR_PLAYER_EXPLORE_EXP = 416008,
  PB_ATTR_SEGMENT_DEF = 999999,
  PB_ATTR_EXPLOIT = 416007,
  PB_ATTR_PLAYER_LAST_LOGIN_MAP = 1000001,
  PB_ATTR_LAST_EXPLORE_ID = 1000002,
  PB_ATTR_SET_ONCE_BEGIN = 1100000,
  PB_ATTR_SET_ONCE_END = 1200000,
  PB_ATTR_SET_BEGIN = 1200001,
  PB_ATTR_SET_END = 1200100,
  PB_ATTR_DOWER_START = 1210000,
  PB_ATTR_DOWER_END = 1220000,
  PB_ATTR_SHOP_ITEM_START = 1230000,
  PB_ATTR_SHOP_ITEM_END = 1230100,
  PB_ATTR_SHOP_ITEM_BUY_START = 1230200,
  PB_ATTR_SHOP_ITEM_BUY_END = 1230300,
  PB_ATTR_PHYSICAL_ATTACK_ADD = 2010000,
  PB_ATTR_MAGIC_ATTACK_ADD = 2020000,
  PB_ATTR_SKILL_ATTACK_ADD = 2030000,
  PB_ATTR_PHYSICAL_DEFENCE_ADD = 2040000,
  PB_ATTR_MAGIC_DEFENCE_ADD = 2050000,
  PB_ATTR_SKILL_DEFENCE_ADD = 2060000,
  PB_ATTR_HP_ADD = 2070000,
  PB_ATTR_COURAGE_ADD = 2080000,
  PB_ATTR_CHARM_ADD = 2090000,
  PB_ATTR_TRICK_ADD = 2100000,
  PB_ATTR_AUTO_BTL_INSTANCE_ID = 3000001,
  PB_ATTR_AUTO_BTL_REMAIN_TURN = 3000002
};
bool PB_PLAYET_ATTR_T_IsValid(int value);
const PB_PLAYET_ATTR_T PB_PLAYET_ATTR_T_MIN = PB_ATTR_PLAYER_SP;
const PB_PLAYET_ATTR_T PB_PLAYET_ATTR_T_MAX = PB_ATTR_AUTO_BTL_REMAIN_TURN;
const int PB_PLAYET_ATTR_T_ARRAYSIZE = PB_PLAYET_ATTR_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_PLAYET_ATTR_T_descriptor();
inline const ::std::string& PB_PLAYET_ATTR_T_Name(PB_PLAYET_ATTR_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_PLAYET_ATTR_T_descriptor(), value);
}
inline bool PB_PLAYET_ATTR_T_Parse(
    const ::std::string& name, PB_PLAYET_ATTR_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_PLAYET_ATTR_T>(
    PB_PLAYET_ATTR_T_descriptor(), name, value);
}
enum PB_ITEM_ATTR_T {
  PB_ITEM_ATTR_PHYATK = 1,
  PB_ITEM_ATTR_MAGATK = 2,
  PB_ITEM_ATTR_SKIATK = 3,
  PB_ITEM_ATTR_PHYDEF = 4,
  PB_ITEM_ATTR_MAGDEF = 5,
  PB_ITEM_ATTR_SKIDEF = 6,
  PB_ITEM_ATTR_HP = 7,
  PB_ITEM_ATTR_ACCU = 8,
  PB_ITEM_ATTR_DODG = 9,
  PB_ITEM_ATTR_WRK = 10,
  PB_ITEM_ATTR_PARRY = 11,
  PB_ITEM_ATTR_CRIT = 12,
  PB_ITEM_ATTR_TENA = 13,
  PB_ITEM_ATTR_SLY = 14,
  PB_ITEM_ATTR_SPEED = 15
};
bool PB_ITEM_ATTR_T_IsValid(int value);
const PB_ITEM_ATTR_T PB_ITEM_ATTR_T_MIN = PB_ITEM_ATTR_PHYATK;
const PB_ITEM_ATTR_T PB_ITEM_ATTR_T_MAX = PB_ITEM_ATTR_SPEED;
const int PB_ITEM_ATTR_T_ARRAYSIZE = PB_ITEM_ATTR_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_ITEM_ATTR_T_descriptor();
inline const ::std::string& PB_ITEM_ATTR_T_Name(PB_ITEM_ATTR_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_ITEM_ATTR_T_descriptor(), value);
}
inline bool PB_ITEM_ATTR_T_Parse(
    const ::std::string& name, PB_ITEM_ATTR_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_ITEM_ATTR_T>(
    PB_ITEM_ATTR_T_descriptor(), name, value);
}
// ===================================================================

class BasicUserBattleInfo : public ::google::protobuf::Message {
 public:
  BasicUserBattleInfo();
  virtual ~BasicUserBattleInfo();

  BasicUserBattleInfo(const BasicUserBattleInfo& from);

  inline BasicUserBattleInfo& operator=(const BasicUserBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicUserBattleInfo& default_instance();

  void Swap(BasicUserBattleInfo* other);

  // implements Message ----------------------------------------------

  BasicUserBattleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicUserBattleInfo& from);
  void MergeFrom(const BasicUserBattleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 physical_attack = 1;
  inline bool has_physical_attack() const;
  inline void clear_physical_attack();
  static const int kPhysicalAttackFieldNumber = 1;
  inline ::google::protobuf::uint32 physical_attack() const;
  inline void set_physical_attack(::google::protobuf::uint32 value);

  // required uint32 magic_attack = 2;
  inline bool has_magic_attack() const;
  inline void clear_magic_attack();
  static const int kMagicAttackFieldNumber = 2;
  inline ::google::protobuf::uint32 magic_attack() const;
  inline void set_magic_attack(::google::protobuf::uint32 value);

  // required uint32 skill_attack = 3;
  inline bool has_skill_attack() const;
  inline void clear_skill_attack();
  static const int kSkillAttackFieldNumber = 3;
  inline ::google::protobuf::uint32 skill_attack() const;
  inline void set_skill_attack(::google::protobuf::uint32 value);

  // required uint32 physical_defence = 4;
  inline bool has_physical_defence() const;
  inline void clear_physical_defence();
  static const int kPhysicalDefenceFieldNumber = 4;
  inline ::google::protobuf::uint32 physical_defence() const;
  inline void set_physical_defence(::google::protobuf::uint32 value);

  // required uint32 magic_defence = 5;
  inline bool has_magic_defence() const;
  inline void clear_magic_defence();
  static const int kMagicDefenceFieldNumber = 5;
  inline ::google::protobuf::uint32 magic_defence() const;
  inline void set_magic_defence(::google::protobuf::uint32 value);

  // required uint32 skill_defence = 6;
  inline bool has_skill_defence() const;
  inline void clear_skill_defence();
  static const int kSkillDefenceFieldNumber = 6;
  inline ::google::protobuf::uint32 skill_defence() const;
  inline void set_skill_defence(::google::protobuf::uint32 value);

  // required uint32 health_point = 7;
  inline bool has_health_point() const;
  inline void clear_health_point();
  static const int kHealthPointFieldNumber = 7;
  inline ::google::protobuf::uint32 health_point() const;
  inline void set_health_point(::google::protobuf::uint32 value);

  // required uint32 accurate = 8;
  inline bool has_accurate() const;
  inline void clear_accurate();
  static const int kAccurateFieldNumber = 8;
  inline ::google::protobuf::uint32 accurate() const;
  inline void set_accurate(::google::protobuf::uint32 value);

  // required uint32 dodge = 9;
  inline bool has_dodge() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 9;
  inline ::google::protobuf::uint32 dodge() const;
  inline void set_dodge(::google::protobuf::uint32 value);

  // required uint32 wreck = 10;
  inline bool has_wreck() const;
  inline void clear_wreck();
  static const int kWreckFieldNumber = 10;
  inline ::google::protobuf::uint32 wreck() const;
  inline void set_wreck(::google::protobuf::uint32 value);

  // required uint32 parry = 11;
  inline bool has_parry() const;
  inline void clear_parry();
  static const int kParryFieldNumber = 11;
  inline ::google::protobuf::uint32 parry() const;
  inline void set_parry(::google::protobuf::uint32 value);

  // required uint32 critical_strike = 12;
  inline bool has_critical_strike() const;
  inline void clear_critical_strike();
  static const int kCriticalStrikeFieldNumber = 12;
  inline ::google::protobuf::uint32 critical_strike() const;
  inline void set_critical_strike(::google::protobuf::uint32 value);

  // required uint32 tenacity = 13;
  inline bool has_tenacity() const;
  inline void clear_tenacity();
  static const int kTenacityFieldNumber = 13;
  inline ::google::protobuf::uint32 tenacity() const;
  inline void set_tenacity(::google::protobuf::uint32 value);

  // required uint32 slay = 14;
  inline bool has_slay() const;
  inline void clear_slay();
  static const int kSlayFieldNumber = 14;
  inline ::google::protobuf::uint32 slay() const;
  inline void set_slay(::google::protobuf::uint32 value);

  // required uint32 courage = 15;
  inline bool has_courage() const;
  inline void clear_courage();
  static const int kCourageFieldNumber = 15;
  inline ::google::protobuf::uint32 courage() const;
  inline void set_courage(::google::protobuf::uint32 value);

  // required uint32 charm = 16;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 16;
  inline ::google::protobuf::uint32 charm() const;
  inline void set_charm(::google::protobuf::uint32 value);

  // required uint32 trick = 17;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 17;
  inline ::google::protobuf::uint32 trick() const;
  inline void set_trick(::google::protobuf::uint32 value);

  // required uint32 speed = 18;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 18;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);

  // required uint32 proficiency = 19;
  inline bool has_proficiency() const;
  inline void clear_proficiency();
  static const int kProficiencyFieldNumber = 19;
  inline ::google::protobuf::uint32 proficiency() const;
  inline void set_proficiency(::google::protobuf::uint32 value);

  // optional uint32 current_hp = 20;
  inline bool has_current_hp() const;
  inline void clear_current_hp();
  static const int kCurrentHpFieldNumber = 20;
  inline ::google::protobuf::uint32 current_hp() const;
  inline void set_current_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BasicUserBattleInfo)
 private:
  inline void set_has_physical_attack();
  inline void clear_has_physical_attack();
  inline void set_has_magic_attack();
  inline void clear_has_magic_attack();
  inline void set_has_skill_attack();
  inline void clear_has_skill_attack();
  inline void set_has_physical_defence();
  inline void clear_has_physical_defence();
  inline void set_has_magic_defence();
  inline void clear_has_magic_defence();
  inline void set_has_skill_defence();
  inline void clear_has_skill_defence();
  inline void set_has_health_point();
  inline void clear_has_health_point();
  inline void set_has_accurate();
  inline void clear_has_accurate();
  inline void set_has_dodge();
  inline void clear_has_dodge();
  inline void set_has_wreck();
  inline void clear_has_wreck();
  inline void set_has_parry();
  inline void clear_has_parry();
  inline void set_has_critical_strike();
  inline void clear_has_critical_strike();
  inline void set_has_tenacity();
  inline void clear_has_tenacity();
  inline void set_has_slay();
  inline void clear_has_slay();
  inline void set_has_courage();
  inline void clear_has_courage();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_trick();
  inline void clear_has_trick();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_proficiency();
  inline void clear_has_proficiency();
  inline void set_has_current_hp();
  inline void clear_has_current_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 physical_attack_;
  ::google::protobuf::uint32 magic_attack_;
  ::google::protobuf::uint32 skill_attack_;
  ::google::protobuf::uint32 physical_defence_;
  ::google::protobuf::uint32 magic_defence_;
  ::google::protobuf::uint32 skill_defence_;
  ::google::protobuf::uint32 health_point_;
  ::google::protobuf::uint32 accurate_;
  ::google::protobuf::uint32 dodge_;
  ::google::protobuf::uint32 wreck_;
  ::google::protobuf::uint32 parry_;
  ::google::protobuf::uint32 critical_strike_;
  ::google::protobuf::uint32 tenacity_;
  ::google::protobuf::uint32 slay_;
  ::google::protobuf::uint32 courage_;
  ::google::protobuf::uint32 charm_;
  ::google::protobuf::uint32 trick_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 proficiency_;
  ::google::protobuf::uint32 current_hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static BasicUserBattleInfo* default_instance_;
};
// -------------------------------------------------------------------

class UserSkillPart : public ::google::protobuf::Message {
 public:
  UserSkillPart();
  virtual ~UserSkillPart();

  UserSkillPart(const UserSkillPart& from);

  inline UserSkillPart& operator=(const UserSkillPart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSkillPart& default_instance();

  void Swap(UserSkillPart* other);

  // implements Message ----------------------------------------------

  UserSkillPart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSkillPart& from);
  void MergeFrom(const UserSkillPart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 part = 1;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 1;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);

  // required .BasicUserBattleInfo exp_battle_info = 2;
  inline bool has_exp_battle_info() const;
  inline void clear_exp_battle_info();
  static const int kExpBattleInfoFieldNumber = 2;
  inline const ::BasicUserBattleInfo& exp_battle_info() const;
  inline ::BasicUserBattleInfo* mutable_exp_battle_info();
  inline ::BasicUserBattleInfo* release_exp_battle_info();
  inline void set_allocated_exp_battle_info(::BasicUserBattleInfo* exp_battle_info);

  // required float continue_time = 5;
  inline bool has_continue_time() const;
  inline void clear_continue_time();
  static const int kContinueTimeFieldNumber = 5;
  inline float continue_time() const;
  inline void set_continue_time(float value);

  // required uint32 can_attack_number = 6;
  inline bool has_can_attack_number() const;
  inline void clear_can_attack_number();
  static const int kCanAttackNumberFieldNumber = 6;
  inline ::google::protobuf::uint32 can_attack_number() const;
  inline void set_can_attack_number(::google::protobuf::uint32 value);

  // required uint32 hurt = 7;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 7;
  inline ::google::protobuf::uint32 hurt() const;
  inline void set_hurt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserSkillPart)
 private:
  inline void set_has_part();
  inline void clear_has_part();
  inline void set_has_exp_battle_info();
  inline void clear_has_exp_battle_info();
  inline void set_has_continue_time();
  inline void clear_has_continue_time();
  inline void set_has_can_attack_number();
  inline void clear_has_can_attack_number();
  inline void set_has_hurt();
  inline void clear_has_hurt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BasicUserBattleInfo* exp_battle_info_;
  ::google::protobuf::uint32 part_;
  float continue_time_;
  ::google::protobuf::uint32 can_attack_number_;
  ::google::protobuf::uint32 hurt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static UserSkillPart* default_instance_;
};
// -------------------------------------------------------------------

class UserSkillInfo : public ::google::protobuf::Message {
 public:
  UserSkillInfo();
  virtual ~UserSkillInfo();

  UserSkillInfo(const UserSkillInfo& from);

  inline UserSkillInfo& operator=(const UserSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSkillInfo& default_instance();

  void Swap(UserSkillInfo* other);

  // implements Message ----------------------------------------------

  UserSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSkillInfo& from);
  void MergeFrom(const UserSkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);

  // required uint32 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // required uint32 exploit = 4;
  inline bool has_exploit() const;
  inline void clear_exploit();
  static const int kExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 exploit() const;
  inline void set_exploit(::google::protobuf::uint32 value);

  // required float own_cd = 5;
  inline bool has_own_cd() const;
  inline void clear_own_cd();
  static const int kOwnCdFieldNumber = 5;
  inline float own_cd() const;
  inline void set_own_cd(float value);

  // required float share_cd = 6;
  inline bool has_share_cd() const;
  inline void clear_share_cd();
  static const int kShareCdFieldNumber = 6;
  inline float share_cd() const;
  inline void set_share_cd(float value);

  // repeated .UserSkillPart parts = 7;
  inline int parts_size() const;
  inline void clear_parts();
  static const int kPartsFieldNumber = 7;
  inline const ::UserSkillPart& parts(int index) const;
  inline ::UserSkillPart* mutable_parts(int index);
  inline ::UserSkillPart* add_parts();
  inline const ::google::protobuf::RepeatedPtrField< ::UserSkillPart >&
      parts() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserSkillPart >*
      mutable_parts();

  // required uint32 max_level = 8;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 max_level() const;
  inline void set_max_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserSkillInfo)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exploit();
  inline void clear_has_exploit();
  inline void set_has_own_cd();
  inline void clear_has_own_cd();
  inline void set_has_share_cd();
  inline void clear_has_share_cd();
  inline void set_has_max_level();
  inline void clear_has_max_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 exploit_;
  float own_cd_;
  float share_cd_;
  ::google::protobuf::RepeatedPtrField< ::UserSkillPart > parts_;
  ::google::protobuf::uint32 max_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static UserSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class BasicUserInfo : public ::google::protobuf::Message {
 public:
  BasicUserInfo();
  virtual ~BasicUserInfo();

  BasicUserInfo(const BasicUserInfo& from);

  inline BasicUserInfo& operator=(const BasicUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicUserInfo& default_instance();

  void Swap(BasicUserInfo* other);

  // implements Message ----------------------------------------------

  BasicUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicUserInfo& from);
  void MergeFrom(const BasicUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 gender = 4;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 4;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);

  // required uint32 lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // required uint32 xpos = 6;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 6;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);

  // required uint32 ypos = 7;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 7;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);

  // required uint32 orient = 8;
  inline bool has_orient() const;
  inline void clear_orient();
  static const int kOrientFieldNumber = 8;
  inline ::google::protobuf::uint32 orient() const;
  inline void set_orient(::google::protobuf::uint32 value);

  // optional uint32 battle_side = 9;
  inline bool has_battle_side() const;
  inline void clear_battle_side();
  static const int kBattleSideFieldNumber = 9;
  inline ::google::protobuf::uint32 battle_side() const;
  inline void set_battle_side(::google::protobuf::uint32 value);

  // optional .BasicUserBattleInfo battle_info = 10;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 10;
  inline const ::BasicUserBattleInfo& battle_info() const;
  inline ::BasicUserBattleInfo* mutable_battle_info();
  inline ::BasicUserBattleInfo* release_battle_info();
  inline void set_allocated_battle_info(::BasicUserBattleInfo* battle_info);

  // required uint32 next_lv = 11;
  inline bool has_next_lv() const;
  inline void clear_next_lv();
  static const int kNextLvFieldNumber = 11;
  inline ::google::protobuf::uint32 next_lv() const;
  inline void set_next_lv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BasicUserInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_orient();
  inline void clear_has_orient();
  inline void set_has_battle_side();
  inline void clear_has_battle_side();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  inline void set_has_next_lv();
  inline void clear_has_next_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 orient_;
  ::google::protobuf::uint32 battle_side_;
  ::BasicUserBattleInfo* battle_info_;
  ::google::protobuf::uint32 next_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static BasicUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSEnterMapReq : public ::google::protobuf::Message {
 public:
  CSEnterMapReq();
  virtual ~CSEnterMapReq();

  CSEnterMapReq(const CSEnterMapReq& from);

  inline CSEnterMapReq& operator=(const CSEnterMapReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnterMapReq& default_instance();

  void Swap(CSEnterMapReq* other);

  // implements Message ----------------------------------------------

  CSEnterMapReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnterMapReq& from);
  void MergeFrom(const CSEnterMapReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required uint32 xpos = 2;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 2;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);

  // required uint32 ypos = 3;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 3;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);

  // required uint32 orient = 4;
  inline bool has_orient() const;
  inline void clear_orient();
  static const int kOrientFieldNumber = 4;
  inline ::google::protobuf::uint32 orient() const;
  inline void set_orient(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSEnterMapReq)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_orient();
  inline void clear_has_orient();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 orient_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSEnterMapReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEnterMapRsp : public ::google::protobuf::Message {
 public:
  CSEnterMapRsp();
  virtual ~CSEnterMapRsp();

  CSEnterMapRsp(const CSEnterMapRsp& from);

  inline CSEnterMapRsp& operator=(const CSEnterMapRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnterMapRsp& default_instance();

  void Swap(CSEnterMapRsp* other);

  // implements Message ----------------------------------------------

  CSEnterMapRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnterMapRsp& from);
  void MergeFrom(const CSEnterMapRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required .BasicUserInfo userinfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  inline const ::BasicUserInfo& userinfo() const;
  inline ::BasicUserInfo* mutable_userinfo();
  inline ::BasicUserInfo* release_userinfo();
  inline void set_allocated_userinfo(::BasicUserInfo* userinfo);

  // @@protoc_insertion_point(class_scope:CSEnterMapRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BasicUserInfo* userinfo_;
  ::google::protobuf::uint32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSEnterMapRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSLeaveMapRsp : public ::google::protobuf::Message {
 public:
  CSLeaveMapRsp();
  virtual ~CSLeaveMapRsp();

  CSLeaveMapRsp(const CSLeaveMapRsp& from);

  inline CSLeaveMapRsp& operator=(const CSLeaveMapRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLeaveMapRsp& default_instance();

  void Swap(CSLeaveMapRsp* other);

  // implements Message ----------------------------------------------

  CSLeaveMapRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLeaveMapRsp& from);
  void MergeFrom(const CSLeaveMapRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSLeaveMapRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSLeaveMapRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMapUsersReq : public ::google::protobuf::Message {
 public:
  CSGetMapUsersReq();
  virtual ~CSGetMapUsersReq();

  CSGetMapUsersReq(const CSGetMapUsersReq& from);

  inline CSGetMapUsersReq& operator=(const CSGetMapUsersReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMapUsersReq& default_instance();

  void Swap(CSGetMapUsersReq* other);

  // implements Message ----------------------------------------------

  CSGetMapUsersReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMapUsersReq& from);
  void MergeFrom(const CSGetMapUsersReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSGetMapUsersReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetMapUsersReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMapUsersRsp : public ::google::protobuf::Message {
 public:
  CSGetMapUsersRsp();
  virtual ~CSGetMapUsersRsp();

  CSGetMapUsersRsp(const CSGetMapUsersRsp& from);

  inline CSGetMapUsersRsp& operator=(const CSGetMapUsersRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMapUsersRsp& default_instance();

  void Swap(CSGetMapUsersRsp* other);

  // implements Message ----------------------------------------------

  CSGetMapUsersRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMapUsersRsp& from);
  void MergeFrom(const CSGetMapUsersRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .BasicUserInfo userinfo = 1;
  inline int userinfo_size() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 1;
  inline const ::BasicUserInfo& userinfo(int index) const;
  inline ::BasicUserInfo* mutable_userinfo(int index);
  inline ::BasicUserInfo* add_userinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >&
      userinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >*
      mutable_userinfo();

  // @@protoc_insertion_point(class_scope:CSGetMapUsersRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::BasicUserInfo > userinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetMapUsersRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserSkillReq : public ::google::protobuf::Message {
 public:
  CSGetUserSkillReq();
  virtual ~CSGetUserSkillReq();

  CSGetUserSkillReq(const CSGetUserSkillReq& from);

  inline CSGetUserSkillReq& operator=(const CSGetUserSkillReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserSkillReq& default_instance();

  void Swap(CSGetUserSkillReq* other);

  // implements Message ----------------------------------------------

  CSGetUserSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserSkillReq& from);
  void MergeFrom(const CSGetUserSkillReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSGetUserSkillReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetUserSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserSkillRsp : public ::google::protobuf::Message {
 public:
  CSGetUserSkillRsp();
  virtual ~CSGetUserSkillRsp();

  CSGetUserSkillRsp(const CSGetUserSkillRsp& from);

  inline CSGetUserSkillRsp& operator=(const CSGetUserSkillRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserSkillRsp& default_instance();

  void Swap(CSGetUserSkillRsp* other);

  // implements Message ----------------------------------------------

  CSGetUserSkillRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserSkillRsp& from);
  void MergeFrom(const CSGetUserSkillRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // repeated .UserSkillInfo userskills = 2;
  inline int userskills_size() const;
  inline void clear_userskills();
  static const int kUserskillsFieldNumber = 2;
  inline const ::UserSkillInfo& userskills(int index) const;
  inline ::UserSkillInfo* mutable_userskills(int index);
  inline ::UserSkillInfo* add_userskills();
  inline const ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >&
      userskills() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >*
      mutable_userskills();

  // repeated uint32 ready = 3;
  inline int ready_size() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 3;
  inline ::google::protobuf::uint32 ready(int index) const;
  inline void set_ready(int index, ::google::protobuf::uint32 value);
  inline void add_ready(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ready() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ready();

  // @@protoc_insertion_point(class_scope:CSGetUserSkillRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::UserSkillInfo > userskills_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ready_;
  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetUserSkillRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserInfoReq : public ::google::protobuf::Message {
 public:
  CSGetUserInfoReq();
  virtual ~CSGetUserInfoReq();

  CSGetUserInfoReq(const CSGetUserInfoReq& from);

  inline CSGetUserInfoReq& operator=(const CSGetUserInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserInfoReq& default_instance();

  void Swap(CSGetUserInfoReq* other);

  // implements Message ----------------------------------------------

  CSGetUserInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserInfoReq& from);
  void MergeFrom(const CSGetUserInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSGetUserInfoReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetUserInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserInfoRsp : public ::google::protobuf::Message {
 public:
  CSGetUserInfoRsp();
  virtual ~CSGetUserInfoRsp();

  CSGetUserInfoRsp(const CSGetUserInfoRsp& from);

  inline CSGetUserInfoRsp& operator=(const CSGetUserInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserInfoRsp& default_instance();

  void Swap(CSGetUserInfoRsp* other);

  // implements Message ----------------------------------------------

  CSGetUserInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserInfoRsp& from);
  void MergeFrom(const CSGetUserInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // required .BasicUserInfo userinfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  inline const ::BasicUserInfo& userinfo() const;
  inline ::BasicUserInfo* mutable_userinfo();
  inline ::BasicUserInfo* release_userinfo();
  inline void set_allocated_userinfo(::BasicUserInfo* userinfo);

  // @@protoc_insertion_point(class_scope:CSGetUserInfoRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BasicUserInfo* userinfo_;
  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetUserInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddUserSkillReq : public ::google::protobuf::Message {
 public:
  CSAddUserSkillReq();
  virtual ~CSAddUserSkillReq();

  CSAddUserSkillReq(const CSAddUserSkillReq& from);

  inline CSAddUserSkillReq& operator=(const CSAddUserSkillReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddUserSkillReq& default_instance();

  void Swap(CSAddUserSkillReq* other);

  // implements Message ----------------------------------------------

  CSAddUserSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddUserSkillReq& from);
  void MergeFrom(const CSAddUserSkillReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSAddUserSkillReq)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAddUserSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAddUserSkillRsp : public ::google::protobuf::Message {
 public:
  CSAddUserSkillRsp();
  virtual ~CSAddUserSkillRsp();

  CSAddUserSkillRsp(const CSAddUserSkillRsp& from);

  inline CSAddUserSkillRsp& operator=(const CSAddUserSkillRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddUserSkillRsp& default_instance();

  void Swap(CSAddUserSkillRsp* other);

  // implements Message ----------------------------------------------

  CSAddUserSkillRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddUserSkillRsp& from);
  void MergeFrom(const CSAddUserSkillRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSAddUserSkillRsp)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAddUserSkillRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSUserSkillDiffReq : public ::google::protobuf::Message {
 public:
  CSUserSkillDiffReq();
  virtual ~CSUserSkillDiffReq();

  CSUserSkillDiffReq(const CSUserSkillDiffReq& from);

  inline CSUserSkillDiffReq& operator=(const CSUserSkillDiffReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUserSkillDiffReq& default_instance();

  void Swap(CSUserSkillDiffReq* other);

  // implements Message ----------------------------------------------

  CSUserSkillDiffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUserSkillDiffReq& from);
  void MergeFrom(const CSUserSkillDiffReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSUserSkillDiffReq)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSUserSkillDiffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSUserSkillDiffRsp : public ::google::protobuf::Message {
 public:
  CSUserSkillDiffRsp();
  virtual ~CSUserSkillDiffRsp();

  CSUserSkillDiffRsp(const CSUserSkillDiffRsp& from);

  inline CSUserSkillDiffRsp& operator=(const CSUserSkillDiffRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUserSkillDiffRsp& default_instance();

  void Swap(CSUserSkillDiffRsp* other);

  // implements Message ----------------------------------------------

  CSUserSkillDiffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUserSkillDiffRsp& from);
  void MergeFrom(const CSUserSkillDiffRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);

  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);

  // optional uint32 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // optional uint32 exploit = 4;
  inline bool has_exploit() const;
  inline void clear_exploit();
  static const int kExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 exploit() const;
  inline void set_exploit(::google::protobuf::uint32 value);

  // optional uint32 lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // optional .BasicUserBattleInfo battle_info = 6;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 6;
  inline const ::BasicUserBattleInfo& battle_info() const;
  inline ::BasicUserBattleInfo* mutable_battle_info();
  inline ::BasicUserBattleInfo* release_battle_info();
  inline void set_allocated_battle_info(::BasicUserBattleInfo* battle_info);

  // optional int32 own_cd = 7;
  inline bool has_own_cd() const;
  inline void clear_own_cd();
  static const int kOwnCdFieldNumber = 7;
  inline ::google::protobuf::int32 own_cd() const;
  inline void set_own_cd(::google::protobuf::int32 value);

  // optional int32 share_cd = 8;
  inline bool has_share_cd() const;
  inline void clear_share_cd();
  static const int kShareCdFieldNumber = 8;
  inline ::google::protobuf::int32 share_cd() const;
  inline void set_share_cd(::google::protobuf::int32 value);

  // optional int32 hurt = 9;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 9;
  inline ::google::protobuf::int32 hurt() const;
  inline void set_hurt(::google::protobuf::int32 value);

  // optional uint32 continue_time = 10;
  inline bool has_continue_time() const;
  inline void clear_continue_time();
  static const int kContinueTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 continue_time() const;
  inline void set_continue_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSUserSkillDiffRsp)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exploit();
  inline void clear_has_exploit();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  inline void set_has_own_cd();
  inline void clear_has_own_cd();
  inline void set_has_share_cd();
  inline void clear_has_share_cd();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_continue_time();
  inline void clear_has_continue_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 exploit_;
  ::BasicUserBattleInfo* battle_info_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::int32 own_cd_;
  ::google::protobuf::int32 share_cd_;
  ::google::protobuf::int32 hurt_;
  ::google::protobuf::uint32 continue_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSUserSkillDiffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSWalkReq : public ::google::protobuf::Message {
 public:
  CSWalkReq();
  virtual ~CSWalkReq();

  CSWalkReq(const CSWalkReq& from);

  inline CSWalkReq& operator=(const CSWalkReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWalkReq& default_instance();

  void Swap(CSWalkReq* other);

  // implements Message ----------------------------------------------

  CSWalkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWalkReq& from);
  void MergeFrom(const CSWalkReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 xpos = 1;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 1;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);

  // required uint32 ypos = 2;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 2;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);

  // required uint32 animid = 3;
  inline bool has_animid() const;
  inline void clear_animid();
  static const int kAnimidFieldNumber = 3;
  inline ::google::protobuf::uint32 animid() const;
  inline void set_animid(::google::protobuf::uint32 value);

  // required bool flip = 4;
  inline bool has_flip() const;
  inline void clear_flip();
  static const int kFlipFieldNumber = 4;
  inline bool flip() const;
  inline void set_flip(bool value);

  // @@protoc_insertion_point(class_scope:CSWalkReq)
 private:
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_animid();
  inline void clear_has_animid();
  inline void set_has_flip();
  inline void clear_has_flip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 animid_;
  bool flip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSWalkReq* default_instance_;
};
// -------------------------------------------------------------------

class CSWalkRsp : public ::google::protobuf::Message {
 public:
  CSWalkRsp();
  virtual ~CSWalkRsp();

  CSWalkRsp(const CSWalkRsp& from);

  inline CSWalkRsp& operator=(const CSWalkRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWalkRsp& default_instance();

  void Swap(CSWalkRsp* other);

  // implements Message ----------------------------------------------

  CSWalkRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWalkRsp& from);
  void MergeFrom(const CSWalkRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required uint32 xpos = 2;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 2;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);

  // required uint32 ypos = 3;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 3;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);

  // required uint32 animid = 4;
  inline bool has_animid() const;
  inline void clear_animid();
  static const int kAnimidFieldNumber = 4;
  inline ::google::protobuf::uint32 animid() const;
  inline void set_animid(::google::protobuf::uint32 value);

  // required bool flip = 5;
  inline bool has_flip() const;
  inline void clear_flip();
  static const int kFlipFieldNumber = 5;
  inline bool flip() const;
  inline void set_flip(bool value);

  // @@protoc_insertion_point(class_scope:CSWalkRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_animid();
  inline void clear_has_animid();
  inline void set_has_flip();
  inline void clear_has_flip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 animid_;
  bool flip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSWalkRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemAttr : public ::google::protobuf::Message {
 public:
  CSItemAttr();
  virtual ~CSItemAttr();

  CSItemAttr(const CSItemAttr& from);

  inline CSItemAttr& operator=(const CSItemAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemAttr& default_instance();

  void Swap(CSItemAttr* other);

  // implements Message ----------------------------------------------

  CSItemAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemAttr& from);
  void MergeFrom(const CSItemAttr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 attr_key = 1;
  inline bool has_attr_key() const;
  inline void clear_attr_key();
  static const int kAttrKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 attr_key() const;
  inline void set_attr_key(::google::protobuf::uint32 value);

  // required uint32 attr_basic_value = 2;
  inline bool has_attr_basic_value() const;
  inline void clear_attr_basic_value();
  static const int kAttrBasicValueFieldNumber = 2;
  inline ::google::protobuf::uint32 attr_basic_value() const;
  inline void set_attr_basic_value(::google::protobuf::uint32 value);

  // optional uint32 attr_intensify_value = 3;
  inline bool has_attr_intensify_value() const;
  inline void clear_attr_intensify_value();
  static const int kAttrIntensifyValueFieldNumber = 3;
  inline ::google::protobuf::uint32 attr_intensify_value() const;
  inline void set_attr_intensify_value(::google::protobuf::uint32 value);

  // optional uint32 attr_gem_value = 4;
  inline bool has_attr_gem_value() const;
  inline void clear_attr_gem_value();
  static const int kAttrGemValueFieldNumber = 4;
  inline ::google::protobuf::uint32 attr_gem_value() const;
  inline void set_attr_gem_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSItemAttr)
 private:
  inline void set_has_attr_key();
  inline void clear_has_attr_key();
  inline void set_has_attr_basic_value();
  inline void clear_has_attr_basic_value();
  inline void set_has_attr_intensify_value();
  inline void clear_has_attr_intensify_value();
  inline void set_has_attr_gem_value();
  inline void clear_has_attr_gem_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 attr_key_;
  ::google::protobuf::uint32 attr_basic_value_;
  ::google::protobuf::uint32 attr_intensify_value_;
  ::google::protobuf::uint32 attr_gem_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemAttr* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipHole : public ::google::protobuf::Message {
 public:
  CSEquipHole();
  virtual ~CSEquipHole();

  CSEquipHole(const CSEquipHole& from);

  inline CSEquipHole& operator=(const CSEquipHole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipHole& default_instance();

  void Swap(CSEquipHole* other);

  // implements Message ----------------------------------------------

  CSEquipHole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipHole& from);
  void MergeFrom(const CSEquipHole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hole_index = 1;
  inline bool has_hole_index() const;
  inline void clear_hole_index();
  static const int kHoleIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 hole_index() const;
  inline void set_hole_index(::google::protobuf::uint32 value);

  // required uint32 item_gem_id = 2;
  inline bool has_item_gem_id() const;
  inline void clear_item_gem_id();
  static const int kItemGemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_gem_id() const;
  inline void set_item_gem_id(::google::protobuf::uint32 value);

  // required uint32 attr_key = 3;
  inline bool has_attr_key() const;
  inline void clear_attr_key();
  static const int kAttrKeyFieldNumber = 3;
  inline ::google::protobuf::uint32 attr_key() const;
  inline void set_attr_key(::google::protobuf::uint32 value);

  // required uint32 attr_value = 4;
  inline bool has_attr_value() const;
  inline void clear_attr_value();
  static const int kAttrValueFieldNumber = 4;
  inline ::google::protobuf::uint32 attr_value() const;
  inline void set_attr_value(::google::protobuf::uint32 value);

  // optional uint32 attr_min_v = 5;
  inline bool has_attr_min_v() const;
  inline void clear_attr_min_v();
  static const int kAttrMinVFieldNumber = 5;
  inline ::google::protobuf::uint32 attr_min_v() const;
  inline void set_attr_min_v(::google::protobuf::uint32 value);

  // optional uint32 attr_max_v = 6;
  inline bool has_attr_max_v() const;
  inline void clear_attr_max_v();
  static const int kAttrMaxVFieldNumber = 6;
  inline ::google::protobuf::uint32 attr_max_v() const;
  inline void set_attr_max_v(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSEquipHole)
 private:
  inline void set_has_hole_index();
  inline void clear_has_hole_index();
  inline void set_has_item_gem_id();
  inline void clear_has_item_gem_id();
  inline void set_has_attr_key();
  inline void clear_has_attr_key();
  inline void set_has_attr_value();
  inline void clear_has_attr_value();
  inline void set_has_attr_min_v();
  inline void clear_has_attr_min_v();
  inline void set_has_attr_max_v();
  inline void clear_has_attr_max_v();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hole_index_;
  ::google::protobuf::uint32 item_gem_id_;
  ::google::protobuf::uint32 attr_key_;
  ::google::protobuf::uint32 attr_value_;
  ::google::protobuf::uint32 attr_min_v_;
  ::google::protobuf::uint32 attr_max_v_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSEquipHole* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentBase_Item_Attr : public ::google::protobuf::Message {
 public:
  EquipmentBase_Item_Attr();
  virtual ~EquipmentBase_Item_Attr();

  EquipmentBase_Item_Attr(const EquipmentBase_Item_Attr& from);

  inline EquipmentBase_Item_Attr& operator=(const EquipmentBase_Item_Attr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentBase_Item_Attr& default_instance();

  void Swap(EquipmentBase_Item_Attr* other);

  // implements Message ----------------------------------------------

  EquipmentBase_Item_Attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentBase_Item_Attr& from);
  void MergeFrom(const EquipmentBase_Item_Attr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EquipmentBase.Item_Attr)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static EquipmentBase_Item_Attr* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentBase : public ::google::protobuf::Message {
 public:
  EquipmentBase();
  virtual ~EquipmentBase();

  EquipmentBase(const EquipmentBase& from);

  inline EquipmentBase& operator=(const EquipmentBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentBase& default_instance();

  void Swap(EquipmentBase* other);

  // implements Message ----------------------------------------------

  EquipmentBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentBase& from);
  void MergeFrom(const EquipmentBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EquipmentBase_Item_Attr Item_Attr;

  // accessors -------------------------------------------------------

  // required uint32 cost_levelup = 1;
  inline bool has_cost_levelup() const;
  inline void clear_cost_levelup();
  static const int kCostLevelupFieldNumber = 1;
  inline ::google::protobuf::uint32 cost_levelup() const;
  inline void set_cost_levelup(::google::protobuf::uint32 value);

  // repeated .EquipmentBase.Item_Attr incr_attr_next_lv = 2;
  inline int incr_attr_next_lv_size() const;
  inline void clear_incr_attr_next_lv();
  static const int kIncrAttrNextLvFieldNumber = 2;
  inline const ::EquipmentBase_Item_Attr& incr_attr_next_lv(int index) const;
  inline ::EquipmentBase_Item_Attr* mutable_incr_attr_next_lv(int index);
  inline ::EquipmentBase_Item_Attr* add_incr_attr_next_lv();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >&
      incr_attr_next_lv() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >*
      mutable_incr_attr_next_lv();

  // repeated .CSEquipHole equip_holes = 3;
  inline int equip_holes_size() const;
  inline void clear_equip_holes();
  static const int kEquipHolesFieldNumber = 3;
  inline const ::CSEquipHole& equip_holes(int index) const;
  inline ::CSEquipHole* mutable_equip_holes(int index);
  inline ::CSEquipHole* add_equip_holes();
  inline const ::google::protobuf::RepeatedPtrField< ::CSEquipHole >&
      equip_holes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSEquipHole >*
      mutable_equip_holes();

  // @@protoc_insertion_point(class_scope:EquipmentBase)
 private:
  inline void set_has_cost_levelup();
  inline void clear_has_cost_levelup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr > incr_attr_next_lv_;
  ::google::protobuf::RepeatedPtrField< ::CSEquipHole > equip_holes_;
  ::google::protobuf::uint32 cost_levelup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static EquipmentBase* default_instance_;
};
// -------------------------------------------------------------------

class SpiritStoneBase : public ::google::protobuf::Message {
 public:
  SpiritStoneBase();
  virtual ~SpiritStoneBase();

  SpiritStoneBase(const SpiritStoneBase& from);

  inline SpiritStoneBase& operator=(const SpiritStoneBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritStoneBase& default_instance();

  void Swap(SpiritStoneBase* other);

  // implements Message ----------------------------------------------

  SpiritStoneBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritStoneBase& from);
  void MergeFrom(const SpiritStoneBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 consume = 1;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 1;
  inline ::google::protobuf::uint32 consume() const;
  inline void set_consume(::google::protobuf::uint32 value);

  // required uint32 convert = 2;
  inline bool has_convert() const;
  inline void clear_convert();
  static const int kConvertFieldNumber = 2;
  inline ::google::protobuf::uint32 convert() const;
  inline void set_convert(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SpiritStoneBase)
 private:
  inline void set_has_consume();
  inline void clear_has_consume();
  inline void set_has_convert();
  inline void clear_has_convert();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 consume_;
  ::google::protobuf::uint32 convert_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static SpiritStoneBase* default_instance_;
};
// -------------------------------------------------------------------

class ManorBase : public ::google::protobuf::Message {
 public:
  ManorBase();
  virtual ~ManorBase();

  ManorBase(const ManorBase& from);

  inline ManorBase& operator=(const ManorBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorBase& default_instance();

  void Swap(ManorBase* other);

  // implements Message ----------------------------------------------

  ManorBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorBase& from);
  void MergeFrom(const ManorBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hunt_gain_coin = 1;
  inline bool has_hunt_gain_coin() const;
  inline void clear_hunt_gain_coin();
  static const int kHuntGainCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 hunt_gain_coin() const;
  inline void set_hunt_gain_coin(::google::protobuf::uint32 value);

  // required uint32 pick_gain_exp = 2;
  inline bool has_pick_gain_exp() const;
  inline void clear_pick_gain_exp();
  static const int kPickGainExpFieldNumber = 2;
  inline ::google::protobuf::uint32 pick_gain_exp() const;
  inline void set_pick_gain_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ManorBase)
 private:
  inline void set_has_hunt_gain_coin();
  inline void clear_has_hunt_gain_coin();
  inline void set_has_pick_gain_exp();
  inline void clear_has_pick_gain_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hunt_gain_coin_;
  ::google::protobuf::uint32 pick_gain_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static ManorBase* default_instance_;
};
// -------------------------------------------------------------------

class CSItemInfo : public ::google::protobuf::Message {
 public:
  CSItemInfo();
  virtual ~CSItemInfo();

  CSItemInfo(const CSItemInfo& from);

  inline CSItemInfo& operator=(const CSItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemInfo& default_instance();

  void Swap(CSItemInfo* other);

  // implements Message ----------------------------------------------

  CSItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemInfo& from);
  void MergeFrom(const CSItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // required uint32 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);

  // optional uint32 item_level = 4;
  inline bool has_item_level() const;
  inline void clear_item_level();
  static const int kItemLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 item_level() const;
  inline void set_item_level(::google::protobuf::uint32 value);

  // repeated .CSItemAttr item_attrs = 5;
  inline int item_attrs_size() const;
  inline void clear_item_attrs();
  static const int kItemAttrsFieldNumber = 5;
  inline const ::CSItemAttr& item_attrs(int index) const;
  inline ::CSItemAttr* mutable_item_attrs(int index);
  inline ::CSItemAttr* add_item_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemAttr >&
      item_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemAttr >*
      mutable_item_attrs();

  // optional .EquipmentBase equip_info = 6;
  inline bool has_equip_info() const;
  inline void clear_equip_info();
  static const int kEquipInfoFieldNumber = 6;
  inline const ::EquipmentBase& equip_info() const;
  inline ::EquipmentBase* mutable_equip_info();
  inline ::EquipmentBase* release_equip_info();
  inline void set_allocated_equip_info(::EquipmentBase* equip_info);

  // optional .SpiritStoneBase ss_info = 7;
  inline bool has_ss_info() const;
  inline void clear_ss_info();
  static const int kSsInfoFieldNumber = 7;
  inline const ::SpiritStoneBase& ss_info() const;
  inline ::SpiritStoneBase* mutable_ss_info();
  inline ::SpiritStoneBase* release_ss_info();
  inline void set_allocated_ss_info(::SpiritStoneBase* ss_info);

  // optional .ManorBase manor_info = 8;
  inline bool has_manor_info() const;
  inline void clear_manor_info();
  static const int kManorInfoFieldNumber = 8;
  inline const ::ManorBase& manor_info() const;
  inline ::ManorBase* mutable_manor_info();
  inline ::ManorBase* release_manor_info();
  inline void set_allocated_manor_info(::ManorBase* manor_info);

  // @@protoc_insertion_point(class_scope:CSItemInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_item_level();
  inline void clear_has_item_level();
  inline void set_has_equip_info();
  inline void clear_has_equip_info();
  inline void set_has_ss_info();
  inline void clear_has_ss_info();
  inline void set_has_manor_info();
  inline void clear_has_manor_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::RepeatedPtrField< ::CSItemAttr > item_attrs_;
  ::EquipmentBase* equip_info_;
  ::SpiritStoneBase* ss_info_;
  ::ManorBase* manor_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSAllItemsReq : public ::google::protobuf::Message {
 public:
  CSAllItemsReq();
  virtual ~CSAllItemsReq();

  CSAllItemsReq(const CSAllItemsReq& from);

  inline CSAllItemsReq& operator=(const CSAllItemsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAllItemsReq& default_instance();

  void Swap(CSAllItemsReq* other);

  // implements Message ----------------------------------------------

  CSAllItemsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAllItemsReq& from);
  void MergeFrom(const CSAllItemsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSAllItemsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAllItemsReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAllItemsRsp : public ::google::protobuf::Message {
 public:
  CSAllItemsRsp();
  virtual ~CSAllItemsRsp();

  CSAllItemsRsp(const CSAllItemsRsp& from);

  inline CSAllItemsRsp& operator=(const CSAllItemsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAllItemsRsp& default_instance();

  void Swap(CSAllItemsRsp* other);

  // implements Message ----------------------------------------------

  CSAllItemsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAllItemsRsp& from);
  void MergeFrom(const CSAllItemsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 def_bag_size = 1;
  inline bool has_def_bag_size() const;
  inline void clear_def_bag_size();
  static const int kDefBagSizeFieldNumber = 1;
  inline ::google::protobuf::uint32 def_bag_size() const;
  inline void set_def_bag_size(::google::protobuf::uint32 value);

  // required uint32 def_store_size = 2;
  inline bool has_def_store_size() const;
  inline void clear_def_store_size();
  static const int kDefStoreSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 def_store_size() const;
  inline void set_def_store_size(::google::protobuf::uint32 value);

  // required uint32 def_ss_bag_size = 3;
  inline bool has_def_ss_bag_size() const;
  inline void clear_def_ss_bag_size();
  static const int kDefSsBagSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 def_ss_bag_size() const;
  inline void set_def_ss_bag_size(::google::protobuf::uint32 value);

  // required uint32 def_ss_store_size = 4;
  inline bool has_def_ss_store_size() const;
  inline void clear_def_ss_store_size();
  static const int kDefSsStoreSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 def_ss_store_size() const;
  inline void set_def_ss_store_size(::google::protobuf::uint32 value);

  // required uint32 def_equip_lvup_max_times = 5;
  inline bool has_def_equip_lvup_max_times() const;
  inline void clear_def_equip_lvup_max_times();
  static const int kDefEquipLvupMaxTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 def_equip_lvup_max_times() const;
  inline void set_def_equip_lvup_max_times(::google::protobuf::uint32 value);

  // required uint32 def_reset_gem_times = 6;
  inline bool has_def_reset_gem_times() const;
  inline void clear_def_reset_gem_times();
  static const int kDefResetGemTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 def_reset_gem_times() const;
  inline void set_def_reset_gem_times(::google::protobuf::uint32 value);

  // required uint32 def_enter_manor_times = 7;
  inline bool has_def_enter_manor_times() const;
  inline void clear_def_enter_manor_times();
  static const int kDefEnterManorTimesFieldNumber = 7;
  inline ::google::protobuf::uint32 def_enter_manor_times() const;
  inline void set_def_enter_manor_times(::google::protobuf::uint32 value);

  // repeated .CSItemInfo items = 15;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 15;
  inline const ::CSItemInfo& items(int index) const;
  inline ::CSItemInfo* mutable_items(int index);
  inline ::CSItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:CSAllItemsRsp)
 private:
  inline void set_has_def_bag_size();
  inline void clear_has_def_bag_size();
  inline void set_has_def_store_size();
  inline void clear_has_def_store_size();
  inline void set_has_def_ss_bag_size();
  inline void clear_has_def_ss_bag_size();
  inline void set_has_def_ss_store_size();
  inline void clear_has_def_ss_store_size();
  inline void set_has_def_equip_lvup_max_times();
  inline void clear_has_def_equip_lvup_max_times();
  inline void set_has_def_reset_gem_times();
  inline void clear_has_def_reset_gem_times();
  inline void set_has_def_enter_manor_times();
  inline void clear_has_def_enter_manor_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 def_bag_size_;
  ::google::protobuf::uint32 def_store_size_;
  ::google::protobuf::uint32 def_ss_bag_size_;
  ::google::protobuf::uint32 def_ss_store_size_;
  ::google::protobuf::uint32 def_equip_lvup_max_times_;
  ::google::protobuf::uint32 def_reset_gem_times_;
  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > items_;
  ::google::protobuf::uint32 def_enter_manor_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAllItemsRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemAddRsp : public ::google::protobuf::Message {
 public:
  CSItemAddRsp();
  virtual ~CSItemAddRsp();

  CSItemAddRsp(const CSItemAddRsp& from);

  inline CSItemAddRsp& operator=(const CSItemAddRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemAddRsp& default_instance();

  void Swap(CSItemAddRsp* other);

  // implements Message ----------------------------------------------

  CSItemAddRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemAddRsp& from);
  void MergeFrom(const CSItemAddRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::CSItemInfo& items(int index) const;
  inline ::CSItemInfo* mutable_items(int index);
  inline ::CSItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:CSItemAddRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemAddRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemRemoveReq : public ::google::protobuf::Message {
 public:
  CSItemRemoveReq();
  virtual ~CSItemRemoveReq();

  CSItemRemoveReq(const CSItemRemoveReq& from);

  inline CSItemRemoveReq& operator=(const CSItemRemoveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemRemoveReq& default_instance();

  void Swap(CSItemRemoveReq* other);

  // implements Message ----------------------------------------------

  CSItemRemoveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemRemoveReq& from);
  void MergeFrom(const CSItemRemoveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSItemRemoveReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemRemoveReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemRemoveRsp : public ::google::protobuf::Message {
 public:
  CSItemRemoveRsp();
  virtual ~CSItemRemoveRsp();

  CSItemRemoveRsp(const CSItemRemoveRsp& from);

  inline CSItemRemoveRsp& operator=(const CSItemRemoveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemRemoveRsp& default_instance();

  void Swap(CSItemRemoveRsp* other);

  // implements Message ----------------------------------------------

  CSItemRemoveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemRemoveRsp& from);
  void MergeFrom(const CSItemRemoveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSItemRemoveRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemRemoveRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemUseReq : public ::google::protobuf::Message {
 public:
  CSItemUseReq();
  virtual ~CSItemUseReq();

  CSItemUseReq(const CSItemUseReq& from);

  inline CSItemUseReq& operator=(const CSItemUseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemUseReq& default_instance();

  void Swap(CSItemUseReq* other);

  // implements Message ----------------------------------------------

  CSItemUseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemUseReq& from);
  void MergeFrom(const CSItemUseReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSItemUseReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemUseReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveReq : public ::google::protobuf::Message {
 public:
  CSItemMoveReq();
  virtual ~CSItemMoveReq();

  CSItemMoveReq(const CSItemMoveReq& from);

  inline CSItemMoveReq& operator=(const CSItemMoveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveReq& default_instance();

  void Swap(CSItemMoveReq* other);

  // implements Message ----------------------------------------------

  CSItemMoveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveReq& from);
  void MergeFrom(const CSItemMoveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos_from = 1;
  inline bool has_pos_from() const;
  inline void clear_pos_from();
  static const int kPosFromFieldNumber = 1;
  inline ::google::protobuf::uint32 pos_from() const;
  inline void set_pos_from(::google::protobuf::uint32 value);

  // required uint32 pos_to = 2;
  inline bool has_pos_to() const;
  inline void clear_pos_to();
  static const int kPosToFieldNumber = 2;
  inline ::google::protobuf::uint32 pos_to() const;
  inline void set_pos_to(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSItemMoveReq)
 private:
  inline void set_has_pos_from();
  inline void clear_has_pos_from();
  inline void set_has_pos_to();
  inline void clear_has_pos_to();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_from_;
  ::google::protobuf::uint32 pos_to_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemMoveReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveRsp : public ::google::protobuf::Message {
 public:
  CSItemMoveRsp();
  virtual ~CSItemMoveRsp();

  CSItemMoveRsp(const CSItemMoveRsp& from);

  inline CSItemMoveRsp& operator=(const CSItemMoveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveRsp& default_instance();

  void Swap(CSItemMoveRsp* other);

  // implements Message ----------------------------------------------

  CSItemMoveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveRsp& from);
  void MergeFrom(const CSItemMoveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos_from = 1;
  inline bool has_pos_from() const;
  inline void clear_pos_from();
  static const int kPosFromFieldNumber = 1;
  inline ::google::protobuf::uint32 pos_from() const;
  inline void set_pos_from(::google::protobuf::uint32 value);

  // required uint32 pos_to = 2;
  inline bool has_pos_to() const;
  inline void clear_pos_to();
  static const int kPosToFieldNumber = 2;
  inline ::google::protobuf::uint32 pos_to() const;
  inline void set_pos_to(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSItemMoveRsp)
 private:
  inline void set_has_pos_from();
  inline void clear_has_pos_from();
  inline void set_has_pos_to();
  inline void clear_has_pos_to();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_from_;
  ::google::protobuf::uint32 pos_to_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemMoveRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemUpdateRsp : public ::google::protobuf::Message {
 public:
  CSItemUpdateRsp();
  virtual ~CSItemUpdateRsp();

  CSItemUpdateRsp(const CSItemUpdateRsp& from);

  inline CSItemUpdateRsp& operator=(const CSItemUpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemUpdateRsp& default_instance();

  void Swap(CSItemUpdateRsp* other);

  // implements Message ----------------------------------------------

  CSItemUpdateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemUpdateRsp& from);
  void MergeFrom(const CSItemUpdateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CSItemInfo item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::CSItemInfo& item(int index) const;
  inline ::CSItemInfo* mutable_item(int index);
  inline ::CSItemInfo* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_item();

  // @@protoc_insertion_point(class_scope:CSItemUpdateRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemUpdateRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemOrderReq : public ::google::protobuf::Message {
 public:
  CSItemOrderReq();
  virtual ~CSItemOrderReq();

  CSItemOrderReq(const CSItemOrderReq& from);

  inline CSItemOrderReq& operator=(const CSItemOrderReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemOrderReq& default_instance();

  void Swap(CSItemOrderReq* other);

  // implements Message ----------------------------------------------

  CSItemOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemOrderReq& from);
  void MergeFrom(const CSItemOrderReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline ::google::protobuf::uint32 target() const;
  inline void set_target(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSItemOrderReq)
 private:
  inline void set_has_target();
  inline void clear_has_target();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 target_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSItemOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceReq : public ::google::protobuf::Message {
 public:
  CSInstanceReq();
  virtual ~CSInstanceReq();

  CSInstanceReq(const CSInstanceReq& from);

  inline CSInstanceReq& operator=(const CSInstanceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceReq& default_instance();

  void Swap(CSInstanceReq* other);

  // implements Message ----------------------------------------------

  CSInstanceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceReq& from);
  void MergeFrom(const CSInstanceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 start = 1;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 1;
  inline ::google::protobuf::uint32 start() const;
  inline void set_start(::google::protobuf::uint32 value);

  // required uint32 end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline ::google::protobuf::uint32 end() const;
  inline void set_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSInstanceReq)
 private:
  inline void set_has_start();
  inline void clear_has_start();
  inline void set_has_end();
  inline void clear_has_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 start_;
  ::google::protobuf::uint32 end_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSInstanceReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceRsp_CSInstance : public ::google::protobuf::Message {
 public:
  CSInstanceRsp_CSInstance();
  virtual ~CSInstanceRsp_CSInstance();

  CSInstanceRsp_CSInstance(const CSInstanceRsp_CSInstance& from);

  inline CSInstanceRsp_CSInstance& operator=(const CSInstanceRsp_CSInstance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceRsp_CSInstance& default_instance();

  void Swap(CSInstanceRsp_CSInstance* other);

  // implements Message ----------------------------------------------

  CSInstanceRsp_CSInstance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceRsp_CSInstance& from);
  void MergeFrom(const CSInstanceRsp_CSInstance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 instance_id = 1;
  inline bool has_instance_id() const;
  inline void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_id() const;
  inline void set_instance_id(::google::protobuf::uint32 value);

  // required bool activate = 2;
  inline bool has_activate() const;
  inline void clear_activate();
  static const int kActivateFieldNumber = 2;
  inline bool activate() const;
  inline void set_activate(bool value);

  // required uint32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSInstanceRsp.CSInstance)
 private:
  inline void set_has_instance_id();
  inline void clear_has_instance_id();
  inline void set_has_activate();
  inline void clear_has_activate();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 instance_id_;
  bool activate_;
  ::google::protobuf::uint32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSInstanceRsp_CSInstance* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceRsp : public ::google::protobuf::Message {
 public:
  CSInstanceRsp();
  virtual ~CSInstanceRsp();

  CSInstanceRsp(const CSInstanceRsp& from);

  inline CSInstanceRsp& operator=(const CSInstanceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceRsp& default_instance();

  void Swap(CSInstanceRsp* other);

  // implements Message ----------------------------------------------

  CSInstanceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceRsp& from);
  void MergeFrom(const CSInstanceRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSInstanceRsp_CSInstance CSInstance;

  // accessors -------------------------------------------------------

  // repeated .CSInstanceRsp.CSInstance instances = 1;
  inline int instances_size() const;
  inline void clear_instances();
  static const int kInstancesFieldNumber = 1;
  inline const ::CSInstanceRsp_CSInstance& instances(int index) const;
  inline ::CSInstanceRsp_CSInstance* mutable_instances(int index);
  inline ::CSInstanceRsp_CSInstance* add_instances();
  inline const ::google::protobuf::RepeatedPtrField< ::CSInstanceRsp_CSInstance >&
      instances() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSInstanceRsp_CSInstance >*
      mutable_instances();

  // @@protoc_insertion_point(class_scope:CSInstanceRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSInstanceRsp_CSInstance > instances_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSInstanceRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSReward_RewardInfo : public ::google::protobuf::Message {
 public:
  CSReward_RewardInfo();
  virtual ~CSReward_RewardInfo();

  CSReward_RewardInfo(const CSReward_RewardInfo& from);

  inline CSReward_RewardInfo& operator=(const CSReward_RewardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSReward_RewardInfo& default_instance();

  void Swap(CSReward_RewardInfo* other);

  // implements Message ----------------------------------------------

  CSReward_RewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSReward_RewardInfo& from);
  void MergeFrom(const CSReward_RewardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // required uint32 item_level = 2;
  inline bool has_item_level() const;
  inline void clear_item_level();
  static const int kItemLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 item_level() const;
  inline void set_item_level(::google::protobuf::uint32 value);

  // required uint32 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSReward.RewardInfo)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_level();
  inline void clear_has_item_level();
  inline void set_has_item_num();
  inline void clear_has_item_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::uint32 item_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSReward_RewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSReward : public ::google::protobuf::Message {
 public:
  CSReward();
  virtual ~CSReward();

  CSReward(const CSReward& from);

  inline CSReward& operator=(const CSReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSReward& default_instance();

  void Swap(CSReward* other);

  // implements Message ----------------------------------------------

  CSReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSReward& from);
  void MergeFrom(const CSReward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSReward_RewardInfo RewardInfo;

  // accessors -------------------------------------------------------

  // repeated .CSReward.RewardInfo rewards = 1;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::CSReward_RewardInfo& rewards(int index) const;
  inline ::CSReward_RewardInfo* mutable_rewards(int index);
  inline ::CSReward_RewardInfo* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >*
      mutable_rewards();

  // optional uint32 add_coin = 2;
  inline bool has_add_coin() const;
  inline void clear_add_coin();
  static const int kAddCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 add_coin() const;
  inline void set_add_coin(::google::protobuf::uint32 value);

  // optional uint32 add_exp = 3;
  inline bool has_add_exp() const;
  inline void clear_add_exp();
  static const int kAddExpFieldNumber = 3;
  inline ::google::protobuf::uint32 add_exp() const;
  inline void set_add_exp(::google::protobuf::uint32 value);

  // optional uint32 add_exploit = 4;
  inline bool has_add_exploit() const;
  inline void clear_add_exploit();
  static const int kAddExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 add_exploit() const;
  inline void set_add_exploit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSReward)
 private:
  inline void set_has_add_coin();
  inline void clear_has_add_coin();
  inline void set_has_add_exp();
  inline void clear_has_add_exp();
  inline void set_has_add_exploit();
  inline void clear_has_add_exploit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo > rewards_;
  ::google::protobuf::uint32 add_coin_;
  ::google::protobuf::uint32 add_exp_;
  ::google::protobuf::uint32 add_exploit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSReward* default_instance_;
};
// -------------------------------------------------------------------

class CSLevelUpRsp : public ::google::protobuf::Message {
 public:
  CSLevelUpRsp();
  virtual ~CSLevelUpRsp();

  CSLevelUpRsp(const CSLevelUpRsp& from);

  inline CSLevelUpRsp& operator=(const CSLevelUpRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLevelUpRsp& default_instance();

  void Swap(CSLevelUpRsp* other);

  // implements Message ----------------------------------------------

  CSLevelUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLevelUpRsp& from);
  void MergeFrom(const CSLevelUpRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSLevelUpRsp)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSLevelUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBasicUserBattleInfoRsp : public ::google::protobuf::Message {
 public:
  CSBasicUserBattleInfoRsp();
  virtual ~CSBasicUserBattleInfoRsp();

  CSBasicUserBattleInfoRsp(const CSBasicUserBattleInfoRsp& from);

  inline CSBasicUserBattleInfoRsp& operator=(const CSBasicUserBattleInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBasicUserBattleInfoRsp& default_instance();

  void Swap(CSBasicUserBattleInfoRsp* other);

  // implements Message ----------------------------------------------

  CSBasicUserBattleInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBasicUserBattleInfoRsp& from);
  void MergeFrom(const CSBasicUserBattleInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .BasicUserBattleInfo battle_info = 1;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 1;
  inline const ::BasicUserBattleInfo& battle_info() const;
  inline ::BasicUserBattleInfo* mutable_battle_info();
  inline ::BasicUserBattleInfo* release_battle_info();
  inline void set_allocated_battle_info(::BasicUserBattleInfo* battle_info);

  // @@protoc_insertion_point(class_scope:CSBasicUserBattleInfoRsp)
 private:
  inline void set_has_battle_info();
  inline void clear_has_battle_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::BasicUserBattleInfo* battle_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSBasicUserBattleInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSearchSpiritStoneReq : public ::google::protobuf::Message {
 public:
  CSSearchSpiritStoneReq();
  virtual ~CSSearchSpiritStoneReq();

  CSSearchSpiritStoneReq(const CSSearchSpiritStoneReq& from);

  inline CSSearchSpiritStoneReq& operator=(const CSSearchSpiritStoneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSearchSpiritStoneReq& default_instance();

  void Swap(CSSearchSpiritStoneReq* other);

  // implements Message ----------------------------------------------

  CSSearchSpiritStoneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSearchSpiritStoneReq& from);
  void MergeFrom(const CSSearchSpiritStoneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSSearchSpiritStoneReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSearchSpiritStoneReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSearchSpiritStoneRsp : public ::google::protobuf::Message {
 public:
  CSSearchSpiritStoneRsp();
  virtual ~CSSearchSpiritStoneRsp();

  CSSearchSpiritStoneRsp(const CSSearchSpiritStoneRsp& from);

  inline CSSearchSpiritStoneRsp& operator=(const CSSearchSpiritStoneRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSearchSpiritStoneRsp& default_instance();

  void Swap(CSSearchSpiritStoneRsp* other);

  // implements Message ----------------------------------------------

  CSSearchSpiritStoneRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSearchSpiritStoneRsp& from);
  void MergeFrom(const CSSearchSpiritStoneRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint32 cost_coin = 2;
  inline bool has_cost_coin() const;
  inline void clear_cost_coin();
  static const int kCostCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 cost_coin() const;
  inline void set_cost_coin(::google::protobuf::uint32 value);

  // optional uint32 mon_id = 3;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 3;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);

  // optional uint32 item_id = 4;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSearchSpiritStoneRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cost_coin();
  inline void clear_has_cost_coin();
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 cost_coin_;
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 item_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSearchSpiritStoneRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneMoveBagReq : public ::google::protobuf::Message {
 public:
  CSSpiritStoneMoveBagReq();
  virtual ~CSSpiritStoneMoveBagReq();

  CSSpiritStoneMoveBagReq(const CSSpiritStoneMoveBagReq& from);

  inline CSSpiritStoneMoveBagReq& operator=(const CSSpiritStoneMoveBagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneMoveBagReq& default_instance();

  void Swap(CSSpiritStoneMoveBagReq* other);

  // implements Message ----------------------------------------------

  CSSpiritStoneMoveBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneMoveBagReq& from);
  void MergeFrom(const CSSpiritStoneMoveBagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSpiritStoneMoveBagReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSpiritStoneMoveBagReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneMoveBagRsp : public ::google::protobuf::Message {
 public:
  CSSpiritStoneMoveBagRsp();
  virtual ~CSSpiritStoneMoveBagRsp();

  CSSpiritStoneMoveBagRsp(const CSSpiritStoneMoveBagRsp& from);

  inline CSSpiritStoneMoveBagRsp& operator=(const CSSpiritStoneMoveBagRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneMoveBagRsp& default_instance();

  void Swap(CSSpiritStoneMoveBagRsp* other);

  // implements Message ----------------------------------------------

  CSSpiritStoneMoveBagRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneMoveBagRsp& from);
  void MergeFrom(const CSSpiritStoneMoveBagRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSpiritStoneMoveBagRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSpiritStoneMoveBagRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneLevelUpReq : public ::google::protobuf::Message {
 public:
  CSSpiritStoneLevelUpReq();
  virtual ~CSSpiritStoneLevelUpReq();

  CSSpiritStoneLevelUpReq(const CSSpiritStoneLevelUpReq& from);

  inline CSSpiritStoneLevelUpReq& operator=(const CSSpiritStoneLevelUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneLevelUpReq& default_instance();

  void Swap(CSSpiritStoneLevelUpReq* other);

  // implements Message ----------------------------------------------

  CSSpiritStoneLevelUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneLevelUpReq& from);
  void MergeFrom(const CSSpiritStoneLevelUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSpiritStoneLevelUpReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSpiritStoneLevelUpReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneLevelUpRsp : public ::google::protobuf::Message {
 public:
  CSSpiritStoneLevelUpRsp();
  virtual ~CSSpiritStoneLevelUpRsp();

  CSSpiritStoneLevelUpRsp(const CSSpiritStoneLevelUpRsp& from);

  inline CSSpiritStoneLevelUpRsp& operator=(const CSSpiritStoneLevelUpRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneLevelUpRsp& default_instance();

  void Swap(CSSpiritStoneLevelUpRsp* other);

  // implements Message ----------------------------------------------

  CSSpiritStoneLevelUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneLevelUpRsp& from);
  void MergeFrom(const CSSpiritStoneLevelUpRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // required uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 cost_sp = 3;
  inline bool has_cost_sp() const;
  inline void clear_cost_sp();
  static const int kCostSpFieldNumber = 3;
  inline ::google::protobuf::uint32 cost_sp() const;
  inline void set_cost_sp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSpiritStoneLevelUpRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cost_sp();
  inline void clear_has_cost_sp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 cost_sp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSpiritStoneLevelUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneToSPReq : public ::google::protobuf::Message {
 public:
  CSSpiritStoneToSPReq();
  virtual ~CSSpiritStoneToSPReq();

  CSSpiritStoneToSPReq(const CSSpiritStoneToSPReq& from);

  inline CSSpiritStoneToSPReq& operator=(const CSSpiritStoneToSPReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneToSPReq& default_instance();

  void Swap(CSSpiritStoneToSPReq* other);

  // implements Message ----------------------------------------------

  CSSpiritStoneToSPReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneToSPReq& from);
  void MergeFrom(const CSSpiritStoneToSPReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSpiritStoneToSPReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSpiritStoneToSPReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneToSPRsp : public ::google::protobuf::Message {
 public:
  CSSpiritStoneToSPRsp();
  virtual ~CSSpiritStoneToSPRsp();

  CSSpiritStoneToSPRsp(const CSSpiritStoneToSPRsp& from);

  inline CSSpiritStoneToSPRsp& operator=(const CSSpiritStoneToSPRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneToSPRsp& default_instance();

  void Swap(CSSpiritStoneToSPRsp* other);

  // implements Message ----------------------------------------------

  CSSpiritStoneToSPRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneToSPRsp& from);
  void MergeFrom(const CSSpiritStoneToSPRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint32 sp_key = 2;
  inline bool has_sp_key() const;
  inline void clear_sp_key();
  static const int kSpKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 sp_key() const;
  inline void set_sp_key(::google::protobuf::uint32 value);

  // optional uint32 sp_value = 3;
  inline bool has_sp_value() const;
  inline void clear_sp_value();
  static const int kSpValueFieldNumber = 3;
  inline ::google::protobuf::uint32 sp_value() const;
  inline void set_sp_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSpiritStoneToSPRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_sp_key();
  inline void clear_has_sp_key();
  inline void set_has_sp_value();
  inline void clear_has_sp_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 sp_key_;
  ::google::protobuf::uint32 sp_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSpiritStoneToSPRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExchangeSSInfoReq : public ::google::protobuf::Message {
 public:
  CSGetExchangeSSInfoReq();
  virtual ~CSGetExchangeSSInfoReq();

  CSGetExchangeSSInfoReq(const CSGetExchangeSSInfoReq& from);

  inline CSGetExchangeSSInfoReq& operator=(const CSGetExchangeSSInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExchangeSSInfoReq& default_instance();

  void Swap(CSGetExchangeSSInfoReq* other);

  // implements Message ----------------------------------------------

  CSGetExchangeSSInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExchangeSSInfoReq& from);
  void MergeFrom(const CSGetExchangeSSInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSGetExchangeSSInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetExchangeSSInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeSSInfo : public ::google::protobuf::Message {
 public:
  ExchangeSSInfo();
  virtual ~ExchangeSSInfo();

  ExchangeSSInfo(const ExchangeSSInfo& from);

  inline ExchangeSSInfo& operator=(const ExchangeSSInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeSSInfo& default_instance();

  void Swap(ExchangeSSInfo* other);

  // implements Message ----------------------------------------------

  ExchangeSSInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeSSInfo& from);
  void MergeFrom(const ExchangeSSInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ss_id = 1;
  inline bool has_ss_id() const;
  inline void clear_ss_id();
  static const int kSsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 ss_id() const;
  inline void set_ss_id(::google::protobuf::uint32 value);

  // required uint32 consume = 2;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 2;
  inline ::google::protobuf::uint32 consume() const;
  inline void set_consume(::google::protobuf::uint32 value);

  // required uint32 convert = 3;
  inline bool has_convert() const;
  inline void clear_convert();
  static const int kConvertFieldNumber = 3;
  inline ::google::protobuf::uint32 convert() const;
  inline void set_convert(::google::protobuf::uint32 value);

  // required uint32 need_chip = 4;
  inline bool has_need_chip() const;
  inline void clear_need_chip();
  static const int kNeedChipFieldNumber = 4;
  inline ::google::protobuf::uint32 need_chip() const;
  inline void set_need_chip(::google::protobuf::uint32 value);

  // required uint32 key = 5;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 5;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // required uint32 value = 6;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ExchangeSSInfo)
 private:
  inline void set_has_ss_id();
  inline void clear_has_ss_id();
  inline void set_has_consume();
  inline void clear_has_consume();
  inline void set_has_convert();
  inline void clear_has_convert();
  inline void set_has_need_chip();
  inline void clear_has_need_chip();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ss_id_;
  ::google::protobuf::uint32 consume_;
  ::google::protobuf::uint32 convert_;
  ::google::protobuf::uint32 need_chip_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static ExchangeSSInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExchangeSSInfoRsp : public ::google::protobuf::Message {
 public:
  CSGetExchangeSSInfoRsp();
  virtual ~CSGetExchangeSSInfoRsp();

  CSGetExchangeSSInfoRsp(const CSGetExchangeSSInfoRsp& from);

  inline CSGetExchangeSSInfoRsp& operator=(const CSGetExchangeSSInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExchangeSSInfoRsp& default_instance();

  void Swap(CSGetExchangeSSInfoRsp* other);

  // implements Message ----------------------------------------------

  CSGetExchangeSSInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExchangeSSInfoRsp& from);
  void MergeFrom(const CSGetExchangeSSInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ExchangeSSInfo ss_list = 1;
  inline int ss_list_size() const;
  inline void clear_ss_list();
  static const int kSsListFieldNumber = 1;
  inline const ::ExchangeSSInfo& ss_list(int index) const;
  inline ::ExchangeSSInfo* mutable_ss_list(int index);
  inline ::ExchangeSSInfo* add_ss_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >&
      ss_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >*
      mutable_ss_list();

  // @@protoc_insertion_point(class_scope:CSGetExchangeSSInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo > ss_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetExchangeSSInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddManorReq : public ::google::protobuf::Message {
 public:
  CSAddManorReq();
  virtual ~CSAddManorReq();

  CSAddManorReq(const CSAddManorReq& from);

  inline CSAddManorReq& operator=(const CSAddManorReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddManorReq& default_instance();

  void Swap(CSAddManorReq* other);

  // implements Message ----------------------------------------------

  CSAddManorReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddManorReq& from);
  void MergeFrom(const CSAddManorReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 manor_id = 1;
  inline bool has_manor_id() const;
  inline void clear_manor_id();
  static const int kManorIdFieldNumber = 1;
  inline ::google::protobuf::uint32 manor_id() const;
  inline void set_manor_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSAddManorReq)
 private:
  inline void set_has_manor_id();
  inline void clear_has_manor_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 manor_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAddManorReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAddManorRsp : public ::google::protobuf::Message {
 public:
  CSAddManorRsp();
  virtual ~CSAddManorRsp();

  CSAddManorRsp(const CSAddManorRsp& from);

  inline CSAddManorRsp& operator=(const CSAddManorRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddManorRsp& default_instance();

  void Swap(CSAddManorRsp* other);

  // implements Message ----------------------------------------------

  CSAddManorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddManorRsp& from);
  void MergeFrom(const CSAddManorRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSAddManorRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAddManorRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSWarmSportLvUpReq : public ::google::protobuf::Message {
 public:
  CSWarmSportLvUpReq();
  virtual ~CSWarmSportLvUpReq();

  CSWarmSportLvUpReq(const CSWarmSportLvUpReq& from);

  inline CSWarmSportLvUpReq& operator=(const CSWarmSportLvUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWarmSportLvUpReq& default_instance();

  void Swap(CSWarmSportLvUpReq* other);

  // implements Message ----------------------------------------------

  CSWarmSportLvUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWarmSportLvUpReq& from);
  void MergeFrom(const CSWarmSportLvUpReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // optional bool to_max_lv = 2 [default = false];
  inline bool has_to_max_lv() const;
  inline void clear_to_max_lv();
  static const int kToMaxLvFieldNumber = 2;
  inline bool to_max_lv() const;
  inline void set_to_max_lv(bool value);

  // @@protoc_insertion_point(class_scope:CSWarmSportLvUpReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_to_max_lv();
  inline void clear_has_to_max_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;
  bool to_max_lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSWarmSportLvUpReq* default_instance_;
};
// -------------------------------------------------------------------

class CSWarmSportLvUpRsp : public ::google::protobuf::Message {
 public:
  CSWarmSportLvUpRsp();
  virtual ~CSWarmSportLvUpRsp();

  CSWarmSportLvUpRsp(const CSWarmSportLvUpRsp& from);

  inline CSWarmSportLvUpRsp& operator=(const CSWarmSportLvUpRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWarmSportLvUpRsp& default_instance();

  void Swap(CSWarmSportLvUpRsp* other);

  // implements Message ----------------------------------------------

  CSWarmSportLvUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWarmSportLvUpRsp& from);
  void MergeFrom(const CSWarmSportLvUpRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSWarmSportLvUpRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSWarmSportLvUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSManorOptReq : public ::google::protobuf::Message {
 public:
  CSManorOptReq();
  virtual ~CSManorOptReq();

  CSManorOptReq(const CSManorOptReq& from);

  inline CSManorOptReq& operator=(const CSManorOptReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSManorOptReq& default_instance();

  void Swap(CSManorOptReq* other);

  // implements Message ----------------------------------------------

  CSManorOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSManorOptReq& from);
  void MergeFrom(const CSManorOptReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSManorOptReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSManorOptReq* default_instance_;
};
// -------------------------------------------------------------------

class CSManorOptRsp : public ::google::protobuf::Message {
 public:
  CSManorOptRsp();
  virtual ~CSManorOptRsp();

  CSManorOptRsp(const CSManorOptRsp& from);

  inline CSManorOptRsp& operator=(const CSManorOptRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSManorOptRsp& default_instance();

  void Swap(CSManorOptRsp* other);

  // implements Message ----------------------------------------------

  CSManorOptRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSManorOptRsp& from);
  void MergeFrom(const CSManorOptRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSManorOptRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_opt();
  inline void clear_has_opt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 opt_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSManorOptRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMonListReq : public ::google::protobuf::Message {
 public:
  CSMonListReq();
  virtual ~CSMonListReq();

  CSMonListReq(const CSMonListReq& from);

  inline CSMonListReq& operator=(const CSMonListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMonListReq& default_instance();

  void Swap(CSMonListReq* other);

  // implements Message ----------------------------------------------

  CSMonListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMonListReq& from);
  void MergeFrom(const CSMonListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CSMonListReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSMonListReq* default_instance_;
};
// -------------------------------------------------------------------

class MonInfo : public ::google::protobuf::Message {
 public:
  MonInfo();
  virtual ~MonInfo();

  MonInfo(const MonInfo& from);

  inline MonInfo& operator=(const MonInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonInfo& default_instance();

  void Swap(MonInfo* other);

  // implements Message ----------------------------------------------

  MonInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonInfo& from);
  void MergeFrom(const MonInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mon_id = 1;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);

  // required uint32 mon_status = 2;
  inline bool has_mon_status() const;
  inline void clear_mon_status();
  static const int kMonStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_status() const;
  inline void set_mon_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MonInfo)
 private:
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_status();
  inline void clear_has_mon_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static MonInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSMonListRsp : public ::google::protobuf::Message {
 public:
  CSMonListRsp();
  virtual ~CSMonListRsp();

  CSMonListRsp(const CSMonListRsp& from);

  inline CSMonListRsp& operator=(const CSMonListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMonListRsp& default_instance();

  void Swap(CSMonListRsp* other);

  // implements Message ----------------------------------------------

  CSMonListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMonListRsp& from);
  void MergeFrom(const CSMonListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .MonInfo mon_info = 3;
  inline int mon_info_size() const;
  inline void clear_mon_info();
  static const int kMonInfoFieldNumber = 3;
  inline const ::MonInfo& mon_info(int index) const;
  inline ::MonInfo* mutable_mon_info(int index);
  inline ::MonInfo* add_mon_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MonInfo >&
      mon_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MonInfo >*
      mutable_mon_info();

  // @@protoc_insertion_point(class_scope:CSMonListRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::MonInfo > mon_info_;
  ::google::protobuf::uint32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSMonListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMonStatusReq : public ::google::protobuf::Message {
 public:
  CSSetMonStatusReq();
  virtual ~CSSetMonStatusReq();

  CSSetMonStatusReq(const CSSetMonStatusReq& from);

  inline CSSetMonStatusReq& operator=(const CSSetMonStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMonStatusReq& default_instance();

  void Swap(CSSetMonStatusReq* other);

  // implements Message ----------------------------------------------

  CSSetMonStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMonStatusReq& from);
  void MergeFrom(const CSSetMonStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mon_id = 1;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);

  // required uint32 mon_status = 2;
  inline bool has_mon_status() const;
  inline void clear_mon_status();
  static const int kMonStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_status() const;
  inline void set_mon_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSetMonStatusReq)
 private:
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_status();
  inline void clear_has_mon_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSetMonStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMonStatusRsp : public ::google::protobuf::Message {
 public:
  CSSetMonStatusRsp();
  virtual ~CSSetMonStatusRsp();

  CSSetMonStatusRsp(const CSSetMonStatusRsp& from);

  inline CSSetMonStatusRsp& operator=(const CSSetMonStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMonStatusRsp& default_instance();

  void Swap(CSSetMonStatusRsp* other);

  // implements Message ----------------------------------------------

  CSSetMonStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMonStatusRsp& from);
  void MergeFrom(const CSSetMonStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint32 mon_id = 2;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);

  // optional uint32 mon_status = 3;
  inline bool has_mon_status() const;
  inline void clear_mon_status();
  static const int kMonStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 mon_status() const;
  inline void set_mon_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSSetMonStatusRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_status();
  inline void clear_has_mon_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSSetMonStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPQueryRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPQueryRoomReq();
  virtual ~CSPVPQueryRoomReq();

  CSPVPQueryRoomReq(const CSPVPQueryRoomReq& from);

  inline CSPVPQueryRoomReq& operator=(const CSPVPQueryRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPQueryRoomReq& default_instance();

  void Swap(CSPVPQueryRoomReq* other);

  // implements Message ----------------------------------------------

  CSPVPQueryRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPQueryRoomReq& from);
  void MergeFrom(const CSPVPQueryRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVPQueryRoomReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPQueryRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class PVPRoomBase : public ::google::protobuf::Message {
 public:
  PVPRoomBase();
  virtual ~PVPRoomBase();

  PVPRoomBase(const PVPRoomBase& from);

  inline PVPRoomBase& operator=(const PVPRoomBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PVPRoomBase& default_instance();

  void Swap(PVPRoomBase* other);

  // implements Message ----------------------------------------------

  PVPRoomBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVPRoomBase& from);
  void MergeFrom(const PVPRoomBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);

  // required uint32 current_online = 3;
  inline bool has_current_online() const;
  inline void clear_current_online();
  static const int kCurrentOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 current_online() const;
  inline void set_current_online(::google::protobuf::uint32 value);

  // required uint32 max_online = 4;
  inline bool has_max_online() const;
  inline void clear_max_online();
  static const int kMaxOnlineFieldNumber = 4;
  inline ::google::protobuf::uint32 max_online() const;
  inline void set_max_online(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PVPRoomBase)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_current_online();
  inline void clear_has_current_online();
  inline void set_has_max_online();
  inline void clear_has_max_online();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 current_online_;
  ::google::protobuf::uint32 max_online_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static PVPRoomBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPQueryRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPQueryRoomRsp();
  virtual ~CSPVPQueryRoomRsp();

  CSPVPQueryRoomRsp(const CSPVPQueryRoomRsp& from);

  inline CSPVPQueryRoomRsp& operator=(const CSPVPQueryRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPQueryRoomRsp& default_instance();

  void Swap(CSPVPQueryRoomRsp* other);

  // implements Message ----------------------------------------------

  CSPVPQueryRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPQueryRoomRsp& from);
  void MergeFrom(const CSPVPQueryRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PVPRoomBase rooms = 1;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  inline const ::PVPRoomBase& rooms(int index) const;
  inline ::PVPRoomBase* mutable_rooms(int index);
  inline ::PVPRoomBase* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >*
      mutable_rooms();

  // @@protoc_insertion_point(class_scope:CSPVPQueryRoomRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PVPRoomBase > rooms_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPQueryRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPBaseInfoRsp : public ::google::protobuf::Message {
 public:
  CSPVPBaseInfoRsp();
  virtual ~CSPVPBaseInfoRsp();

  CSPVPBaseInfoRsp(const CSPVPBaseInfoRsp& from);

  inline CSPVPBaseInfoRsp& operator=(const CSPVPBaseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPBaseInfoRsp& default_instance();

  void Swap(CSPVPBaseInfoRsp* other);

  // implements Message ----------------------------------------------

  CSPVPBaseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPBaseInfoRsp& from);
  void MergeFrom(const CSPVPBaseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 winning = 1;
  inline bool has_winning() const;
  inline void clear_winning();
  static const int kWinningFieldNumber = 1;
  inline ::google::protobuf::uint32 winning() const;
  inline void set_winning(::google::protobuf::uint32 value);

  // required uint32 remain_times = 2;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 remain_times() const;
  inline void set_remain_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVPBaseInfoRsp)
 private:
  inline void set_has_winning();
  inline void clear_has_winning();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 winning_;
  ::google::protobuf::uint32 remain_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPBaseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPCreateRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPCreateRoomReq();
  virtual ~CSPVPCreateRoomReq();

  CSPVPCreateRoomReq(const CSPVPCreateRoomReq& from);

  inline CSPVPCreateRoomReq& operator=(const CSPVPCreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPCreateRoomReq& default_instance();

  void Swap(CSPVPCreateRoomReq* other);

  // implements Message ----------------------------------------------

  CSPVPCreateRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPCreateRoomReq& from);
  void MergeFrom(const CSPVPCreateRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVPCreateRoomReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_top_level();
  inline void clear_has_top_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 top_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPCreateRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPJoinRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPJoinRoomReq();
  virtual ~CSPVPJoinRoomReq();

  CSPVPJoinRoomReq(const CSPVPJoinRoomReq& from);

  inline CSPVPJoinRoomReq& operator=(const CSPVPJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPJoinRoomReq& default_instance();

  void Swap(CSPVPJoinRoomReq* other);

  // implements Message ----------------------------------------------

  CSPVPJoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPJoinRoomReq& from);
  void MergeFrom(const CSPVPJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVPJoinRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class PVPSeatBase : public ::google::protobuf::Message {
 public:
  PVPSeatBase();
  virtual ~PVPSeatBase();

  PVPSeatBase(const PVPSeatBase& from);

  inline PVPSeatBase& operator=(const PVPSeatBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PVPSeatBase& default_instance();

  void Swap(PVPSeatBase* other);

  // implements Message ----------------------------------------------

  PVPSeatBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVPSeatBase& from);
  void MergeFrom(const PVPSeatBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 avatar = 2;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required bool ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline bool ready() const;
  inline void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:PVPSeatBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ready();
  inline void clear_has_ready();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 avatar_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  bool ready_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static PVPSeatBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPJoinRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPJoinRoomRsp();
  virtual ~CSPVPJoinRoomRsp();

  CSPVPJoinRoomRsp(const CSPVPJoinRoomRsp& from);

  inline CSPVPJoinRoomRsp& operator=(const CSPVPJoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPJoinRoomRsp& default_instance();

  void Swap(CSPVPJoinRoomRsp* other);

  // implements Message ----------------------------------------------

  CSPVPJoinRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPJoinRoomRsp& from);
  void MergeFrom(const CSPVPJoinRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 top_level = 3;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);

  // repeated .PVPSeatBase seats = 4;
  inline int seats_size() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 4;
  inline const ::PVPSeatBase& seats(int index) const;
  inline ::PVPSeatBase* mutable_seats(int index);
  inline ::PVPSeatBase* add_seats();
  inline const ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >&
      seats() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >*
      mutable_seats();

  // @@protoc_insertion_point(class_scope:CSPVPJoinRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_top_level();
  inline void clear_has_top_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedPtrField< ::PVPSeatBase > seats_;
  ::google::protobuf::uint32 top_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPJoinRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPExitRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPExitRoomReq();
  virtual ~CSPVPExitRoomReq();

  CSPVPExitRoomReq(const CSPVPExitRoomReq& from);

  inline CSPVPExitRoomReq& operator=(const CSPVPExitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPExitRoomReq& default_instance();

  void Swap(CSPVPExitRoomReq* other);

  // implements Message ----------------------------------------------

  CSPVPExitRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPExitRoomReq& from);
  void MergeFrom(const CSPVPExitRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVPExitRoomReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPExitRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPExitRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPExitRoomRsp();
  virtual ~CSPVPExitRoomRsp();

  CSPVPExitRoomRsp(const CSPVPExitRoomRsp& from);

  inline CSPVPExitRoomRsp& operator=(const CSPVPExitRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPExitRoomRsp& default_instance();

  void Swap(CSPVPExitRoomRsp* other);

  // implements Message ----------------------------------------------

  CSPVPExitRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPExitRoomRsp& from);
  void MergeFrom(const CSPVPExitRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVPExitRoomRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPExitRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPCloseRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPCloseRoomRsp();
  virtual ~CSPVPCloseRoomRsp();

  CSPVPCloseRoomRsp(const CSPVPCloseRoomRsp& from);

  inline CSPVPCloseRoomRsp& operator=(const CSPVPCloseRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPCloseRoomRsp& default_instance();

  void Swap(CSPVPCloseRoomRsp* other);

  // implements Message ----------------------------------------------

  CSPVPCloseRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPCloseRoomRsp& from);
  void MergeFrom(const CSPVPCloseRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVPCloseRoomRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPCloseRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPChangeSeatReq : public ::google::protobuf::Message {
 public:
  CSPVPChangeSeatReq();
  virtual ~CSPVPChangeSeatReq();

  CSPVPChangeSeatReq(const CSPVPChangeSeatReq& from);

  inline CSPVPChangeSeatReq& operator=(const CSPVPChangeSeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPChangeSeatReq& default_instance();

  void Swap(CSPVPChangeSeatReq* other);

  // implements Message ----------------------------------------------

  CSPVPChangeSeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPChangeSeatReq& from);
  void MergeFrom(const CSPVPChangeSeatReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVPChangeSeatReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPChangeSeatReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPReadyReq : public ::google::protobuf::Message {
 public:
  CSPVPReadyReq();
  virtual ~CSPVPReadyReq();

  CSPVPReadyReq(const CSPVPReadyReq& from);

  inline CSPVPReadyReq& operator=(const CSPVPReadyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPReadyReq& default_instance();

  void Swap(CSPVPReadyReq* other);

  // implements Message ----------------------------------------------

  CSPVPReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPReadyReq& from);
  void MergeFrom(const CSPVPReadyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVPReadyReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPCancelReadyReq : public ::google::protobuf::Message {
 public:
  CSPVPCancelReadyReq();
  virtual ~CSPVPCancelReadyReq();

  CSPVPCancelReadyReq(const CSPVPCancelReadyReq& from);

  inline CSPVPCancelReadyReq& operator=(const CSPVPCancelReadyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPCancelReadyReq& default_instance();

  void Swap(CSPVPCancelReadyReq* other);

  // implements Message ----------------------------------------------

  CSPVPCancelReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPCancelReadyReq& from);
  void MergeFrom(const CSPVPCancelReadyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVPCancelReadyReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPCancelReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPKickoffReq : public ::google::protobuf::Message {
 public:
  CSPVPKickoffReq();
  virtual ~CSPVPKickoffReq();

  CSPVPKickoffReq(const CSPVPKickoffReq& from);

  inline CSPVPKickoffReq& operator=(const CSPVPKickoffReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPKickoffReq& default_instance();

  void Swap(CSPVPKickoffReq* other);

  // implements Message ----------------------------------------------

  CSPVPKickoffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPKickoffReq& from);
  void MergeFrom(const CSPVPKickoffReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVPKickoffReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPKickoffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPKickoffRsp : public ::google::protobuf::Message {
 public:
  CSPVPKickoffRsp();
  virtual ~CSPVPKickoffRsp();

  CSPVPKickoffRsp(const CSPVPKickoffRsp& from);

  inline CSPVPKickoffRsp& operator=(const CSPVPKickoffRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPKickoffRsp& default_instance();

  void Swap(CSPVPKickoffRsp* other);

  // implements Message ----------------------------------------------

  CSPVPKickoffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPKickoffRsp& from);
  void MergeFrom(const CSPVPKickoffRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVPKickoffRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPKickoffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPStartReq : public ::google::protobuf::Message {
 public:
  CSPVPStartReq();
  virtual ~CSPVPStartReq();

  CSPVPStartReq(const CSPVPStartReq& from);

  inline CSPVPStartReq& operator=(const CSPVPStartReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPStartReq& default_instance();

  void Swap(CSPVPStartReq* other);

  // implements Message ----------------------------------------------

  CSPVPStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPStartReq& from);
  void MergeFrom(const CSPVPStartReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVPStartReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPStartReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPStartRsp : public ::google::protobuf::Message {
 public:
  CSPVPStartRsp();
  virtual ~CSPVPStartRsp();

  CSPVPStartRsp(const CSPVPStartRsp& from);

  inline CSPVPStartRsp& operator=(const CSPVPStartRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPStartRsp& default_instance();

  void Swap(CSPVPStartRsp* other);

  // implements Message ----------------------------------------------

  CSPVPStartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPStartRsp& from);
  void MergeFrom(const CSPVPStartRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVPStartRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVPStartRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPPVEBattleReq : public ::google::protobuf::Message {
 public:
  CSPPVEBattleReq();
  virtual ~CSPPVEBattleReq();

  CSPPVEBattleReq(const CSPPVEBattleReq& from);

  inline CSPPVEBattleReq& operator=(const CSPPVEBattleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPPVEBattleReq& default_instance();

  void Swap(CSPPVEBattleReq* other);

  // implements Message ----------------------------------------------

  CSPPVEBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPPVEBattleReq& from);
  void MergeFrom(const CSPPVEBattleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPPVEBattleReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPPVEBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPPVEBattleRsp : public ::google::protobuf::Message {
 public:
  CSPPVEBattleRsp();
  virtual ~CSPPVEBattleRsp();

  CSPPVEBattleRsp(const CSPPVEBattleRsp& from);

  inline CSPPVEBattleRsp& operator=(const CSPPVEBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPPVEBattleRsp& default_instance();

  void Swap(CSPPVEBattleRsp* other);

  // implements Message ----------------------------------------------

  CSPPVEBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPPVEBattleRsp& from);
  void MergeFrom(const CSPPVEBattleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint32 value);
  inline void add_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:CSPPVEBattleRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPPVEBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEQueryRoomReq : public ::google::protobuf::Message {
 public:
  CSPVEQueryRoomReq();
  virtual ~CSPVEQueryRoomReq();

  CSPVEQueryRoomReq(const CSPVEQueryRoomReq& from);

  inline CSPVEQueryRoomReq& operator=(const CSPVEQueryRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEQueryRoomReq& default_instance();

  void Swap(CSPVEQueryRoomReq* other);

  // implements Message ----------------------------------------------

  CSPVEQueryRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEQueryRoomReq& from);
  void MergeFrom(const CSPVEQueryRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVEQueryRoomReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEQueryRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class PVERoomBase : public ::google::protobuf::Message {
 public:
  PVERoomBase();
  virtual ~PVERoomBase();

  PVERoomBase(const PVERoomBase& from);

  inline PVERoomBase& operator=(const PVERoomBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PVERoomBase& default_instance();

  void Swap(PVERoomBase* other);

  // implements Message ----------------------------------------------

  PVERoomBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVERoomBase& from);
  void MergeFrom(const PVERoomBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);

  // required uint32 current_online = 3;
  inline bool has_current_online() const;
  inline void clear_current_online();
  static const int kCurrentOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 current_online() const;
  inline void set_current_online(::google::protobuf::uint32 value);

  // required uint32 max_online = 4;
  inline bool has_max_online() const;
  inline void clear_max_online();
  static const int kMaxOnlineFieldNumber = 4;
  inline ::google::protobuf::uint32 max_online() const;
  inline void set_max_online(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PVERoomBase)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_current_online();
  inline void clear_has_current_online();
  inline void set_has_max_online();
  inline void clear_has_max_online();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 current_online_;
  ::google::protobuf::uint32 max_online_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static PVERoomBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEQueryRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVEQueryRoomRsp();
  virtual ~CSPVEQueryRoomRsp();

  CSPVEQueryRoomRsp(const CSPVEQueryRoomRsp& from);

  inline CSPVEQueryRoomRsp& operator=(const CSPVEQueryRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEQueryRoomRsp& default_instance();

  void Swap(CSPVEQueryRoomRsp* other);

  // implements Message ----------------------------------------------

  CSPVEQueryRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEQueryRoomRsp& from);
  void MergeFrom(const CSPVEQueryRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PVERoomBase rooms = 1;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  inline const ::PVERoomBase& rooms(int index) const;
  inline ::PVERoomBase* mutable_rooms(int index);
  inline ::PVERoomBase* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::PVERoomBase >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVERoomBase >*
      mutable_rooms();

  // @@protoc_insertion_point(class_scope:CSPVEQueryRoomRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PVERoomBase > rooms_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEQueryRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEBaseInfoRsp : public ::google::protobuf::Message {
 public:
  CSPVEBaseInfoRsp();
  virtual ~CSPVEBaseInfoRsp();

  CSPVEBaseInfoRsp(const CSPVEBaseInfoRsp& from);

  inline CSPVEBaseInfoRsp& operator=(const CSPVEBaseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEBaseInfoRsp& default_instance();

  void Swap(CSPVEBaseInfoRsp* other);

  // implements Message ----------------------------------------------

  CSPVEBaseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEBaseInfoRsp& from);
  void MergeFrom(const CSPVEBaseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 countdown = 1;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 1;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);

  // required uint32 remain_times = 2;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 remain_times() const;
  inline void set_remain_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVEBaseInfoRsp)
 private:
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::uint32 remain_times_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEBaseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVECreateRoomReq : public ::google::protobuf::Message {
 public:
  CSPVECreateRoomReq();
  virtual ~CSPVECreateRoomReq();

  CSPVECreateRoomReq(const CSPVECreateRoomReq& from);

  inline CSPVECreateRoomReq& operator=(const CSPVECreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVECreateRoomReq& default_instance();

  void Swap(CSPVECreateRoomReq* other);

  // implements Message ----------------------------------------------

  CSPVECreateRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVECreateRoomReq& from);
  void MergeFrom(const CSPVECreateRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 top_level = 1;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);

  // required uint32 battle_id = 2;
  inline bool has_battle_id() const;
  inline void clear_battle_id();
  static const int kBattleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 battle_id() const;
  inline void set_battle_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVECreateRoomReq)
 private:
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_battle_id();
  inline void clear_has_battle_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 battle_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVECreateRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEJoinRoomReq : public ::google::protobuf::Message {
 public:
  CSPVEJoinRoomReq();
  virtual ~CSPVEJoinRoomReq();

  CSPVEJoinRoomReq(const CSPVEJoinRoomReq& from);

  inline CSPVEJoinRoomReq& operator=(const CSPVEJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEJoinRoomReq& default_instance();

  void Swap(CSPVEJoinRoomReq* other);

  // implements Message ----------------------------------------------

  CSPVEJoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEJoinRoomReq& from);
  void MergeFrom(const CSPVEJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVEJoinRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEJoinRoomFailureRsp : public ::google::protobuf::Message {
 public:
  CSPVEJoinRoomFailureRsp();
  virtual ~CSPVEJoinRoomFailureRsp();

  CSPVEJoinRoomFailureRsp(const CSPVEJoinRoomFailureRsp& from);

  inline CSPVEJoinRoomFailureRsp& operator=(const CSPVEJoinRoomFailureRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEJoinRoomFailureRsp& default_instance();

  void Swap(CSPVEJoinRoomFailureRsp* other);

  // implements Message ----------------------------------------------

  CSPVEJoinRoomFailureRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEJoinRoomFailureRsp& from);
  void MergeFrom(const CSPVEJoinRoomFailureRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVEJoinRoomFailureRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 errcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEJoinRoomFailureRsp* default_instance_;
};
// -------------------------------------------------------------------

class PVESeatBase : public ::google::protobuf::Message {
 public:
  PVESeatBase();
  virtual ~PVESeatBase();

  PVESeatBase(const PVESeatBase& from);

  inline PVESeatBase& operator=(const PVESeatBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PVESeatBase& default_instance();

  void Swap(PVESeatBase* other);

  // implements Message ----------------------------------------------

  PVESeatBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVESeatBase& from);
  void MergeFrom(const PVESeatBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 avatar = 2;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required bool ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline bool ready() const;
  inline void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:PVESeatBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ready();
  inline void clear_has_ready();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 avatar_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  bool ready_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static PVESeatBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEJoinRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVEJoinRoomRsp();
  virtual ~CSPVEJoinRoomRsp();

  CSPVEJoinRoomRsp(const CSPVEJoinRoomRsp& from);

  inline CSPVEJoinRoomRsp& operator=(const CSPVEJoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEJoinRoomRsp& default_instance();

  void Swap(CSPVEJoinRoomRsp* other);

  // implements Message ----------------------------------------------

  CSPVEJoinRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEJoinRoomRsp& from);
  void MergeFrom(const CSPVEJoinRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);

  // repeated .PVESeatBase seats = 3;
  inline int seats_size() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 3;
  inline const ::PVESeatBase& seats(int index) const;
  inline ::PVESeatBase* mutable_seats(int index);
  inline ::PVESeatBase* add_seats();
  inline const ::google::protobuf::RepeatedPtrField< ::PVESeatBase >&
      seats() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVESeatBase >*
      mutable_seats();

  // @@protoc_insertion_point(class_scope:CSPVEJoinRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::RepeatedPtrField< ::PVESeatBase > seats_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEJoinRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEExitRoomReq : public ::google::protobuf::Message {
 public:
  CSPVEExitRoomReq();
  virtual ~CSPVEExitRoomReq();

  CSPVEExitRoomReq(const CSPVEExitRoomReq& from);

  inline CSPVEExitRoomReq& operator=(const CSPVEExitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEExitRoomReq& default_instance();

  void Swap(CSPVEExitRoomReq* other);

  // implements Message ----------------------------------------------

  CSPVEExitRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEExitRoomReq& from);
  void MergeFrom(const CSPVEExitRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVEExitRoomReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEExitRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEExitRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVEExitRoomRsp();
  virtual ~CSPVEExitRoomRsp();

  CSPVEExitRoomRsp(const CSPVEExitRoomRsp& from);

  inline CSPVEExitRoomRsp& operator=(const CSPVEExitRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEExitRoomRsp& default_instance();

  void Swap(CSPVEExitRoomRsp* other);

  // implements Message ----------------------------------------------

  CSPVEExitRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEExitRoomRsp& from);
  void MergeFrom(const CSPVEExitRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVEExitRoomRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEExitRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVECloseRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVECloseRoomRsp();
  virtual ~CSPVECloseRoomRsp();

  CSPVECloseRoomRsp(const CSPVECloseRoomRsp& from);

  inline CSPVECloseRoomRsp& operator=(const CSPVECloseRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVECloseRoomRsp& default_instance();

  void Swap(CSPVECloseRoomRsp* other);

  // implements Message ----------------------------------------------

  CSPVECloseRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVECloseRoomRsp& from);
  void MergeFrom(const CSPVECloseRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVECloseRoomRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVECloseRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEReadyReq : public ::google::protobuf::Message {
 public:
  CSPVEReadyReq();
  virtual ~CSPVEReadyReq();

  CSPVEReadyReq(const CSPVEReadyReq& from);

  inline CSPVEReadyReq& operator=(const CSPVEReadyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEReadyReq& default_instance();

  void Swap(CSPVEReadyReq* other);

  // implements Message ----------------------------------------------

  CSPVEReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEReadyReq& from);
  void MergeFrom(const CSPVEReadyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVEReadyReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVECancelReadyReq : public ::google::protobuf::Message {
 public:
  CSPVECancelReadyReq();
  virtual ~CSPVECancelReadyReq();

  CSPVECancelReadyReq(const CSPVECancelReadyReq& from);

  inline CSPVECancelReadyReq& operator=(const CSPVECancelReadyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVECancelReadyReq& default_instance();

  void Swap(CSPVECancelReadyReq* other);

  // implements Message ----------------------------------------------

  CSPVECancelReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVECancelReadyReq& from);
  void MergeFrom(const CSPVECancelReadyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVECancelReadyReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVECancelReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEKickoffReq : public ::google::protobuf::Message {
 public:
  CSPVEKickoffReq();
  virtual ~CSPVEKickoffReq();

  CSPVEKickoffReq(const CSPVEKickoffReq& from);

  inline CSPVEKickoffReq& operator=(const CSPVEKickoffReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEKickoffReq& default_instance();

  void Swap(CSPVEKickoffReq* other);

  // implements Message ----------------------------------------------

  CSPVEKickoffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEKickoffReq& from);
  void MergeFrom(const CSPVEKickoffReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVEKickoffReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEKickoffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEKickoffRsp : public ::google::protobuf::Message {
 public:
  CSPVEKickoffRsp();
  virtual ~CSPVEKickoffRsp();

  CSPVEKickoffRsp(const CSPVEKickoffRsp& from);

  inline CSPVEKickoffRsp& operator=(const CSPVEKickoffRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEKickoffRsp& default_instance();

  void Swap(CSPVEKickoffRsp* other);

  // implements Message ----------------------------------------------

  CSPVEKickoffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEKickoffRsp& from);
  void MergeFrom(const CSPVEKickoffRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVEKickoffRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEKickoffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEStartReq : public ::google::protobuf::Message {
 public:
  CSPVEStartReq();
  virtual ~CSPVEStartReq();

  CSPVEStartReq(const CSPVEStartReq& from);

  inline CSPVEStartReq& operator=(const CSPVEStartReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEStartReq& default_instance();

  void Swap(CSPVEStartReq* other);

  // implements Message ----------------------------------------------

  CSPVEStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEStartReq& from);
  void MergeFrom(const CSPVEStartReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVEStartReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEStartReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEStartRsp : public ::google::protobuf::Message {
 public:
  CSPVEStartRsp();
  virtual ~CSPVEStartRsp();

  CSPVEStartRsp(const CSPVEStartRsp& from);

  inline CSPVEStartRsp& operator=(const CSPVEStartRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEStartRsp& default_instance();

  void Swap(CSPVEStartRsp* other);

  // implements Message ----------------------------------------------

  CSPVEStartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEStartRsp& from);
  void MergeFrom(const CSPVEStartRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVEStartRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVEStartRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIReq : public ::google::protobuf::Message {
 public:
  CSPVAIReq();
  virtual ~CSPVAIReq();

  CSPVAIReq(const CSPVAIReq& from);

  inline CSPVAIReq& operator=(const CSPVAIReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIReq& default_instance();

  void Swap(CSPVAIReq* other);

  // implements Message ----------------------------------------------

  CSPVAIReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIReq& from);
  void MergeFrom(const CSPVAIReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVAIReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVAIReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoReq : public ::google::protobuf::Message {
 public:
  CSPVAIInfoReq();
  virtual ~CSPVAIInfoReq();

  CSPVAIInfoReq(const CSPVAIInfoReq& from);

  inline CSPVAIInfoReq& operator=(const CSPVAIInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoReq& default_instance();

  void Swap(CSPVAIInfoReq* other);

  // implements Message ----------------------------------------------

  CSPVAIInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoReq& from);
  void MergeFrom(const CSPVAIInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSPVAIInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVAIInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoRsq_CSPVAIInfo : public ::google::protobuf::Message {
 public:
  CSPVAIInfoRsq_CSPVAIInfo();
  virtual ~CSPVAIInfoRsq_CSPVAIInfo();

  CSPVAIInfoRsq_CSPVAIInfo(const CSPVAIInfoRsq_CSPVAIInfo& from);

  inline CSPVAIInfoRsq_CSPVAIInfo& operator=(const CSPVAIInfoRsq_CSPVAIInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoRsq_CSPVAIInfo& default_instance();

  void Swap(CSPVAIInfoRsq_CSPVAIInfo* other);

  // implements Message ----------------------------------------------

  CSPVAIInfoRsq_CSPVAIInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoRsq_CSPVAIInfo& from);
  void MergeFrom(const CSPVAIInfoRsq_CSPVAIInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);

  // required uint32 rank = 3;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 lv = 6;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 6;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSPVAIInfoRsq.CSPVAIInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_lv();
  inline void clear_has_lv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* name_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 lv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVAIInfoRsq_CSPVAIInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoRsq_CSPVAILog : public ::google::protobuf::Message {
 public:
  CSPVAIInfoRsq_CSPVAILog();
  virtual ~CSPVAIInfoRsq_CSPVAILog();

  CSPVAIInfoRsq_CSPVAILog(const CSPVAIInfoRsq_CSPVAILog& from);

  inline CSPVAIInfoRsq_CSPVAILog& operator=(const CSPVAIInfoRsq_CSPVAILog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoRsq_CSPVAILog& default_instance();

  void Swap(CSPVAIInfoRsq_CSPVAILog* other);

  // implements Message ----------------------------------------------

  CSPVAIInfoRsq_CSPVAILog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoRsq_CSPVAILog& from);
  void MergeFrom(const CSPVAIInfoRsq_CSPVAILog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bool direct = 2;
  inline bool has_direct() const;
  inline void clear_direct();
  static const int kDirectFieldNumber = 2;
  inline bool direct() const;
  inline void set_direct(bool value);

  // required bool win = 3;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 3;
  inline bool win() const;
  inline void set_win(bool value);

  // @@protoc_insertion_point(class_scope:CSPVAIInfoRsq.CSPVAILog)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_direct();
  inline void clear_has_direct();
  inline void set_has_win();
  inline void clear_has_win();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  bool direct_;
  bool win_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVAIInfoRsq_CSPVAILog* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoRsq : public ::google::protobuf::Message {
 public:
  CSPVAIInfoRsq();
  virtual ~CSPVAIInfoRsq();

  CSPVAIInfoRsq(const CSPVAIInfoRsq& from);

  inline CSPVAIInfoRsq& operator=(const CSPVAIInfoRsq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoRsq& default_instance();

  void Swap(CSPVAIInfoRsq* other);

  // implements Message ----------------------------------------------

  CSPVAIInfoRsq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoRsq& from);
  void MergeFrom(const CSPVAIInfoRsq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSPVAIInfoRsq_CSPVAIInfo CSPVAIInfo;
  typedef CSPVAIInfoRsq_CSPVAILog CSPVAILog;

  // accessors -------------------------------------------------------

  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // repeated .CSPVAIInfoRsq.CSPVAIInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::CSPVAIInfoRsq_CSPVAIInfo& infos(int index) const;
  inline ::CSPVAIInfoRsq_CSPVAIInfo* mutable_infos(int index);
  inline ::CSPVAIInfoRsq_CSPVAIInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >*
      mutable_infos();

  // repeated .CSPVAIInfoRsq.CSPVAILog logs = 3;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 3;
  inline const ::CSPVAIInfoRsq_CSPVAILog& logs(int index) const;
  inline ::CSPVAIInfoRsq_CSPVAILog* mutable_logs(int index);
  inline ::CSPVAIInfoRsq_CSPVAILog* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >*
      mutable_logs();

  // @@protoc_insertion_point(class_scope:CSPVAIInfoRsq)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo > infos_;
  ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog > logs_;
  ::google::protobuf::uint32 rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSPVAIInfoRsq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetEquipLvUpCDReq : public ::google::protobuf::Message {
 public:
  CSGetEquipLvUpCDReq();
  virtual ~CSGetEquipLvUpCDReq();

  CSGetEquipLvUpCDReq(const CSGetEquipLvUpCDReq& from);

  inline CSGetEquipLvUpCDReq& operator=(const CSGetEquipLvUpCDReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetEquipLvUpCDReq& default_instance();

  void Swap(CSGetEquipLvUpCDReq* other);

  // implements Message ----------------------------------------------

  CSGetEquipLvUpCDReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetEquipLvUpCDReq& from);
  void MergeFrom(const CSGetEquipLvUpCDReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSGetEquipLvUpCDReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetEquipLvUpCDReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetEquipLvUpCDRsp : public ::google::protobuf::Message {
 public:
  CSGetEquipLvUpCDRsp();
  virtual ~CSGetEquipLvUpCDRsp();

  CSGetEquipLvUpCDRsp(const CSGetEquipLvUpCDRsp& from);

  inline CSGetEquipLvUpCDRsp& operator=(const CSGetEquipLvUpCDRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetEquipLvUpCDRsp& default_instance();

  void Swap(CSGetEquipLvUpCDRsp* other);

  // implements Message ----------------------------------------------

  CSGetEquipLvUpCDRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetEquipLvUpCDRsp& from);
  void MergeFrom(const CSGetEquipLvUpCDRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cold_time = 1;
  inline bool has_cold_time() const;
  inline void clear_cold_time();
  static const int kColdTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 cold_time() const;
  inline void set_cold_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSGetEquipLvUpCDRsp)
 private:
  inline void set_has_cold_time();
  inline void clear_has_cold_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cold_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetEquipLvUpCDRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipInlayGemReq : public ::google::protobuf::Message {
 public:
  CSEquipInlayGemReq();
  virtual ~CSEquipInlayGemReq();

  CSEquipInlayGemReq(const CSEquipInlayGemReq& from);

  inline CSEquipInlayGemReq& operator=(const CSEquipInlayGemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipInlayGemReq& default_instance();

  void Swap(CSEquipInlayGemReq* other);

  // implements Message ----------------------------------------------

  CSEquipInlayGemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipInlayGemReq& from);
  void MergeFrom(const CSEquipInlayGemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 equip_pos = 1;
  inline bool has_equip_pos() const;
  inline void clear_equip_pos();
  static const int kEquipPosFieldNumber = 1;
  inline ::google::protobuf::uint32 equip_pos() const;
  inline void set_equip_pos(::google::protobuf::uint32 value);

  // required uint32 gem_id = 2;
  inline bool has_gem_id() const;
  inline void clear_gem_id();
  static const int kGemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 gem_id() const;
  inline void set_gem_id(::google::protobuf::uint32 value);

  // required uint32 hole_index = 3;
  inline bool has_hole_index() const;
  inline void clear_hole_index();
  static const int kHoleIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 hole_index() const;
  inline void set_hole_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSEquipInlayGemReq)
 private:
  inline void set_has_equip_pos();
  inline void clear_has_equip_pos();
  inline void set_has_gem_id();
  inline void clear_has_gem_id();
  inline void set_has_hole_index();
  inline void clear_has_hole_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 equip_pos_;
  ::google::protobuf::uint32 gem_id_;
  ::google::protobuf::uint32 hole_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSEquipInlayGemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipInlayGemRsp : public ::google::protobuf::Message {
 public:
  CSEquipInlayGemRsp();
  virtual ~CSEquipInlayGemRsp();

  CSEquipInlayGemRsp(const CSEquipInlayGemRsp& from);

  inline CSEquipInlayGemRsp& operator=(const CSEquipInlayGemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipInlayGemRsp& default_instance();

  void Swap(CSEquipInlayGemRsp* other);

  // implements Message ----------------------------------------------

  CSEquipInlayGemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipInlayGemRsp& from);
  void MergeFrom(const CSEquipInlayGemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSEquipInlayGemRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSEquipInlayGemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSResetGemAttrReq : public ::google::protobuf::Message {
 public:
  CSResetGemAttrReq();
  virtual ~CSResetGemAttrReq();

  CSResetGemAttrReq(const CSResetGemAttrReq& from);

  inline CSResetGemAttrReq& operator=(const CSResetGemAttrReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSResetGemAttrReq& default_instance();

  void Swap(CSResetGemAttrReq* other);

  // implements Message ----------------------------------------------

  CSResetGemAttrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSResetGemAttrReq& from);
  void MergeFrom(const CSResetGemAttrReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 equip_pos = 1;
  inline bool has_equip_pos() const;
  inline void clear_equip_pos();
  static const int kEquipPosFieldNumber = 1;
  inline ::google::protobuf::uint32 equip_pos() const;
  inline void set_equip_pos(::google::protobuf::uint32 value);

  // repeated uint32 holes_index = 2;
  inline int holes_index_size() const;
  inline void clear_holes_index();
  static const int kHolesIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 holes_index(int index) const;
  inline void set_holes_index(int index, ::google::protobuf::uint32 value);
  inline void add_holes_index(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      holes_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_holes_index();

  // optional uint32 cost_attr_key = 3;
  inline bool has_cost_attr_key() const;
  inline void clear_cost_attr_key();
  static const int kCostAttrKeyFieldNumber = 3;
  inline ::google::protobuf::uint32 cost_attr_key() const;
  inline void set_cost_attr_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSResetGemAttrReq)
 private:
  inline void set_has_equip_pos();
  inline void clear_has_equip_pos();
  inline void set_has_cost_attr_key();
  inline void clear_has_cost_attr_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > holes_index_;
  ::google::protobuf::uint32 equip_pos_;
  ::google::protobuf::uint32 cost_attr_key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSResetGemAttrReq* default_instance_;
};
// -------------------------------------------------------------------

class CSResetGemAttrRsp : public ::google::protobuf::Message {
 public:
  CSResetGemAttrRsp();
  virtual ~CSResetGemAttrRsp();

  CSResetGemAttrRsp(const CSResetGemAttrRsp& from);

  inline CSResetGemAttrRsp& operator=(const CSResetGemAttrRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSResetGemAttrRsp& default_instance();

  void Swap(CSResetGemAttrRsp* other);

  // implements Message ----------------------------------------------

  CSResetGemAttrRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSResetGemAttrRsp& from);
  void MergeFrom(const CSResetGemAttrRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSResetGemAttrRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSResetGemAttrRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentStrengthReq : public ::google::protobuf::Message {
 public:
  CSEquipmentStrengthReq();
  virtual ~CSEquipmentStrengthReq();

  CSEquipmentStrengthReq(const CSEquipmentStrengthReq& from);

  inline CSEquipmentStrengthReq& operator=(const CSEquipmentStrengthReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentStrengthReq& default_instance();

  void Swap(CSEquipmentStrengthReq* other);

  // implements Message ----------------------------------------------

  CSEquipmentStrengthReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentStrengthReq& from);
  void MergeFrom(const CSEquipmentStrengthReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSEquipmentStrengthReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSEquipmentStrengthReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentStrengthRsp : public ::google::protobuf::Message {
 public:
  CSEquipmentStrengthRsp();
  virtual ~CSEquipmentStrengthRsp();

  CSEquipmentStrengthRsp(const CSEquipmentStrengthRsp& from);

  inline CSEquipmentStrengthRsp& operator=(const CSEquipmentStrengthRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentStrengthRsp& default_instance();

  void Swap(CSEquipmentStrengthRsp* other);

  // implements Message ----------------------------------------------

  CSEquipmentStrengthRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentStrengthRsp& from);
  void MergeFrom(const CSEquipmentStrengthRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // required uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 cold_time = 3;
  inline bool has_cold_time() const;
  inline void clear_cold_time();
  static const int kColdTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 cold_time() const;
  inline void set_cold_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSEquipmentStrengthRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cold_time();
  inline void clear_has_cold_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 cold_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSEquipmentStrengthRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentComposeReq : public ::google::protobuf::Message {
 public:
  CSEquipmentComposeReq();
  virtual ~CSEquipmentComposeReq();

  CSEquipmentComposeReq(const CSEquipmentComposeReq& from);

  inline CSEquipmentComposeReq& operator=(const CSEquipmentComposeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentComposeReq& default_instance();

  void Swap(CSEquipmentComposeReq* other);

  // implements Message ----------------------------------------------

  CSEquipmentComposeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentComposeReq& from);
  void MergeFrom(const CSEquipmentComposeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 exchange_item_id = 1;
  inline bool has_exchange_item_id() const;
  inline void clear_exchange_item_id();
  static const int kExchangeItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 exchange_item_id() const;
  inline void set_exchange_item_id(::google::protobuf::uint32 value);

  // repeated uint32 from_item_pos = 2;
  inline int from_item_pos_size() const;
  inline void clear_from_item_pos();
  static const int kFromItemPosFieldNumber = 2;
  inline ::google::protobuf::uint32 from_item_pos(int index) const;
  inline void set_from_item_pos(int index, ::google::protobuf::uint32 value);
  inline void add_from_item_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      from_item_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_from_item_pos();

  // optional uint32 multi = 3 [default = 1];
  inline bool has_multi() const;
  inline void clear_multi();
  static const int kMultiFieldNumber = 3;
  inline ::google::protobuf::uint32 multi() const;
  inline void set_multi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSEquipmentComposeReq)
 private:
  inline void set_has_exchange_item_id();
  inline void clear_has_exchange_item_id();
  inline void set_has_multi();
  inline void clear_has_multi();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > from_item_pos_;
  ::google::protobuf::uint32 exchange_item_id_;
  ::google::protobuf::uint32 multi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSEquipmentComposeReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentComposeRsp : public ::google::protobuf::Message {
 public:
  CSEquipmentComposeRsp();
  virtual ~CSEquipmentComposeRsp();

  CSEquipmentComposeRsp(const CSEquipmentComposeRsp& from);

  inline CSEquipmentComposeRsp& operator=(const CSEquipmentComposeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentComposeRsp& default_instance();

  void Swap(CSEquipmentComposeRsp* other);

  // implements Message ----------------------------------------------

  CSEquipmentComposeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentComposeRsp& from);
  void MergeFrom(const CSEquipmentComposeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 exchange_item_id = 1;
  inline bool has_exchange_item_id() const;
  inline void clear_exchange_item_id();
  static const int kExchangeItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 exchange_item_id() const;
  inline void set_exchange_item_id(::google::protobuf::uint32 value);

  // required uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSEquipmentComposeRsp)
 private:
  inline void set_has_exchange_item_id();
  inline void clear_has_exchange_item_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 exchange_item_id_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSEquipmentComposeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskInfoReq : public ::google::protobuf::Message {
 public:
  CSTaskInfoReq();
  virtual ~CSTaskInfoReq();

  CSTaskInfoReq(const CSTaskInfoReq& from);

  inline CSTaskInfoReq& operator=(const CSTaskInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskInfoReq& default_instance();

  void Swap(CSTaskInfoReq* other);

  // implements Message ----------------------------------------------

  CSTaskInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskInfoReq& from);
  void MergeFrom(const CSTaskInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSTaskInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTaskInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class TaskInfo : public ::google::protobuf::Message {
 public:
  TaskInfo();
  virtual ~TaskInfo();

  TaskInfo(const TaskInfo& from);

  inline TaskInfo& operator=(const TaskInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskInfo& default_instance();

  void Swap(TaskInfo* other);

  // implements Message ----------------------------------------------

  TaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskInfo& from);
  void MergeFrom(const TaskInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);

  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);

  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TaskInfo)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static TaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskInfoRsp : public ::google::protobuf::Message {
 public:
  CSTaskInfoRsp();
  virtual ~CSTaskInfoRsp();

  CSTaskInfoRsp(const CSTaskInfoRsp& from);

  inline CSTaskInfoRsp& operator=(const CSTaskInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskInfoRsp& default_instance();

  void Swap(CSTaskInfoRsp* other);

  // implements Message ----------------------------------------------

  CSTaskInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskInfoRsp& from);
  void MergeFrom(const CSTaskInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 acceptable_tasks = 1;
  inline int acceptable_tasks_size() const;
  inline void clear_acceptable_tasks();
  static const int kAcceptableTasksFieldNumber = 1;
  inline ::google::protobuf::uint32 acceptable_tasks(int index) const;
  inline void set_acceptable_tasks(int index, ::google::protobuf::uint32 value);
  inline void add_acceptable_tasks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      acceptable_tasks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_acceptable_tasks();

  // repeated .TaskInfo accept_tasks = 2;
  inline int accept_tasks_size() const;
  inline void clear_accept_tasks();
  static const int kAcceptTasksFieldNumber = 2;
  inline const ::TaskInfo& accept_tasks(int index) const;
  inline ::TaskInfo* mutable_accept_tasks(int index);
  inline ::TaskInfo* add_accept_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
      accept_tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
      mutable_accept_tasks();

  // @@protoc_insertion_point(class_scope:CSTaskInfoRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > acceptable_tasks_;
  ::google::protobuf::RepeatedPtrField< ::TaskInfo > accept_tasks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTaskInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskDoStepReq : public ::google::protobuf::Message {
 public:
  CSTaskDoStepReq();
  virtual ~CSTaskDoStepReq();

  CSTaskDoStepReq(const CSTaskDoStepReq& from);

  inline CSTaskDoStepReq& operator=(const CSTaskDoStepReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskDoStepReq& default_instance();

  void Swap(CSTaskDoStepReq* other);

  // implements Message ----------------------------------------------

  CSTaskDoStepReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskDoStepReq& from);
  void MergeFrom(const CSTaskDoStepReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);

  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);

  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSTaskDoStepReq)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTaskDoStepReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskDoStepRsp : public ::google::protobuf::Message {
 public:
  CSTaskDoStepRsp();
  virtual ~CSTaskDoStepRsp();

  CSTaskDoStepRsp(const CSTaskDoStepRsp& from);

  inline CSTaskDoStepRsp& operator=(const CSTaskDoStepRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskDoStepRsp& default_instance();

  void Swap(CSTaskDoStepRsp* other);

  // implements Message ----------------------------------------------

  CSTaskDoStepRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskDoStepRsp& from);
  void MergeFrom(const CSTaskDoStepRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);

  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);

  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSTaskDoStepRsp)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTaskDoStepRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskLogReq : public ::google::protobuf::Message {
 public:
  CSTaskLogReq();
  virtual ~CSTaskLogReq();

  CSTaskLogReq(const CSTaskLogReq& from);

  inline CSTaskLogReq& operator=(const CSTaskLogReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskLogReq& default_instance();

  void Swap(CSTaskLogReq* other);

  // implements Message ----------------------------------------------

  CSTaskLogReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskLogReq& from);
  void MergeFrom(const CSTaskLogReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSTaskLogReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTaskLogReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskLogRsp : public ::google::protobuf::Message {
 public:
  CSTaskLogRsp();
  virtual ~CSTaskLogRsp();

  CSTaskLogRsp(const CSTaskLogRsp& from);

  inline CSTaskLogRsp& operator=(const CSTaskLogRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskLogRsp& default_instance();

  void Swap(CSTaskLogRsp* other);

  // implements Message ----------------------------------------------

  CSTaskLogRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskLogRsp& from);
  void MergeFrom(const CSTaskLogRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TaskInfo tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::TaskInfo& tasks(int index) const;
  inline ::TaskInfo* mutable_tasks(int index);
  inline ::TaskInfo* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
      mutable_tasks();

  // @@protoc_insertion_point(class_scope:CSTaskLogRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::TaskInfo > tasks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTaskLogRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesSetReq : public ::google::protobuf::Message {
 public:
  CSAttributesSetReq();
  virtual ~CSAttributesSetReq();

  CSAttributesSetReq(const CSAttributesSetReq& from);

  inline CSAttributesSetReq& operator=(const CSAttributesSetReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesSetReq& default_instance();

  void Swap(CSAttributesSetReq* other);

  // implements Message ----------------------------------------------

  CSAttributesSetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesSetReq& from);
  void MergeFrom(const CSAttributesSetReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSAttributesSetReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAttributesSetReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesReq : public ::google::protobuf::Message {
 public:
  CSAttributesReq();
  virtual ~CSAttributesReq();

  CSAttributesReq(const CSAttributesReq& from);

  inline CSAttributesReq& operator=(const CSAttributesReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesReq& default_instance();

  void Swap(CSAttributesReq* other);

  // implements Message ----------------------------------------------

  CSAttributesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesReq& from);
  void MergeFrom(const CSAttributesReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 keys = 1;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 1;
  inline ::google::protobuf::uint32 keys(int index) const;
  inline void set_keys(int index, ::google::protobuf::uint32 value);
  inline void add_keys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      keys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_keys();

  // @@protoc_insertion_point(class_scope:CSAttributesReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > keys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAttributesReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesRsp_KeyValue : public ::google::protobuf::Message {
 public:
  CSAttributesRsp_KeyValue();
  virtual ~CSAttributesRsp_KeyValue();

  CSAttributesRsp_KeyValue(const CSAttributesRsp_KeyValue& from);

  inline CSAttributesRsp_KeyValue& operator=(const CSAttributesRsp_KeyValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesRsp_KeyValue& default_instance();

  void Swap(CSAttributesRsp_KeyValue* other);

  // implements Message ----------------------------------------------

  CSAttributesRsp_KeyValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesRsp_KeyValue& from);
  void MergeFrom(const CSAttributesRsp_KeyValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSAttributesRsp.KeyValue)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAttributesRsp_KeyValue* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesRsp : public ::google::protobuf::Message {
 public:
  CSAttributesRsp();
  virtual ~CSAttributesRsp();

  CSAttributesRsp(const CSAttributesRsp& from);

  inline CSAttributesRsp& operator=(const CSAttributesRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesRsp& default_instance();

  void Swap(CSAttributesRsp* other);

  // implements Message ----------------------------------------------

  CSAttributesRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesRsp& from);
  void MergeFrom(const CSAttributesRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSAttributesRsp_KeyValue KeyValue;

  // accessors -------------------------------------------------------

  // repeated .CSAttributesRsp.KeyValue values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::CSAttributesRsp_KeyValue& values(int index) const;
  inline ::CSAttributesRsp_KeyValue* mutable_values(int index);
  inline ::CSAttributesRsp_KeyValue* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:CSAttributesRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue > values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSAttributesRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceSetReq : public ::google::protobuf::Message {
 public:
  CSOnceSetReq();
  virtual ~CSOnceSetReq();

  CSOnceSetReq(const CSOnceSetReq& from);

  inline CSOnceSetReq& operator=(const CSOnceSetReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceSetReq& default_instance();

  void Swap(CSOnceSetReq* other);

  // implements Message ----------------------------------------------

  CSOnceSetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceSetReq& from);
  void MergeFrom(const CSOnceSetReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOnceSetReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSOnceSetReq* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceReq : public ::google::protobuf::Message {
 public:
  CSOnceReq();
  virtual ~CSOnceReq();

  CSOnceReq(const CSOnceReq& from);

  inline CSOnceReq& operator=(const CSOnceReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceReq& default_instance();

  void Swap(CSOnceReq* other);

  // implements Message ----------------------------------------------

  CSOnceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceReq& from);
  void MergeFrom(const CSOnceReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 indexs = 1;
  inline int indexs_size() const;
  inline void clear_indexs();
  static const int kIndexsFieldNumber = 1;
  inline ::google::protobuf::uint32 indexs(int index) const;
  inline void set_indexs(int index, ::google::protobuf::uint32 value);
  inline void add_indexs(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      indexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_indexs();

  // @@protoc_insertion_point(class_scope:CSOnceReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > indexs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSOnceReq* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceRsp_Once : public ::google::protobuf::Message {
 public:
  CSOnceRsp_Once();
  virtual ~CSOnceRsp_Once();

  CSOnceRsp_Once(const CSOnceRsp_Once& from);

  inline CSOnceRsp_Once& operator=(const CSOnceRsp_Once& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceRsp_Once& default_instance();

  void Swap(CSOnceRsp_Once* other);

  // implements Message ----------------------------------------------

  CSOnceRsp_Once* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceRsp_Once& from);
  void MergeFrom(const CSOnceRsp_Once& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required bool is_set = 2;
  inline bool has_is_set() const;
  inline void clear_is_set();
  static const int kIsSetFieldNumber = 2;
  inline bool is_set() const;
  inline void set_is_set(bool value);

  // @@protoc_insertion_point(class_scope:CSOnceRsp.Once)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_is_set();
  inline void clear_has_is_set();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  bool is_set_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSOnceRsp_Once* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceRsp : public ::google::protobuf::Message {
 public:
  CSOnceRsp();
  virtual ~CSOnceRsp();

  CSOnceRsp(const CSOnceRsp& from);

  inline CSOnceRsp& operator=(const CSOnceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceRsp& default_instance();

  void Swap(CSOnceRsp* other);

  // implements Message ----------------------------------------------

  CSOnceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceRsp& from);
  void MergeFrom(const CSOnceRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSOnceRsp_Once Once;

  // accessors -------------------------------------------------------

  // repeated .CSOnceRsp.Once values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::CSOnceRsp_Once& values(int index) const;
  inline ::CSOnceRsp_Once* mutable_values(int index);
  inline ::CSOnceRsp_Once* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:CSOnceRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once > values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSOnceRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainInfoReq : public ::google::protobuf::Message {
 public:
  CSTrainInfoReq();
  virtual ~CSTrainInfoReq();

  CSTrainInfoReq(const CSTrainInfoReq& from);

  inline CSTrainInfoReq& operator=(const CSTrainInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainInfoReq& default_instance();

  void Swap(CSTrainInfoReq* other);

  // implements Message ----------------------------------------------

  CSTrainInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainInfoReq& from);
  void MergeFrom(const CSTrainInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSTrainInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTrainInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainInfoRsp : public ::google::protobuf::Message {
 public:
  CSTrainInfoRsp();
  virtual ~CSTrainInfoRsp();

  CSTrainInfoRsp(const CSTrainInfoRsp& from);

  inline CSTrainInfoRsp& operator=(const CSTrainInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainInfoRsp& default_instance();

  void Swap(CSTrainInfoRsp* other);

  // implements Message ----------------------------------------------

  CSTrainInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainInfoRsp& from);
  void MergeFrom(const CSTrainInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 potential = 1;
  inline bool has_potential() const;
  inline void clear_potential();
  static const int kPotentialFieldNumber = 1;
  inline ::google::protobuf::uint32 potential() const;
  inline void set_potential(::google::protobuf::uint32 value);

  // required uint32 courage = 2;
  inline bool has_courage() const;
  inline void clear_courage();
  static const int kCourageFieldNumber = 2;
  inline ::google::protobuf::uint32 courage() const;
  inline void set_courage(::google::protobuf::uint32 value);

  // required uint32 charm = 3;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 3;
  inline ::google::protobuf::uint32 charm() const;
  inline void set_charm(::google::protobuf::uint32 value);

  // required uint32 trick = 4;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 4;
  inline ::google::protobuf::uint32 trick() const;
  inline void set_trick(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSTrainInfoRsp)
 private:
  inline void set_has_potential();
  inline void clear_has_potential();
  inline void set_has_courage();
  inline void clear_has_courage();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_trick();
  inline void clear_has_trick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 potential_;
  ::google::protobuf::uint32 courage_;
  ::google::protobuf::uint32 charm_;
  ::google::protobuf::uint32 trick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTrainInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainReq : public ::google::protobuf::Message {
 public:
  CSTrainReq();
  virtual ~CSTrainReq();

  CSTrainReq(const CSTrainReq& from);

  inline CSTrainReq& operator=(const CSTrainReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainReq& default_instance();

  void Swap(CSTrainReq* other);

  // implements Message ----------------------------------------------

  CSTrainReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainReq& from);
  void MergeFrom(const CSTrainReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSTrainReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTrainReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainRsp : public ::google::protobuf::Message {
 public:
  CSTrainRsp();
  virtual ~CSTrainRsp();

  CSTrainRsp(const CSTrainRsp& from);

  inline CSTrainRsp& operator=(const CSTrainRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainRsp& default_instance();

  void Swap(CSTrainRsp* other);

  // implements Message ----------------------------------------------

  CSTrainRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainRsp& from);
  void MergeFrom(const CSTrainRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 courage = 1;
  inline bool has_courage() const;
  inline void clear_courage();
  static const int kCourageFieldNumber = 1;
  inline ::google::protobuf::int32 courage() const;
  inline void set_courage(::google::protobuf::int32 value);

  // required int32 charm = 2;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 2;
  inline ::google::protobuf::int32 charm() const;
  inline void set_charm(::google::protobuf::int32 value);

  // required int32 trick = 3;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 3;
  inline ::google::protobuf::int32 trick() const;
  inline void set_trick(::google::protobuf::int32 value);

  // required bool succ = 4;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 4;
  inline bool succ() const;
  inline void set_succ(bool value);

  // @@protoc_insertion_point(class_scope:CSTrainRsp)
 private:
  inline void set_has_courage();
  inline void clear_has_courage();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_trick();
  inline void clear_has_trick();
  inline void set_has_succ();
  inline void clear_has_succ();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 courage_;
  ::google::protobuf::int32 charm_;
  ::google::protobuf::int32 trick_;
  bool succ_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTrainRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainDetermineReq : public ::google::protobuf::Message {
 public:
  CSTrainDetermineReq();
  virtual ~CSTrainDetermineReq();

  CSTrainDetermineReq(const CSTrainDetermineReq& from);

  inline CSTrainDetermineReq& operator=(const CSTrainDetermineReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainDetermineReq& default_instance();

  void Swap(CSTrainDetermineReq* other);

  // implements Message ----------------------------------------------

  CSTrainDetermineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainDetermineReq& from);
  void MergeFrom(const CSTrainDetermineReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSTrainDetermineReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTrainDetermineReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainDetermineRsp : public ::google::protobuf::Message {
 public:
  CSTrainDetermineRsp();
  virtual ~CSTrainDetermineRsp();

  CSTrainDetermineRsp(const CSTrainDetermineRsp& from);

  inline CSTrainDetermineRsp& operator=(const CSTrainDetermineRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainDetermineRsp& default_instance();

  void Swap(CSTrainDetermineRsp* other);

  // implements Message ----------------------------------------------

  CSTrainDetermineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainDetermineRsp& from);
  void MergeFrom(const CSTrainDetermineRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSTrainDetermineRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSTrainDetermineRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreReq : public ::google::protobuf::Message {
 public:
  CSExploreReq();
  virtual ~CSExploreReq();

  CSExploreReq(const CSExploreReq& from);

  inline CSExploreReq& operator=(const CSExploreReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreReq& default_instance();

  void Swap(CSExploreReq* other);

  // implements Message ----------------------------------------------

  CSExploreReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreReq& from);
  void MergeFrom(const CSExploreReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSExploreReq)
 private:
  inline void set_has_option();
  inline void clear_has_option();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSExploreReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreRsp : public ::google::protobuf::Message {
 public:
  CSExploreRsp();
  virtual ~CSExploreRsp();

  CSExploreRsp(const CSExploreRsp& from);

  inline CSExploreRsp& operator=(const CSExploreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreRsp& default_instance();

  void Swap(CSExploreRsp* other);

  // implements Message ----------------------------------------------

  CSExploreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreRsp& from);
  void MergeFrom(const CSExploreRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);

  // required uint32 map_id = 2;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSExploreRsp)
 private:
  inline void set_has_option();
  inline void clear_has_option();
  inline void set_has_map_id();
  inline void clear_has_map_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 option_;
  ::google::protobuf::uint32 map_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSExploreRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreDetermineReq : public ::google::protobuf::Message {
 public:
  CSExploreDetermineReq();
  virtual ~CSExploreDetermineReq();

  CSExploreDetermineReq(const CSExploreDetermineReq& from);

  inline CSExploreDetermineReq& operator=(const CSExploreDetermineReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreDetermineReq& default_instance();

  void Swap(CSExploreDetermineReq* other);

  // implements Message ----------------------------------------------

  CSExploreDetermineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreDetermineReq& from);
  void MergeFrom(const CSExploreDetermineReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSExploreDetermineReq)
 private:
  inline void set_has_option();
  inline void clear_has_option();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSExploreDetermineReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreDetermineRsp : public ::google::protobuf::Message {
 public:
  CSExploreDetermineRsp();
  virtual ~CSExploreDetermineRsp();

  CSExploreDetermineRsp(const CSExploreDetermineRsp& from);

  inline CSExploreDetermineRsp& operator=(const CSExploreDetermineRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreDetermineRsp& default_instance();

  void Swap(CSExploreDetermineRsp* other);

  // implements Message ----------------------------------------------

  CSExploreDetermineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreDetermineRsp& from);
  void MergeFrom(const CSExploreDetermineRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);

  // optional .CSReward rewards = 2;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::CSReward& rewards() const;
  inline ::CSReward* mutable_rewards();
  inline ::CSReward* release_rewards();
  inline void set_allocated_rewards(::CSReward* rewards);

  // @@protoc_insertion_point(class_scope:CSExploreDetermineRsp)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_rewards();
  inline void clear_has_rewards();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSReward* rewards_;
  ::google::protobuf::uint32 map_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSExploreDetermineRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryDowerReq : public ::google::protobuf::Message {
 public:
  CSQueryDowerReq();
  virtual ~CSQueryDowerReq();

  CSQueryDowerReq(const CSQueryDowerReq& from);

  inline CSQueryDowerReq& operator=(const CSQueryDowerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryDowerReq& default_instance();

  void Swap(CSQueryDowerReq* other);

  // implements Message ----------------------------------------------

  CSQueryDowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryDowerReq& from);
  void MergeFrom(const CSQueryDowerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSQueryDowerReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSQueryDowerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryDowerRsp_Dower : public ::google::protobuf::Message {
 public:
  CSQueryDowerRsp_Dower();
  virtual ~CSQueryDowerRsp_Dower();

  CSQueryDowerRsp_Dower(const CSQueryDowerRsp_Dower& from);

  inline CSQueryDowerRsp_Dower& operator=(const CSQueryDowerRsp_Dower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryDowerRsp_Dower& default_instance();

  void Swap(CSQueryDowerRsp_Dower* other);

  // implements Message ----------------------------------------------

  CSQueryDowerRsp_Dower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryDowerRsp_Dower& from);
  void MergeFrom(const CSQueryDowerRsp_Dower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 max_level = 3;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 max_level() const;
  inline void set_max_level(::google::protobuf::uint32 value);

  // required uint32 plus = 4;
  inline bool has_plus() const;
  inline void clear_plus();
  static const int kPlusFieldNumber = 4;
  inline ::google::protobuf::uint32 plus() const;
  inline void set_plus(::google::protobuf::uint32 value);

  // required uint32 each_plus = 5;
  inline bool has_each_plus() const;
  inline void clear_each_plus();
  static const int kEachPlusFieldNumber = 5;
  inline ::google::protobuf::uint32 each_plus() const;
  inline void set_each_plus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSQueryDowerRsp.Dower)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  inline void set_has_plus();
  inline void clear_has_plus();
  inline void set_has_each_plus();
  inline void clear_has_each_plus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 max_level_;
  ::google::protobuf::uint32 plus_;
  ::google::protobuf::uint32 each_plus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSQueryDowerRsp_Dower* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryDowerRsp : public ::google::protobuf::Message {
 public:
  CSQueryDowerRsp();
  virtual ~CSQueryDowerRsp();

  CSQueryDowerRsp(const CSQueryDowerRsp& from);

  inline CSQueryDowerRsp& operator=(const CSQueryDowerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryDowerRsp& default_instance();

  void Swap(CSQueryDowerRsp* other);

  // implements Message ----------------------------------------------

  CSQueryDowerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryDowerRsp& from);
  void MergeFrom(const CSQueryDowerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSQueryDowerRsp_Dower Dower;

  // accessors -------------------------------------------------------

  // repeated .CSQueryDowerRsp.Dower dower = 1;
  inline int dower_size() const;
  inline void clear_dower();
  static const int kDowerFieldNumber = 1;
  inline const ::CSQueryDowerRsp_Dower& dower(int index) const;
  inline ::CSQueryDowerRsp_Dower* mutable_dower(int index);
  inline ::CSQueryDowerRsp_Dower* add_dower();
  inline const ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >&
      dower() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >*
      mutable_dower();

  // optional uint32 timeout = 2;
  inline bool has_timeout() const;
  inline void clear_timeout();
  static const int kTimeoutFieldNumber = 2;
  inline ::google::protobuf::uint32 timeout() const;
  inline void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSQueryDowerRsp)
 private:
  inline void set_has_timeout();
  inline void clear_has_timeout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower > dower_;
  ::google::protobuf::uint32 timeout_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSQueryDowerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerInfoReq : public ::google::protobuf::Message {
 public:
  CSDowerInfoReq();
  virtual ~CSDowerInfoReq();

  CSDowerInfoReq(const CSDowerInfoReq& from);

  inline CSDowerInfoReq& operator=(const CSDowerInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerInfoReq& default_instance();

  void Swap(CSDowerInfoReq* other);

  // implements Message ----------------------------------------------

  CSDowerInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerInfoReq& from);
  void MergeFrom(const CSDowerInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSDowerInfoReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSDowerInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerInfoRsp : public ::google::protobuf::Message {
 public:
  CSDowerInfoRsp();
  virtual ~CSDowerInfoRsp();

  CSDowerInfoRsp(const CSDowerInfoRsp& from);

  inline CSDowerInfoRsp& operator=(const CSDowerInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerInfoRsp& default_instance();

  void Swap(CSDowerInfoRsp* other);

  // implements Message ----------------------------------------------

  CSDowerInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerInfoRsp& from);
  void MergeFrom(const CSDowerInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 next_exploit = 3;
  inline bool has_next_exploit() const;
  inline void clear_next_exploit();
  static const int kNextExploitFieldNumber = 3;
  inline ::google::protobuf::uint32 next_exploit() const;
  inline void set_next_exploit(::google::protobuf::uint32 value);

  // required uint32 next_time = 4;
  inline bool has_next_time() const;
  inline void clear_next_time();
  static const int kNextTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 next_time() const;
  inline void set_next_time(::google::protobuf::uint32 value);

  // required uint32 diff_physical_attack = 5;
  inline bool has_diff_physical_attack() const;
  inline void clear_diff_physical_attack();
  static const int kDiffPhysicalAttackFieldNumber = 5;
  inline ::google::protobuf::uint32 diff_physical_attack() const;
  inline void set_diff_physical_attack(::google::protobuf::uint32 value);

  // required uint32 diff_magic_attack = 6;
  inline bool has_diff_magic_attack() const;
  inline void clear_diff_magic_attack();
  static const int kDiffMagicAttackFieldNumber = 6;
  inline ::google::protobuf::uint32 diff_magic_attack() const;
  inline void set_diff_magic_attack(::google::protobuf::uint32 value);

  // required uint32 diff_skill_attack = 7;
  inline bool has_diff_skill_attack() const;
  inline void clear_diff_skill_attack();
  static const int kDiffSkillAttackFieldNumber = 7;
  inline ::google::protobuf::uint32 diff_skill_attack() const;
  inline void set_diff_skill_attack(::google::protobuf::uint32 value);

  // required uint32 diff_physical_defence = 8;
  inline bool has_diff_physical_defence() const;
  inline void clear_diff_physical_defence();
  static const int kDiffPhysicalDefenceFieldNumber = 8;
  inline ::google::protobuf::uint32 diff_physical_defence() const;
  inline void set_diff_physical_defence(::google::protobuf::uint32 value);

  // required uint32 diff_magic_defence = 9;
  inline bool has_diff_magic_defence() const;
  inline void clear_diff_magic_defence();
  static const int kDiffMagicDefenceFieldNumber = 9;
  inline ::google::protobuf::uint32 diff_magic_defence() const;
  inline void set_diff_magic_defence(::google::protobuf::uint32 value);

  // required uint32 diff_skill_defence = 10;
  inline bool has_diff_skill_defence() const;
  inline void clear_diff_skill_defence();
  static const int kDiffSkillDefenceFieldNumber = 10;
  inline ::google::protobuf::uint32 diff_skill_defence() const;
  inline void set_diff_skill_defence(::google::protobuf::uint32 value);

  // required uint32 diff_hp = 11;
  inline bool has_diff_hp() const;
  inline void clear_diff_hp();
  static const int kDiffHpFieldNumber = 11;
  inline ::google::protobuf::uint32 diff_hp() const;
  inline void set_diff_hp(::google::protobuf::uint32 value);

  // required uint32 plus = 12;
  inline bool has_plus() const;
  inline void clear_plus();
  static const int kPlusFieldNumber = 12;
  inline ::google::protobuf::uint32 plus() const;
  inline void set_plus(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSDowerInfoRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_next_exploit();
  inline void clear_has_next_exploit();
  inline void set_has_next_time();
  inline void clear_has_next_time();
  inline void set_has_diff_physical_attack();
  inline void clear_has_diff_physical_attack();
  inline void set_has_diff_magic_attack();
  inline void clear_has_diff_magic_attack();
  inline void set_has_diff_skill_attack();
  inline void clear_has_diff_skill_attack();
  inline void set_has_diff_physical_defence();
  inline void clear_has_diff_physical_defence();
  inline void set_has_diff_magic_defence();
  inline void clear_has_diff_magic_defence();
  inline void set_has_diff_skill_defence();
  inline void clear_has_diff_skill_defence();
  inline void set_has_diff_hp();
  inline void clear_has_diff_hp();
  inline void set_has_plus();
  inline void clear_has_plus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 next_exploit_;
  ::google::protobuf::uint32 next_time_;
  ::google::protobuf::uint32 diff_physical_attack_;
  ::google::protobuf::uint32 diff_magic_attack_;
  ::google::protobuf::uint32 diff_skill_attack_;
  ::google::protobuf::uint32 diff_physical_defence_;
  ::google::protobuf::uint32 diff_magic_defence_;
  ::google::protobuf::uint32 diff_skill_defence_;
  ::google::protobuf::uint32 diff_hp_;
  ::google::protobuf::uint32 plus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSDowerInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerReq : public ::google::protobuf::Message {
 public:
  CSDowerReq();
  virtual ~CSDowerReq();

  CSDowerReq(const CSDowerReq& from);

  inline CSDowerReq& operator=(const CSDowerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerReq& default_instance();

  void Swap(CSDowerReq* other);

  // implements Message ----------------------------------------------

  CSDowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerReq& from);
  void MergeFrom(const CSDowerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSDowerReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSDowerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerRsp : public ::google::protobuf::Message {
 public:
  CSDowerRsp();
  virtual ~CSDowerRsp();

  CSDowerRsp(const CSDowerRsp& from);

  inline CSDowerRsp& operator=(const CSDowerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerRsp& default_instance();

  void Swap(CSDowerRsp* other);

  // implements Message ----------------------------------------------

  CSDowerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerRsp& from);
  void MergeFrom(const CSDowerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 timeout = 1;
  inline bool has_timeout() const;
  inline void clear_timeout();
  static const int kTimeoutFieldNumber = 1;
  inline ::google::protobuf::uint32 timeout() const;
  inline void set_timeout(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 plus = 3;
  inline bool has_plus() const;
  inline void clear_plus();
  static const int kPlusFieldNumber = 3;
  inline ::google::protobuf::uint32 plus() const;
  inline void set_plus(::google::protobuf::uint32 value);

  // required uint32 next_exploit = 4;
  inline bool has_next_exploit() const;
  inline void clear_next_exploit();
  static const int kNextExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 next_exploit() const;
  inline void set_next_exploit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSDowerRsp)
 private:
  inline void set_has_timeout();
  inline void clear_has_timeout();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_plus();
  inline void clear_has_plus();
  inline void set_has_next_exploit();
  inline void clear_has_next_exploit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 timeout_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 plus_;
  ::google::protobuf::uint32 next_exploit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSDowerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeParameterReq : public ::google::protobuf::Message {
 public:
  CSExchangeParameterReq();
  virtual ~CSExchangeParameterReq();

  CSExchangeParameterReq(const CSExchangeParameterReq& from);

  inline CSExchangeParameterReq& operator=(const CSExchangeParameterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeParameterReq& default_instance();

  void Swap(CSExchangeParameterReq* other);

  // implements Message ----------------------------------------------

  CSExchangeParameterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeParameterReq& from);
  void MergeFrom(const CSExchangeParameterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 param = 2 [default = 0];
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSExchangeParameterReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSExchangeParameterReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeParameterRsp : public ::google::protobuf::Message {
 public:
  CSExchangeParameterRsp();
  virtual ~CSExchangeParameterRsp();

  CSExchangeParameterRsp(const CSExchangeParameterRsp& from);

  inline CSExchangeParameterRsp& operator=(const CSExchangeParameterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeParameterRsp& default_instance();

  void Swap(CSExchangeParameterRsp* other);

  // implements Message ----------------------------------------------

  CSExchangeParameterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeParameterRsp& from);
  void MergeFrom(const CSExchangeParameterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSExchangeParameterRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool succ_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSExchangeParameterRsp* default_instance_;
};
// -------------------------------------------------------------------

class ShopItemInfo_Item : public ::google::protobuf::Message {
 public:
  ShopItemInfo_Item();
  virtual ~ShopItemInfo_Item();

  ShopItemInfo_Item(const ShopItemInfo_Item& from);

  inline ShopItemInfo_Item& operator=(const ShopItemInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopItemInfo_Item& default_instance();

  void Swap(ShopItemInfo_Item* other);

  // implements Message ----------------------------------------------

  ShopItemInfo_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopItemInfo_Item& from);
  void MergeFrom(const ShopItemInfo_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ShopItemInfo.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static ShopItemInfo_Item* default_instance_;
};
// -------------------------------------------------------------------

class ShopItemInfo : public ::google::protobuf::Message {
 public:
  ShopItemInfo();
  virtual ~ShopItemInfo();

  ShopItemInfo(const ShopItemInfo& from);

  inline ShopItemInfo& operator=(const ShopItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopItemInfo& default_instance();

  void Swap(ShopItemInfo* other);

  // implements Message ----------------------------------------------

  ShopItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopItemInfo& from);
  void MergeFrom(const ShopItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ShopItemInfo_Item Item;

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required .ShopItemInfo.Item from_item = 2;
  inline bool has_from_item() const;
  inline void clear_from_item();
  static const int kFromItemFieldNumber = 2;
  inline const ::ShopItemInfo_Item& from_item() const;
  inline ::ShopItemInfo_Item* mutable_from_item();
  inline ::ShopItemInfo_Item* release_from_item();
  inline void set_allocated_from_item(::ShopItemInfo_Item* from_item);

  // required .ShopItemInfo.Item to_item = 3;
  inline bool has_to_item() const;
  inline void clear_to_item();
  static const int kToItemFieldNumber = 3;
  inline const ::ShopItemInfo_Item& to_item() const;
  inline ::ShopItemInfo_Item* mutable_to_item();
  inline ::ShopItemInfo_Item* release_to_item();
  inline void set_allocated_to_item(::ShopItemInfo_Item* to_item);

  // required bool is_buy = 4;
  inline bool has_is_buy() const;
  inline void clear_is_buy();
  static const int kIsBuyFieldNumber = 4;
  inline bool is_buy() const;
  inline void set_is_buy(bool value);

  // @@protoc_insertion_point(class_scope:ShopItemInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_from_item();
  inline void clear_has_from_item();
  inline void set_has_to_item();
  inline void clear_has_to_item();
  inline void set_has_is_buy();
  inline void clear_has_is_buy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ShopItemInfo_Item* from_item_;
  ::google::protobuf::uint32 index_;
  bool is_buy_;
  ::ShopItemInfo_Item* to_item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static ShopItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetShopItemsReq : public ::google::protobuf::Message {
 public:
  CSGetShopItemsReq();
  virtual ~CSGetShopItemsReq();

  CSGetShopItemsReq(const CSGetShopItemsReq& from);

  inline CSGetShopItemsReq& operator=(const CSGetShopItemsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetShopItemsReq& default_instance();

  void Swap(CSGetShopItemsReq* other);

  // implements Message ----------------------------------------------

  CSGetShopItemsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetShopItemsReq& from);
  void MergeFrom(const CSGetShopItemsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CSGetShopItemsReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetShopItemsReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetShopItemsRsp : public ::google::protobuf::Message {
 public:
  CSGetShopItemsRsp();
  virtual ~CSGetShopItemsRsp();

  CSGetShopItemsRsp(const CSGetShopItemsRsp& from);

  inline CSGetShopItemsRsp& operator=(const CSGetShopItemsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetShopItemsRsp& default_instance();

  void Swap(CSGetShopItemsRsp* other);

  // implements Message ----------------------------------------------

  CSGetShopItemsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetShopItemsRsp& from);
  void MergeFrom(const CSGetShopItemsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ShopItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::ShopItemInfo& items(int index) const;
  inline ::ShopItemInfo* mutable_items(int index);
  inline ::ShopItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:CSGetShopItemsRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ShopItemInfo > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetShopItemsRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBuyShopItemReq : public ::google::protobuf::Message {
 public:
  CSBuyShopItemReq();
  virtual ~CSBuyShopItemReq();

  CSBuyShopItemReq(const CSBuyShopItemReq& from);

  inline CSBuyShopItemReq& operator=(const CSBuyShopItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBuyShopItemReq& default_instance();

  void Swap(CSBuyShopItemReq* other);

  // implements Message ----------------------------------------------

  CSBuyShopItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBuyShopItemReq& from);
  void MergeFrom(const CSBuyShopItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSBuyShopItemReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSBuyShopItemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSBuyShopItemRsp : public ::google::protobuf::Message {
 public:
  CSBuyShopItemRsp();
  virtual ~CSBuyShopItemRsp();

  CSBuyShopItemRsp(const CSBuyShopItemRsp& from);

  inline CSBuyShopItemRsp& operator=(const CSBuyShopItemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBuyShopItemRsp& default_instance();

  void Swap(CSBuyShopItemRsp* other);

  // implements Message ----------------------------------------------

  CSBuyShopItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBuyShopItemRsp& from);
  void MergeFrom(const CSBuyShopItemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // required bool succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline bool succ() const;
  inline void set_succ(bool value);

  // @@protoc_insertion_point(class_scope:CSBuyShopItemRsp)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_succ();
  inline void clear_has_succ();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 index_;
  bool succ_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSBuyShopItemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserItemReq : public ::google::protobuf::Message {
 public:
  CSGetUserItemReq();
  virtual ~CSGetUserItemReq();

  CSGetUserItemReq(const CSGetUserItemReq& from);

  inline CSGetUserItemReq& operator=(const CSGetUserItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserItemReq& default_instance();

  void Swap(CSGetUserItemReq* other);

  // implements Message ----------------------------------------------

  CSGetUserItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserItemReq& from);
  void MergeFrom(const CSGetUserItemReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSGetUserItemReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetUserItemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserItemRsp : public ::google::protobuf::Message {
 public:
  CSGetUserItemRsp();
  virtual ~CSGetUserItemRsp();

  CSGetUserItemRsp(const CSGetUserItemRsp& from);

  inline CSGetUserItemRsp& operator=(const CSGetUserItemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserItemRsp& default_instance();

  void Swap(CSGetUserItemRsp* other);

  // implements Message ----------------------------------------------

  CSGetUserItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserItemRsp& from);
  void MergeFrom(const CSGetUserItemRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // repeated .CSItemInfo items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::CSItemInfo& items(int index) const;
  inline ::CSItemInfo* mutable_items(int index);
  inline ::CSItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:CSGetUserItemRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > items_;
  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetUserItemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserAttributesReq : public ::google::protobuf::Message {
 public:
  CSGetUserAttributesReq();
  virtual ~CSGetUserAttributesReq();

  CSGetUserAttributesReq(const CSGetUserAttributesReq& from);

  inline CSGetUserAttributesReq& operator=(const CSGetUserAttributesReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserAttributesReq& default_instance();

  void Swap(CSGetUserAttributesReq* other);

  // implements Message ----------------------------------------------

  CSGetUserAttributesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserAttributesReq& from);
  void MergeFrom(const CSGetUserAttributesReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSGetUserAttributesReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetUserAttributesReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserAttributesRsp : public ::google::protobuf::Message {
 public:
  CSGetUserAttributesRsp();
  virtual ~CSGetUserAttributesRsp();

  CSGetUserAttributesRsp(const CSGetUserAttributesRsp& from);

  inline CSGetUserAttributesRsp& operator=(const CSGetUserAttributesRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserAttributesRsp& default_instance();

  void Swap(CSGetUserAttributesRsp* other);

  // implements Message ----------------------------------------------

  CSGetUserAttributesRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserAttributesRsp& from);
  void MergeFrom(const CSGetUserAttributesRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // required .CSAttributesRsp attributes = 2;
  inline bool has_attributes() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 2;
  inline const ::CSAttributesRsp& attributes() const;
  inline ::CSAttributesRsp* mutable_attributes();
  inline ::CSAttributesRsp* release_attributes();
  inline void set_allocated_attributes(::CSAttributesRsp* attributes);

  // @@protoc_insertion_point(class_scope:CSGetUserAttributesRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_attributes();
  inline void clear_has_attributes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CSAttributesRsp* attributes_;
  ::google::protobuf::uint32 userid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSGetUserAttributesRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyMoneyConfInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyMoneyConfInfoRsp();
  virtual ~CSNotifyMoneyConfInfoRsp();

  CSNotifyMoneyConfInfoRsp(const CSNotifyMoneyConfInfoRsp& from);

  inline CSNotifyMoneyConfInfoRsp& operator=(const CSNotifyMoneyConfInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyMoneyConfInfoRsp& default_instance();

  void Swap(CSNotifyMoneyConfInfoRsp* other);

  // implements Message ----------------------------------------------

  CSNotifyMoneyConfInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyMoneyConfInfoRsp& from);
  void MergeFrom(const CSNotifyMoneyConfInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 pay = 1;
  inline bool has_pay() const;
  inline void clear_pay();
  static const int kPayFieldNumber = 1;
  inline ::google::protobuf::uint32 pay() const;
  inline void set_pay(::google::protobuf::uint32 value);

  // required uint32 diamond = 2;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 2;
  inline ::google::protobuf::uint32 diamond() const;
  inline void set_diamond(::google::protobuf::uint32 value);

  // required uint32 explore = 3;
  inline bool has_explore() const;
  inline void clear_explore();
  static const int kExploreFieldNumber = 3;
  inline ::google::protobuf::uint32 explore() const;
  inline void set_explore(::google::protobuf::uint32 value);

  // required uint32 train = 4;
  inline bool has_train() const;
  inline void clear_train();
  static const int kTrainFieldNumber = 4;
  inline ::google::protobuf::uint32 train() const;
  inline void set_train(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSNotifyMoneyConfInfoRsp)
 private:
  inline void set_has_pay();
  inline void clear_has_pay();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_explore();
  inline void clear_has_explore();
  inline void set_has_train();
  inline void clear_has_train();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pay_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 explore_;
  ::google::protobuf::uint32 train_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();

  void InitAsDefaultInstance();
  static CSNotifyMoneyConfInfoRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// BasicUserBattleInfo

// required uint32 physical_attack = 1;
inline bool BasicUserBattleInfo::has_physical_attack() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicUserBattleInfo::set_has_physical_attack() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicUserBattleInfo::clear_has_physical_attack() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicUserBattleInfo::clear_physical_attack() {
  physical_attack_ = 0u;
  clear_has_physical_attack();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::physical_attack() const {
  return physical_attack_;
}
inline void BasicUserBattleInfo::set_physical_attack(::google::protobuf::uint32 value) {
  set_has_physical_attack();
  physical_attack_ = value;
}

// required uint32 magic_attack = 2;
inline bool BasicUserBattleInfo::has_magic_attack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicUserBattleInfo::set_has_magic_attack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicUserBattleInfo::clear_has_magic_attack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicUserBattleInfo::clear_magic_attack() {
  magic_attack_ = 0u;
  clear_has_magic_attack();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::magic_attack() const {
  return magic_attack_;
}
inline void BasicUserBattleInfo::set_magic_attack(::google::protobuf::uint32 value) {
  set_has_magic_attack();
  magic_attack_ = value;
}

// required uint32 skill_attack = 3;
inline bool BasicUserBattleInfo::has_skill_attack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicUserBattleInfo::set_has_skill_attack() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicUserBattleInfo::clear_has_skill_attack() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicUserBattleInfo::clear_skill_attack() {
  skill_attack_ = 0u;
  clear_has_skill_attack();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::skill_attack() const {
  return skill_attack_;
}
inline void BasicUserBattleInfo::set_skill_attack(::google::protobuf::uint32 value) {
  set_has_skill_attack();
  skill_attack_ = value;
}

// required uint32 physical_defence = 4;
inline bool BasicUserBattleInfo::has_physical_defence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicUserBattleInfo::set_has_physical_defence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicUserBattleInfo::clear_has_physical_defence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicUserBattleInfo::clear_physical_defence() {
  physical_defence_ = 0u;
  clear_has_physical_defence();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::physical_defence() const {
  return physical_defence_;
}
inline void BasicUserBattleInfo::set_physical_defence(::google::protobuf::uint32 value) {
  set_has_physical_defence();
  physical_defence_ = value;
}

// required uint32 magic_defence = 5;
inline bool BasicUserBattleInfo::has_magic_defence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicUserBattleInfo::set_has_magic_defence() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicUserBattleInfo::clear_has_magic_defence() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicUserBattleInfo::clear_magic_defence() {
  magic_defence_ = 0u;
  clear_has_magic_defence();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::magic_defence() const {
  return magic_defence_;
}
inline void BasicUserBattleInfo::set_magic_defence(::google::protobuf::uint32 value) {
  set_has_magic_defence();
  magic_defence_ = value;
}

// required uint32 skill_defence = 6;
inline bool BasicUserBattleInfo::has_skill_defence() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicUserBattleInfo::set_has_skill_defence() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicUserBattleInfo::clear_has_skill_defence() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicUserBattleInfo::clear_skill_defence() {
  skill_defence_ = 0u;
  clear_has_skill_defence();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::skill_defence() const {
  return skill_defence_;
}
inline void BasicUserBattleInfo::set_skill_defence(::google::protobuf::uint32 value) {
  set_has_skill_defence();
  skill_defence_ = value;
}

// required uint32 health_point = 7;
inline bool BasicUserBattleInfo::has_health_point() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicUserBattleInfo::set_has_health_point() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicUserBattleInfo::clear_has_health_point() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicUserBattleInfo::clear_health_point() {
  health_point_ = 0u;
  clear_has_health_point();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::health_point() const {
  return health_point_;
}
inline void BasicUserBattleInfo::set_health_point(::google::protobuf::uint32 value) {
  set_has_health_point();
  health_point_ = value;
}

// required uint32 accurate = 8;
inline bool BasicUserBattleInfo::has_accurate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BasicUserBattleInfo::set_has_accurate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BasicUserBattleInfo::clear_has_accurate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BasicUserBattleInfo::clear_accurate() {
  accurate_ = 0u;
  clear_has_accurate();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::accurate() const {
  return accurate_;
}
inline void BasicUserBattleInfo::set_accurate(::google::protobuf::uint32 value) {
  set_has_accurate();
  accurate_ = value;
}

// required uint32 dodge = 9;
inline bool BasicUserBattleInfo::has_dodge() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BasicUserBattleInfo::set_has_dodge() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BasicUserBattleInfo::clear_has_dodge() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BasicUserBattleInfo::clear_dodge() {
  dodge_ = 0u;
  clear_has_dodge();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::dodge() const {
  return dodge_;
}
inline void BasicUserBattleInfo::set_dodge(::google::protobuf::uint32 value) {
  set_has_dodge();
  dodge_ = value;
}

// required uint32 wreck = 10;
inline bool BasicUserBattleInfo::has_wreck() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BasicUserBattleInfo::set_has_wreck() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BasicUserBattleInfo::clear_has_wreck() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BasicUserBattleInfo::clear_wreck() {
  wreck_ = 0u;
  clear_has_wreck();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::wreck() const {
  return wreck_;
}
inline void BasicUserBattleInfo::set_wreck(::google::protobuf::uint32 value) {
  set_has_wreck();
  wreck_ = value;
}

// required uint32 parry = 11;
inline bool BasicUserBattleInfo::has_parry() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BasicUserBattleInfo::set_has_parry() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BasicUserBattleInfo::clear_has_parry() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BasicUserBattleInfo::clear_parry() {
  parry_ = 0u;
  clear_has_parry();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::parry() const {
  return parry_;
}
inline void BasicUserBattleInfo::set_parry(::google::protobuf::uint32 value) {
  set_has_parry();
  parry_ = value;
}

// required uint32 critical_strike = 12;
inline bool BasicUserBattleInfo::has_critical_strike() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BasicUserBattleInfo::set_has_critical_strike() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BasicUserBattleInfo::clear_has_critical_strike() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BasicUserBattleInfo::clear_critical_strike() {
  critical_strike_ = 0u;
  clear_has_critical_strike();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::critical_strike() const {
  return critical_strike_;
}
inline void BasicUserBattleInfo::set_critical_strike(::google::protobuf::uint32 value) {
  set_has_critical_strike();
  critical_strike_ = value;
}

// required uint32 tenacity = 13;
inline bool BasicUserBattleInfo::has_tenacity() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BasicUserBattleInfo::set_has_tenacity() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BasicUserBattleInfo::clear_has_tenacity() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BasicUserBattleInfo::clear_tenacity() {
  tenacity_ = 0u;
  clear_has_tenacity();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::tenacity() const {
  return tenacity_;
}
inline void BasicUserBattleInfo::set_tenacity(::google::protobuf::uint32 value) {
  set_has_tenacity();
  tenacity_ = value;
}

// required uint32 slay = 14;
inline bool BasicUserBattleInfo::has_slay() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BasicUserBattleInfo::set_has_slay() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BasicUserBattleInfo::clear_has_slay() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BasicUserBattleInfo::clear_slay() {
  slay_ = 0u;
  clear_has_slay();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::slay() const {
  return slay_;
}
inline void BasicUserBattleInfo::set_slay(::google::protobuf::uint32 value) {
  set_has_slay();
  slay_ = value;
}

// required uint32 courage = 15;
inline bool BasicUserBattleInfo::has_courage() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BasicUserBattleInfo::set_has_courage() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BasicUserBattleInfo::clear_has_courage() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BasicUserBattleInfo::clear_courage() {
  courage_ = 0u;
  clear_has_courage();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::courage() const {
  return courage_;
}
inline void BasicUserBattleInfo::set_courage(::google::protobuf::uint32 value) {
  set_has_courage();
  courage_ = value;
}

// required uint32 charm = 16;
inline bool BasicUserBattleInfo::has_charm() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BasicUserBattleInfo::set_has_charm() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BasicUserBattleInfo::clear_has_charm() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BasicUserBattleInfo::clear_charm() {
  charm_ = 0u;
  clear_has_charm();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::charm() const {
  return charm_;
}
inline void BasicUserBattleInfo::set_charm(::google::protobuf::uint32 value) {
  set_has_charm();
  charm_ = value;
}

// required uint32 trick = 17;
inline bool BasicUserBattleInfo::has_trick() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BasicUserBattleInfo::set_has_trick() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BasicUserBattleInfo::clear_has_trick() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BasicUserBattleInfo::clear_trick() {
  trick_ = 0u;
  clear_has_trick();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::trick() const {
  return trick_;
}
inline void BasicUserBattleInfo::set_trick(::google::protobuf::uint32 value) {
  set_has_trick();
  trick_ = value;
}

// required uint32 speed = 18;
inline bool BasicUserBattleInfo::has_speed() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BasicUserBattleInfo::set_has_speed() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BasicUserBattleInfo::clear_has_speed() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BasicUserBattleInfo::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::speed() const {
  return speed_;
}
inline void BasicUserBattleInfo::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
}

// required uint32 proficiency = 19;
inline bool BasicUserBattleInfo::has_proficiency() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BasicUserBattleInfo::set_has_proficiency() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BasicUserBattleInfo::clear_has_proficiency() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BasicUserBattleInfo::clear_proficiency() {
  proficiency_ = 0u;
  clear_has_proficiency();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::proficiency() const {
  return proficiency_;
}
inline void BasicUserBattleInfo::set_proficiency(::google::protobuf::uint32 value) {
  set_has_proficiency();
  proficiency_ = value;
}

// optional uint32 current_hp = 20;
inline bool BasicUserBattleInfo::has_current_hp() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BasicUserBattleInfo::set_has_current_hp() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BasicUserBattleInfo::clear_has_current_hp() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BasicUserBattleInfo::clear_current_hp() {
  current_hp_ = 0u;
  clear_has_current_hp();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::current_hp() const {
  return current_hp_;
}
inline void BasicUserBattleInfo::set_current_hp(::google::protobuf::uint32 value) {
  set_has_current_hp();
  current_hp_ = value;
}

// -------------------------------------------------------------------

// UserSkillPart

// required uint32 part = 1;
inline bool UserSkillPart::has_part() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSkillPart::set_has_part() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSkillPart::clear_has_part() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSkillPart::clear_part() {
  part_ = 0u;
  clear_has_part();
}
inline ::google::protobuf::uint32 UserSkillPart::part() const {
  return part_;
}
inline void UserSkillPart::set_part(::google::protobuf::uint32 value) {
  set_has_part();
  part_ = value;
}

// required .BasicUserBattleInfo exp_battle_info = 2;
inline bool UserSkillPart::has_exp_battle_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSkillPart::set_has_exp_battle_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSkillPart::clear_has_exp_battle_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSkillPart::clear_exp_battle_info() {
  if (exp_battle_info_ != NULL) exp_battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_exp_battle_info();
}
inline const ::BasicUserBattleInfo& UserSkillPart::exp_battle_info() const {
  return exp_battle_info_ != NULL ? *exp_battle_info_ : *default_instance_->exp_battle_info_;
}
inline ::BasicUserBattleInfo* UserSkillPart::mutable_exp_battle_info() {
  set_has_exp_battle_info();
  if (exp_battle_info_ == NULL) exp_battle_info_ = new ::BasicUserBattleInfo;
  return exp_battle_info_;
}
inline ::BasicUserBattleInfo* UserSkillPart::release_exp_battle_info() {
  clear_has_exp_battle_info();
  ::BasicUserBattleInfo* temp = exp_battle_info_;
  exp_battle_info_ = NULL;
  return temp;
}
inline void UserSkillPart::set_allocated_exp_battle_info(::BasicUserBattleInfo* exp_battle_info) {
  delete exp_battle_info_;
  exp_battle_info_ = exp_battle_info;
  if (exp_battle_info) {
    set_has_exp_battle_info();
  } else {
    clear_has_exp_battle_info();
  }
}

// required float continue_time = 5;
inline bool UserSkillPart::has_continue_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSkillPart::set_has_continue_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSkillPart::clear_has_continue_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSkillPart::clear_continue_time() {
  continue_time_ = 0;
  clear_has_continue_time();
}
inline float UserSkillPart::continue_time() const {
  return continue_time_;
}
inline void UserSkillPart::set_continue_time(float value) {
  set_has_continue_time();
  continue_time_ = value;
}

// required uint32 can_attack_number = 6;
inline bool UserSkillPart::has_can_attack_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserSkillPart::set_has_can_attack_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserSkillPart::clear_has_can_attack_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserSkillPart::clear_can_attack_number() {
  can_attack_number_ = 0u;
  clear_has_can_attack_number();
}
inline ::google::protobuf::uint32 UserSkillPart::can_attack_number() const {
  return can_attack_number_;
}
inline void UserSkillPart::set_can_attack_number(::google::protobuf::uint32 value) {
  set_has_can_attack_number();
  can_attack_number_ = value;
}

// required uint32 hurt = 7;
inline bool UserSkillPart::has_hurt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserSkillPart::set_has_hurt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserSkillPart::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserSkillPart::clear_hurt() {
  hurt_ = 0u;
  clear_has_hurt();
}
inline ::google::protobuf::uint32 UserSkillPart::hurt() const {
  return hurt_;
}
inline void UserSkillPart::set_hurt(::google::protobuf::uint32 value) {
  set_has_hurt();
  hurt_ = value;
}

// -------------------------------------------------------------------

// UserSkillInfo

// required uint32 skill_id = 1;
inline bool UserSkillInfo::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSkillInfo::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSkillInfo::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSkillInfo::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 UserSkillInfo::skill_id() const {
  return skill_id_;
}
inline void UserSkillInfo::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool UserSkillInfo::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSkillInfo::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSkillInfo::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSkillInfo::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 UserSkillInfo::skill_level() const {
  return skill_level_;
}
inline void UserSkillInfo::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// required uint32 money = 3;
inline bool UserSkillInfo::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSkillInfo::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSkillInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSkillInfo::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 UserSkillInfo::money() const {
  return money_;
}
inline void UserSkillInfo::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// required uint32 exploit = 4;
inline bool UserSkillInfo::has_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserSkillInfo::set_has_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserSkillInfo::clear_has_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserSkillInfo::clear_exploit() {
  exploit_ = 0u;
  clear_has_exploit();
}
inline ::google::protobuf::uint32 UserSkillInfo::exploit() const {
  return exploit_;
}
inline void UserSkillInfo::set_exploit(::google::protobuf::uint32 value) {
  set_has_exploit();
  exploit_ = value;
}

// required float own_cd = 5;
inline bool UserSkillInfo::has_own_cd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserSkillInfo::set_has_own_cd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserSkillInfo::clear_has_own_cd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserSkillInfo::clear_own_cd() {
  own_cd_ = 0;
  clear_has_own_cd();
}
inline float UserSkillInfo::own_cd() const {
  return own_cd_;
}
inline void UserSkillInfo::set_own_cd(float value) {
  set_has_own_cd();
  own_cd_ = value;
}

// required float share_cd = 6;
inline bool UserSkillInfo::has_share_cd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserSkillInfo::set_has_share_cd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserSkillInfo::clear_has_share_cd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserSkillInfo::clear_share_cd() {
  share_cd_ = 0;
  clear_has_share_cd();
}
inline float UserSkillInfo::share_cd() const {
  return share_cd_;
}
inline void UserSkillInfo::set_share_cd(float value) {
  set_has_share_cd();
  share_cd_ = value;
}

// repeated .UserSkillPart parts = 7;
inline int UserSkillInfo::parts_size() const {
  return parts_.size();
}
inline void UserSkillInfo::clear_parts() {
  parts_.Clear();
}
inline const ::UserSkillPart& UserSkillInfo::parts(int index) const {
  return parts_.Get(index);
}
inline ::UserSkillPart* UserSkillInfo::mutable_parts(int index) {
  return parts_.Mutable(index);
}
inline ::UserSkillPart* UserSkillInfo::add_parts() {
  return parts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserSkillPart >&
UserSkillInfo::parts() const {
  return parts_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserSkillPart >*
UserSkillInfo::mutable_parts() {
  return &parts_;
}

// required uint32 max_level = 8;
inline bool UserSkillInfo::has_max_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserSkillInfo::set_has_max_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserSkillInfo::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserSkillInfo::clear_max_level() {
  max_level_ = 0u;
  clear_has_max_level();
}
inline ::google::protobuf::uint32 UserSkillInfo::max_level() const {
  return max_level_;
}
inline void UserSkillInfo::set_max_level(::google::protobuf::uint32 value) {
  set_has_max_level();
  max_level_ = value;
}

// -------------------------------------------------------------------

// BasicUserInfo

// required uint32 uid = 1;
inline bool BasicUserInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicUserInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicUserInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicUserInfo::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 BasicUserInfo::uid() const {
  return uid_;
}
inline void BasicUserInfo::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string name = 2;
inline bool BasicUserInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicUserInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicUserInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicUserInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BasicUserInfo::name() const {
  return *name_;
}
inline void BasicUserInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BasicUserInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BasicUserInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BasicUserInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BasicUserInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BasicUserInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 type = 3;
inline bool BasicUserInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicUserInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicUserInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicUserInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BasicUserInfo::type() const {
  return type_;
}
inline void BasicUserInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 gender = 4;
inline bool BasicUserInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicUserInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicUserInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicUserInfo::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 BasicUserInfo::gender() const {
  return gender_;
}
inline void BasicUserInfo::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// required uint32 lv = 5;
inline bool BasicUserInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicUserInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicUserInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicUserInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 BasicUserInfo::lv() const {
  return lv_;
}
inline void BasicUserInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 xpos = 6;
inline bool BasicUserInfo::has_xpos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicUserInfo::set_has_xpos() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicUserInfo::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicUserInfo::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 BasicUserInfo::xpos() const {
  return xpos_;
}
inline void BasicUserInfo::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 7;
inline bool BasicUserInfo::has_ypos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicUserInfo::set_has_ypos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicUserInfo::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicUserInfo::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 BasicUserInfo::ypos() const {
  return ypos_;
}
inline void BasicUserInfo::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 orient = 8;
inline bool BasicUserInfo::has_orient() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BasicUserInfo::set_has_orient() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BasicUserInfo::clear_has_orient() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BasicUserInfo::clear_orient() {
  orient_ = 0u;
  clear_has_orient();
}
inline ::google::protobuf::uint32 BasicUserInfo::orient() const {
  return orient_;
}
inline void BasicUserInfo::set_orient(::google::protobuf::uint32 value) {
  set_has_orient();
  orient_ = value;
}

// optional uint32 battle_side = 9;
inline bool BasicUserInfo::has_battle_side() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BasicUserInfo::set_has_battle_side() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BasicUserInfo::clear_has_battle_side() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BasicUserInfo::clear_battle_side() {
  battle_side_ = 0u;
  clear_has_battle_side();
}
inline ::google::protobuf::uint32 BasicUserInfo::battle_side() const {
  return battle_side_;
}
inline void BasicUserInfo::set_battle_side(::google::protobuf::uint32 value) {
  set_has_battle_side();
  battle_side_ = value;
}

// optional .BasicUserBattleInfo battle_info = 10;
inline bool BasicUserInfo::has_battle_info() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BasicUserInfo::set_has_battle_info() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BasicUserInfo::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BasicUserInfo::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_battle_info();
}
inline const ::BasicUserBattleInfo& BasicUserInfo::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::BasicUserBattleInfo* BasicUserInfo::mutable_battle_info() {
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::BasicUserBattleInfo;
  return battle_info_;
}
inline ::BasicUserBattleInfo* BasicUserInfo::release_battle_info() {
  clear_has_battle_info();
  ::BasicUserBattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}
inline void BasicUserInfo::set_allocated_battle_info(::BasicUserBattleInfo* battle_info) {
  delete battle_info_;
  battle_info_ = battle_info;
  if (battle_info) {
    set_has_battle_info();
  } else {
    clear_has_battle_info();
  }
}

// required uint32 next_lv = 11;
inline bool BasicUserInfo::has_next_lv() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BasicUserInfo::set_has_next_lv() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BasicUserInfo::clear_has_next_lv() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BasicUserInfo::clear_next_lv() {
  next_lv_ = 0u;
  clear_has_next_lv();
}
inline ::google::protobuf::uint32 BasicUserInfo::next_lv() const {
  return next_lv_;
}
inline void BasicUserInfo::set_next_lv(::google::protobuf::uint32 value) {
  set_has_next_lv();
  next_lv_ = value;
}

// -------------------------------------------------------------------

// CSEnterMapReq

// required uint32 mapid = 1;
inline bool CSEnterMapReq::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEnterMapReq::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEnterMapReq::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEnterMapReq::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSEnterMapReq::mapid() const {
  return mapid_;
}
inline void CSEnterMapReq::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required uint32 xpos = 2;
inline bool CSEnterMapReq::has_xpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEnterMapReq::set_has_xpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEnterMapReq::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEnterMapReq::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 CSEnterMapReq::xpos() const {
  return xpos_;
}
inline void CSEnterMapReq::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 3;
inline bool CSEnterMapReq::has_ypos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEnterMapReq::set_has_ypos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEnterMapReq::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEnterMapReq::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 CSEnterMapReq::ypos() const {
  return ypos_;
}
inline void CSEnterMapReq::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 orient = 4;
inline bool CSEnterMapReq::has_orient() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSEnterMapReq::set_has_orient() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSEnterMapReq::clear_has_orient() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSEnterMapReq::clear_orient() {
  orient_ = 0u;
  clear_has_orient();
}
inline ::google::protobuf::uint32 CSEnterMapReq::orient() const {
  return orient_;
}
inline void CSEnterMapReq::set_orient(::google::protobuf::uint32 value) {
  set_has_orient();
  orient_ = value;
}

// -------------------------------------------------------------------

// CSEnterMapRsp

// required uint32 mapid = 1;
inline bool CSEnterMapRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEnterMapRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEnterMapRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEnterMapRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSEnterMapRsp::mapid() const {
  return mapid_;
}
inline void CSEnterMapRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required .BasicUserInfo userinfo = 2;
inline bool CSEnterMapRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEnterMapRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEnterMapRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEnterMapRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::BasicUserInfo::Clear();
  clear_has_userinfo();
}
inline const ::BasicUserInfo& CSEnterMapRsp::userinfo() const {
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::BasicUserInfo* CSEnterMapRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::BasicUserInfo;
  return userinfo_;
}
inline ::BasicUserInfo* CSEnterMapRsp::release_userinfo() {
  clear_has_userinfo();
  ::BasicUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void CSEnterMapRsp::set_allocated_userinfo(::BasicUserInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
}

// -------------------------------------------------------------------

// CSLeaveMapRsp

// required uint32 uid = 1;
inline bool CSLeaveMapRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLeaveMapRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLeaveMapRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLeaveMapRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSLeaveMapRsp::uid() const {
  return uid_;
}
inline void CSLeaveMapRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// CSGetMapUsersReq

// -------------------------------------------------------------------

// CSGetMapUsersRsp

// repeated .BasicUserInfo userinfo = 1;
inline int CSGetMapUsersRsp::userinfo_size() const {
  return userinfo_.size();
}
inline void CSGetMapUsersRsp::clear_userinfo() {
  userinfo_.Clear();
}
inline const ::BasicUserInfo& CSGetMapUsersRsp::userinfo(int index) const {
  return userinfo_.Get(index);
}
inline ::BasicUserInfo* CSGetMapUsersRsp::mutable_userinfo(int index) {
  return userinfo_.Mutable(index);
}
inline ::BasicUserInfo* CSGetMapUsersRsp::add_userinfo() {
  return userinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >&
CSGetMapUsersRsp::userinfo() const {
  return userinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >*
CSGetMapUsersRsp::mutable_userinfo() {
  return &userinfo_;
}

// -------------------------------------------------------------------

// CSGetUserSkillReq

// required uint32 userid = 1;
inline bool CSGetUserSkillReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserSkillReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserSkillReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserSkillReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserSkillReq::userid() const {
  return userid_;
}
inline void CSGetUserSkillReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// -------------------------------------------------------------------

// CSGetUserSkillRsp

// required uint32 userid = 1;
inline bool CSGetUserSkillRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserSkillRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserSkillRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserSkillRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::userid() const {
  return userid_;
}
inline void CSGetUserSkillRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// repeated .UserSkillInfo userskills = 2;
inline int CSGetUserSkillRsp::userskills_size() const {
  return userskills_.size();
}
inline void CSGetUserSkillRsp::clear_userskills() {
  userskills_.Clear();
}
inline const ::UserSkillInfo& CSGetUserSkillRsp::userskills(int index) const {
  return userskills_.Get(index);
}
inline ::UserSkillInfo* CSGetUserSkillRsp::mutable_userskills(int index) {
  return userskills_.Mutable(index);
}
inline ::UserSkillInfo* CSGetUserSkillRsp::add_userskills() {
  return userskills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >&
CSGetUserSkillRsp::userskills() const {
  return userskills_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >*
CSGetUserSkillRsp::mutable_userskills() {
  return &userskills_;
}

// repeated uint32 ready = 3;
inline int CSGetUserSkillRsp::ready_size() const {
  return ready_.size();
}
inline void CSGetUserSkillRsp::clear_ready() {
  ready_.Clear();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::ready(int index) const {
  return ready_.Get(index);
}
inline void CSGetUserSkillRsp::set_ready(int index, ::google::protobuf::uint32 value) {
  ready_.Set(index, value);
}
inline void CSGetUserSkillRsp::add_ready(::google::protobuf::uint32 value) {
  ready_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetUserSkillRsp::ready() const {
  return ready_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetUserSkillRsp::mutable_ready() {
  return &ready_;
}

// -------------------------------------------------------------------

// CSGetUserInfoReq

// required uint32 userid = 1;
inline bool CSGetUserInfoReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserInfoReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserInfoReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserInfoReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserInfoReq::userid() const {
  return userid_;
}
inline void CSGetUserInfoReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// -------------------------------------------------------------------

// CSGetUserInfoRsp

// required uint32 userid = 1;
inline bool CSGetUserInfoRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserInfoRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserInfoRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserInfoRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserInfoRsp::userid() const {
  return userid_;
}
inline void CSGetUserInfoRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required .BasicUserInfo userinfo = 2;
inline bool CSGetUserInfoRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserInfoRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserInfoRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserInfoRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::BasicUserInfo::Clear();
  clear_has_userinfo();
}
inline const ::BasicUserInfo& CSGetUserInfoRsp::userinfo() const {
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::BasicUserInfo* CSGetUserInfoRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::BasicUserInfo;
  return userinfo_;
}
inline ::BasicUserInfo* CSGetUserInfoRsp::release_userinfo() {
  clear_has_userinfo();
  ::BasicUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void CSGetUserInfoRsp::set_allocated_userinfo(::BasicUserInfo* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    set_has_userinfo();
  } else {
    clear_has_userinfo();
  }
}

// -------------------------------------------------------------------

// CSAddUserSkillReq

// required uint32 skill_id = 1;
inline bool CSAddUserSkillReq::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddUserSkillReq::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddUserSkillReq::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddUserSkillReq::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSAddUserSkillReq::skill_id() const {
  return skill_id_;
}
inline void CSAddUserSkillReq::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSAddUserSkillReq::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAddUserSkillReq::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAddUserSkillReq::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAddUserSkillReq::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSAddUserSkillReq::skill_level() const {
  return skill_level_;
}
inline void CSAddUserSkillReq::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// CSAddUserSkillRsp

// required uint32 skill_id = 1;
inline bool CSAddUserSkillRsp::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddUserSkillRsp::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddUserSkillRsp::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddUserSkillRsp::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSAddUserSkillRsp::skill_id() const {
  return skill_id_;
}
inline void CSAddUserSkillRsp::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSAddUserSkillRsp::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAddUserSkillRsp::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAddUserSkillRsp::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAddUserSkillRsp::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSAddUserSkillRsp::skill_level() const {
  return skill_level_;
}
inline void CSAddUserSkillRsp::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// CSUserSkillDiffReq

// required uint32 skill_id = 1;
inline bool CSUserSkillDiffReq::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSUserSkillDiffReq::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSUserSkillDiffReq::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSUserSkillDiffReq::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSUserSkillDiffReq::skill_id() const {
  return skill_id_;
}
inline void CSUserSkillDiffReq::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSUserSkillDiffReq::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSUserSkillDiffReq::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSUserSkillDiffReq::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSUserSkillDiffReq::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSUserSkillDiffReq::skill_level() const {
  return skill_level_;
}
inline void CSUserSkillDiffReq::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// CSUserSkillDiffRsp

// required uint32 skill_id = 1;
inline bool CSUserSkillDiffRsp::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSUserSkillDiffRsp::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSUserSkillDiffRsp::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::skill_id() const {
  return skill_id_;
}
inline void CSUserSkillDiffRsp::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSUserSkillDiffRsp::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSUserSkillDiffRsp::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSUserSkillDiffRsp::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::skill_level() const {
  return skill_level_;
}
inline void CSUserSkillDiffRsp::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// optional uint32 money = 3;
inline bool CSUserSkillDiffRsp::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSUserSkillDiffRsp::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSUserSkillDiffRsp::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::money() const {
  return money_;
}
inline void CSUserSkillDiffRsp::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// optional uint32 exploit = 4;
inline bool CSUserSkillDiffRsp::has_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSUserSkillDiffRsp::clear_has_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSUserSkillDiffRsp::clear_exploit() {
  exploit_ = 0u;
  clear_has_exploit();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::exploit() const {
  return exploit_;
}
inline void CSUserSkillDiffRsp::set_exploit(::google::protobuf::uint32 value) {
  set_has_exploit();
  exploit_ = value;
}

// optional uint32 lv = 5;
inline bool CSUserSkillDiffRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSUserSkillDiffRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSUserSkillDiffRsp::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::lv() const {
  return lv_;
}
inline void CSUserSkillDiffRsp::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// optional .BasicUserBattleInfo battle_info = 6;
inline bool CSUserSkillDiffRsp::has_battle_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_battle_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSUserSkillDiffRsp::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSUserSkillDiffRsp::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_battle_info();
}
inline const ::BasicUserBattleInfo& CSUserSkillDiffRsp::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::BasicUserBattleInfo* CSUserSkillDiffRsp::mutable_battle_info() {
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::BasicUserBattleInfo;
  return battle_info_;
}
inline ::BasicUserBattleInfo* CSUserSkillDiffRsp::release_battle_info() {
  clear_has_battle_info();
  ::BasicUserBattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}
inline void CSUserSkillDiffRsp::set_allocated_battle_info(::BasicUserBattleInfo* battle_info) {
  delete battle_info_;
  battle_info_ = battle_info;
  if (battle_info) {
    set_has_battle_info();
  } else {
    clear_has_battle_info();
  }
}

// optional int32 own_cd = 7;
inline bool CSUserSkillDiffRsp::has_own_cd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_own_cd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSUserSkillDiffRsp::clear_has_own_cd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSUserSkillDiffRsp::clear_own_cd() {
  own_cd_ = 0;
  clear_has_own_cd();
}
inline ::google::protobuf::int32 CSUserSkillDiffRsp::own_cd() const {
  return own_cd_;
}
inline void CSUserSkillDiffRsp::set_own_cd(::google::protobuf::int32 value) {
  set_has_own_cd();
  own_cd_ = value;
}

// optional int32 share_cd = 8;
inline bool CSUserSkillDiffRsp::has_share_cd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_share_cd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSUserSkillDiffRsp::clear_has_share_cd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSUserSkillDiffRsp::clear_share_cd() {
  share_cd_ = 0;
  clear_has_share_cd();
}
inline ::google::protobuf::int32 CSUserSkillDiffRsp::share_cd() const {
  return share_cd_;
}
inline void CSUserSkillDiffRsp::set_share_cd(::google::protobuf::int32 value) {
  set_has_share_cd();
  share_cd_ = value;
}

// optional int32 hurt = 9;
inline bool CSUserSkillDiffRsp::has_hurt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_hurt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSUserSkillDiffRsp::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSUserSkillDiffRsp::clear_hurt() {
  hurt_ = 0;
  clear_has_hurt();
}
inline ::google::protobuf::int32 CSUserSkillDiffRsp::hurt() const {
  return hurt_;
}
inline void CSUserSkillDiffRsp::set_hurt(::google::protobuf::int32 value) {
  set_has_hurt();
  hurt_ = value;
}

// optional uint32 continue_time = 10;
inline bool CSUserSkillDiffRsp::has_continue_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_continue_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSUserSkillDiffRsp::clear_has_continue_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSUserSkillDiffRsp::clear_continue_time() {
  continue_time_ = 0u;
  clear_has_continue_time();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::continue_time() const {
  return continue_time_;
}
inline void CSUserSkillDiffRsp::set_continue_time(::google::protobuf::uint32 value) {
  set_has_continue_time();
  continue_time_ = value;
}

// -------------------------------------------------------------------

// CSWalkReq

// required uint32 xpos = 1;
inline bool CSWalkReq::has_xpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWalkReq::set_has_xpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWalkReq::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWalkReq::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 CSWalkReq::xpos() const {
  return xpos_;
}
inline void CSWalkReq::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 2;
inline bool CSWalkReq::has_ypos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSWalkReq::set_has_ypos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSWalkReq::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSWalkReq::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 CSWalkReq::ypos() const {
  return ypos_;
}
inline void CSWalkReq::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 animid = 3;
inline bool CSWalkReq::has_animid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSWalkReq::set_has_animid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSWalkReq::clear_has_animid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSWalkReq::clear_animid() {
  animid_ = 0u;
  clear_has_animid();
}
inline ::google::protobuf::uint32 CSWalkReq::animid() const {
  return animid_;
}
inline void CSWalkReq::set_animid(::google::protobuf::uint32 value) {
  set_has_animid();
  animid_ = value;
}

// required bool flip = 4;
inline bool CSWalkReq::has_flip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSWalkReq::set_has_flip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSWalkReq::clear_has_flip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSWalkReq::clear_flip() {
  flip_ = false;
  clear_has_flip();
}
inline bool CSWalkReq::flip() const {
  return flip_;
}
inline void CSWalkReq::set_flip(bool value) {
  set_has_flip();
  flip_ = value;
}

// -------------------------------------------------------------------

// CSWalkRsp

// required uint32 uid = 1;
inline bool CSWalkRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWalkRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWalkRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWalkRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSWalkRsp::uid() const {
  return uid_;
}
inline void CSWalkRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 xpos = 2;
inline bool CSWalkRsp::has_xpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSWalkRsp::set_has_xpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSWalkRsp::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSWalkRsp::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 CSWalkRsp::xpos() const {
  return xpos_;
}
inline void CSWalkRsp::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 3;
inline bool CSWalkRsp::has_ypos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSWalkRsp::set_has_ypos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSWalkRsp::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSWalkRsp::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 CSWalkRsp::ypos() const {
  return ypos_;
}
inline void CSWalkRsp::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 animid = 4;
inline bool CSWalkRsp::has_animid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSWalkRsp::set_has_animid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSWalkRsp::clear_has_animid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSWalkRsp::clear_animid() {
  animid_ = 0u;
  clear_has_animid();
}
inline ::google::protobuf::uint32 CSWalkRsp::animid() const {
  return animid_;
}
inline void CSWalkRsp::set_animid(::google::protobuf::uint32 value) {
  set_has_animid();
  animid_ = value;
}

// required bool flip = 5;
inline bool CSWalkRsp::has_flip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSWalkRsp::set_has_flip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSWalkRsp::clear_has_flip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSWalkRsp::clear_flip() {
  flip_ = false;
  clear_has_flip();
}
inline bool CSWalkRsp::flip() const {
  return flip_;
}
inline void CSWalkRsp::set_flip(bool value) {
  set_has_flip();
  flip_ = value;
}

// -------------------------------------------------------------------

// CSItemAttr

// required uint32 attr_key = 1;
inline bool CSItemAttr::has_attr_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemAttr::set_has_attr_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemAttr::clear_has_attr_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemAttr::clear_attr_key() {
  attr_key_ = 0u;
  clear_has_attr_key();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_key() const {
  return attr_key_;
}
inline void CSItemAttr::set_attr_key(::google::protobuf::uint32 value) {
  set_has_attr_key();
  attr_key_ = value;
}

// required uint32 attr_basic_value = 2;
inline bool CSItemAttr::has_attr_basic_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemAttr::set_has_attr_basic_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemAttr::clear_has_attr_basic_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemAttr::clear_attr_basic_value() {
  attr_basic_value_ = 0u;
  clear_has_attr_basic_value();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_basic_value() const {
  return attr_basic_value_;
}
inline void CSItemAttr::set_attr_basic_value(::google::protobuf::uint32 value) {
  set_has_attr_basic_value();
  attr_basic_value_ = value;
}

// optional uint32 attr_intensify_value = 3;
inline bool CSItemAttr::has_attr_intensify_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSItemAttr::set_has_attr_intensify_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSItemAttr::clear_has_attr_intensify_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSItemAttr::clear_attr_intensify_value() {
  attr_intensify_value_ = 0u;
  clear_has_attr_intensify_value();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_intensify_value() const {
  return attr_intensify_value_;
}
inline void CSItemAttr::set_attr_intensify_value(::google::protobuf::uint32 value) {
  set_has_attr_intensify_value();
  attr_intensify_value_ = value;
}

// optional uint32 attr_gem_value = 4;
inline bool CSItemAttr::has_attr_gem_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSItemAttr::set_has_attr_gem_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSItemAttr::clear_has_attr_gem_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSItemAttr::clear_attr_gem_value() {
  attr_gem_value_ = 0u;
  clear_has_attr_gem_value();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_gem_value() const {
  return attr_gem_value_;
}
inline void CSItemAttr::set_attr_gem_value(::google::protobuf::uint32 value) {
  set_has_attr_gem_value();
  attr_gem_value_ = value;
}

// -------------------------------------------------------------------

// CSEquipHole

// required uint32 hole_index = 1;
inline bool CSEquipHole::has_hole_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipHole::set_has_hole_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipHole::clear_has_hole_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipHole::clear_hole_index() {
  hole_index_ = 0u;
  clear_has_hole_index();
}
inline ::google::protobuf::uint32 CSEquipHole::hole_index() const {
  return hole_index_;
}
inline void CSEquipHole::set_hole_index(::google::protobuf::uint32 value) {
  set_has_hole_index();
  hole_index_ = value;
}

// required uint32 item_gem_id = 2;
inline bool CSEquipHole::has_item_gem_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipHole::set_has_item_gem_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipHole::clear_has_item_gem_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipHole::clear_item_gem_id() {
  item_gem_id_ = 0u;
  clear_has_item_gem_id();
}
inline ::google::protobuf::uint32 CSEquipHole::item_gem_id() const {
  return item_gem_id_;
}
inline void CSEquipHole::set_item_gem_id(::google::protobuf::uint32 value) {
  set_has_item_gem_id();
  item_gem_id_ = value;
}

// required uint32 attr_key = 3;
inline bool CSEquipHole::has_attr_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipHole::set_has_attr_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipHole::clear_has_attr_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipHole::clear_attr_key() {
  attr_key_ = 0u;
  clear_has_attr_key();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_key() const {
  return attr_key_;
}
inline void CSEquipHole::set_attr_key(::google::protobuf::uint32 value) {
  set_has_attr_key();
  attr_key_ = value;
}

// required uint32 attr_value = 4;
inline bool CSEquipHole::has_attr_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSEquipHole::set_has_attr_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSEquipHole::clear_has_attr_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSEquipHole::clear_attr_value() {
  attr_value_ = 0u;
  clear_has_attr_value();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_value() const {
  return attr_value_;
}
inline void CSEquipHole::set_attr_value(::google::protobuf::uint32 value) {
  set_has_attr_value();
  attr_value_ = value;
}

// optional uint32 attr_min_v = 5;
inline bool CSEquipHole::has_attr_min_v() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSEquipHole::set_has_attr_min_v() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSEquipHole::clear_has_attr_min_v() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSEquipHole::clear_attr_min_v() {
  attr_min_v_ = 0u;
  clear_has_attr_min_v();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_min_v() const {
  return attr_min_v_;
}
inline void CSEquipHole::set_attr_min_v(::google::protobuf::uint32 value) {
  set_has_attr_min_v();
  attr_min_v_ = value;
}

// optional uint32 attr_max_v = 6;
inline bool CSEquipHole::has_attr_max_v() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSEquipHole::set_has_attr_max_v() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSEquipHole::clear_has_attr_max_v() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSEquipHole::clear_attr_max_v() {
  attr_max_v_ = 0u;
  clear_has_attr_max_v();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_max_v() const {
  return attr_max_v_;
}
inline void CSEquipHole::set_attr_max_v(::google::protobuf::uint32 value) {
  set_has_attr_max_v();
  attr_max_v_ = value;
}

// -------------------------------------------------------------------

// EquipmentBase_Item_Attr

// required uint32 key = 1;
inline bool EquipmentBase_Item_Attr::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentBase_Item_Attr::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentBase_Item_Attr::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentBase_Item_Attr::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 EquipmentBase_Item_Attr::key() const {
  return key_;
}
inline void EquipmentBase_Item_Attr::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool EquipmentBase_Item_Attr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipmentBase_Item_Attr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipmentBase_Item_Attr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipmentBase_Item_Attr::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 EquipmentBase_Item_Attr::value() const {
  return value_;
}
inline void EquipmentBase_Item_Attr::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// EquipmentBase

// required uint32 cost_levelup = 1;
inline bool EquipmentBase::has_cost_levelup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentBase::set_has_cost_levelup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentBase::clear_has_cost_levelup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentBase::clear_cost_levelup() {
  cost_levelup_ = 0u;
  clear_has_cost_levelup();
}
inline ::google::protobuf::uint32 EquipmentBase::cost_levelup() const {
  return cost_levelup_;
}
inline void EquipmentBase::set_cost_levelup(::google::protobuf::uint32 value) {
  set_has_cost_levelup();
  cost_levelup_ = value;
}

// repeated .EquipmentBase.Item_Attr incr_attr_next_lv = 2;
inline int EquipmentBase::incr_attr_next_lv_size() const {
  return incr_attr_next_lv_.size();
}
inline void EquipmentBase::clear_incr_attr_next_lv() {
  incr_attr_next_lv_.Clear();
}
inline const ::EquipmentBase_Item_Attr& EquipmentBase::incr_attr_next_lv(int index) const {
  return incr_attr_next_lv_.Get(index);
}
inline ::EquipmentBase_Item_Attr* EquipmentBase::mutable_incr_attr_next_lv(int index) {
  return incr_attr_next_lv_.Mutable(index);
}
inline ::EquipmentBase_Item_Attr* EquipmentBase::add_incr_attr_next_lv() {
  return incr_attr_next_lv_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >&
EquipmentBase::incr_attr_next_lv() const {
  return incr_attr_next_lv_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >*
EquipmentBase::mutable_incr_attr_next_lv() {
  return &incr_attr_next_lv_;
}

// repeated .CSEquipHole equip_holes = 3;
inline int EquipmentBase::equip_holes_size() const {
  return equip_holes_.size();
}
inline void EquipmentBase::clear_equip_holes() {
  equip_holes_.Clear();
}
inline const ::CSEquipHole& EquipmentBase::equip_holes(int index) const {
  return equip_holes_.Get(index);
}
inline ::CSEquipHole* EquipmentBase::mutable_equip_holes(int index) {
  return equip_holes_.Mutable(index);
}
inline ::CSEquipHole* EquipmentBase::add_equip_holes() {
  return equip_holes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSEquipHole >&
EquipmentBase::equip_holes() const {
  return equip_holes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSEquipHole >*
EquipmentBase::mutable_equip_holes() {
  return &equip_holes_;
}

// -------------------------------------------------------------------

// SpiritStoneBase

// required uint32 consume = 1;
inline bool SpiritStoneBase::has_consume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritStoneBase::set_has_consume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritStoneBase::clear_has_consume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritStoneBase::clear_consume() {
  consume_ = 0u;
  clear_has_consume();
}
inline ::google::protobuf::uint32 SpiritStoneBase::consume() const {
  return consume_;
}
inline void SpiritStoneBase::set_consume(::google::protobuf::uint32 value) {
  set_has_consume();
  consume_ = value;
}

// required uint32 convert = 2;
inline bool SpiritStoneBase::has_convert() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpiritStoneBase::set_has_convert() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpiritStoneBase::clear_has_convert() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpiritStoneBase::clear_convert() {
  convert_ = 0u;
  clear_has_convert();
}
inline ::google::protobuf::uint32 SpiritStoneBase::convert() const {
  return convert_;
}
inline void SpiritStoneBase::set_convert(::google::protobuf::uint32 value) {
  set_has_convert();
  convert_ = value;
}

// -------------------------------------------------------------------

// ManorBase

// required uint32 hunt_gain_coin = 1;
inline bool ManorBase::has_hunt_gain_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManorBase::set_has_hunt_gain_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManorBase::clear_has_hunt_gain_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManorBase::clear_hunt_gain_coin() {
  hunt_gain_coin_ = 0u;
  clear_has_hunt_gain_coin();
}
inline ::google::protobuf::uint32 ManorBase::hunt_gain_coin() const {
  return hunt_gain_coin_;
}
inline void ManorBase::set_hunt_gain_coin(::google::protobuf::uint32 value) {
  set_has_hunt_gain_coin();
  hunt_gain_coin_ = value;
}

// required uint32 pick_gain_exp = 2;
inline bool ManorBase::has_pick_gain_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManorBase::set_has_pick_gain_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManorBase::clear_has_pick_gain_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManorBase::clear_pick_gain_exp() {
  pick_gain_exp_ = 0u;
  clear_has_pick_gain_exp();
}
inline ::google::protobuf::uint32 ManorBase::pick_gain_exp() const {
  return pick_gain_exp_;
}
inline void ManorBase::set_pick_gain_exp(::google::protobuf::uint32 value) {
  set_has_pick_gain_exp();
  pick_gain_exp_ = value;
}

// -------------------------------------------------------------------

// CSItemInfo

// required uint32 pos = 1;
inline bool CSItemInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemInfo::pos() const {
  return pos_;
}
inline void CSItemInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemInfo::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemInfo::item_id() const {
  return item_id_;
}
inline void CSItemInfo::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 3;
inline bool CSItemInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSItemInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSItemInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSItemInfo::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSItemInfo::item_num() const {
  return item_num_;
}
inline void CSItemInfo::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional uint32 item_level = 4;
inline bool CSItemInfo::has_item_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSItemInfo::set_has_item_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSItemInfo::clear_has_item_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSItemInfo::clear_item_level() {
  item_level_ = 0u;
  clear_has_item_level();
}
inline ::google::protobuf::uint32 CSItemInfo::item_level() const {
  return item_level_;
}
inline void CSItemInfo::set_item_level(::google::protobuf::uint32 value) {
  set_has_item_level();
  item_level_ = value;
}

// repeated .CSItemAttr item_attrs = 5;
inline int CSItemInfo::item_attrs_size() const {
  return item_attrs_.size();
}
inline void CSItemInfo::clear_item_attrs() {
  item_attrs_.Clear();
}
inline const ::CSItemAttr& CSItemInfo::item_attrs(int index) const {
  return item_attrs_.Get(index);
}
inline ::CSItemAttr* CSItemInfo::mutable_item_attrs(int index) {
  return item_attrs_.Mutable(index);
}
inline ::CSItemAttr* CSItemInfo::add_item_attrs() {
  return item_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemAttr >&
CSItemInfo::item_attrs() const {
  return item_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemAttr >*
CSItemInfo::mutable_item_attrs() {
  return &item_attrs_;
}

// optional .EquipmentBase equip_info = 6;
inline bool CSItemInfo::has_equip_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSItemInfo::set_has_equip_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSItemInfo::clear_has_equip_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSItemInfo::clear_equip_info() {
  if (equip_info_ != NULL) equip_info_->::EquipmentBase::Clear();
  clear_has_equip_info();
}
inline const ::EquipmentBase& CSItemInfo::equip_info() const {
  return equip_info_ != NULL ? *equip_info_ : *default_instance_->equip_info_;
}
inline ::EquipmentBase* CSItemInfo::mutable_equip_info() {
  set_has_equip_info();
  if (equip_info_ == NULL) equip_info_ = new ::EquipmentBase;
  return equip_info_;
}
inline ::EquipmentBase* CSItemInfo::release_equip_info() {
  clear_has_equip_info();
  ::EquipmentBase* temp = equip_info_;
  equip_info_ = NULL;
  return temp;
}
inline void CSItemInfo::set_allocated_equip_info(::EquipmentBase* equip_info) {
  delete equip_info_;
  equip_info_ = equip_info;
  if (equip_info) {
    set_has_equip_info();
  } else {
    clear_has_equip_info();
  }
}

// optional .SpiritStoneBase ss_info = 7;
inline bool CSItemInfo::has_ss_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSItemInfo::set_has_ss_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSItemInfo::clear_has_ss_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSItemInfo::clear_ss_info() {
  if (ss_info_ != NULL) ss_info_->::SpiritStoneBase::Clear();
  clear_has_ss_info();
}
inline const ::SpiritStoneBase& CSItemInfo::ss_info() const {
  return ss_info_ != NULL ? *ss_info_ : *default_instance_->ss_info_;
}
inline ::SpiritStoneBase* CSItemInfo::mutable_ss_info() {
  set_has_ss_info();
  if (ss_info_ == NULL) ss_info_ = new ::SpiritStoneBase;
  return ss_info_;
}
inline ::SpiritStoneBase* CSItemInfo::release_ss_info() {
  clear_has_ss_info();
  ::SpiritStoneBase* temp = ss_info_;
  ss_info_ = NULL;
  return temp;
}
inline void CSItemInfo::set_allocated_ss_info(::SpiritStoneBase* ss_info) {
  delete ss_info_;
  ss_info_ = ss_info;
  if (ss_info) {
    set_has_ss_info();
  } else {
    clear_has_ss_info();
  }
}

// optional .ManorBase manor_info = 8;
inline bool CSItemInfo::has_manor_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSItemInfo::set_has_manor_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSItemInfo::clear_has_manor_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSItemInfo::clear_manor_info() {
  if (manor_info_ != NULL) manor_info_->::ManorBase::Clear();
  clear_has_manor_info();
}
inline const ::ManorBase& CSItemInfo::manor_info() const {
  return manor_info_ != NULL ? *manor_info_ : *default_instance_->manor_info_;
}
inline ::ManorBase* CSItemInfo::mutable_manor_info() {
  set_has_manor_info();
  if (manor_info_ == NULL) manor_info_ = new ::ManorBase;
  return manor_info_;
}
inline ::ManorBase* CSItemInfo::release_manor_info() {
  clear_has_manor_info();
  ::ManorBase* temp = manor_info_;
  manor_info_ = NULL;
  return temp;
}
inline void CSItemInfo::set_allocated_manor_info(::ManorBase* manor_info) {
  delete manor_info_;
  manor_info_ = manor_info;
  if (manor_info) {
    set_has_manor_info();
  } else {
    clear_has_manor_info();
  }
}

// -------------------------------------------------------------------

// CSAllItemsReq

// -------------------------------------------------------------------

// CSAllItemsRsp

// required uint32 def_bag_size = 1;
inline bool CSAllItemsRsp::has_def_bag_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAllItemsRsp::set_has_def_bag_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAllItemsRsp::clear_has_def_bag_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAllItemsRsp::clear_def_bag_size() {
  def_bag_size_ = 0u;
  clear_has_def_bag_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_bag_size() const {
  return def_bag_size_;
}
inline void CSAllItemsRsp::set_def_bag_size(::google::protobuf::uint32 value) {
  set_has_def_bag_size();
  def_bag_size_ = value;
}

// required uint32 def_store_size = 2;
inline bool CSAllItemsRsp::has_def_store_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAllItemsRsp::set_has_def_store_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAllItemsRsp::clear_has_def_store_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAllItemsRsp::clear_def_store_size() {
  def_store_size_ = 0u;
  clear_has_def_store_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_store_size() const {
  return def_store_size_;
}
inline void CSAllItemsRsp::set_def_store_size(::google::protobuf::uint32 value) {
  set_has_def_store_size();
  def_store_size_ = value;
}

// required uint32 def_ss_bag_size = 3;
inline bool CSAllItemsRsp::has_def_ss_bag_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSAllItemsRsp::set_has_def_ss_bag_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSAllItemsRsp::clear_has_def_ss_bag_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSAllItemsRsp::clear_def_ss_bag_size() {
  def_ss_bag_size_ = 0u;
  clear_has_def_ss_bag_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_ss_bag_size() const {
  return def_ss_bag_size_;
}
inline void CSAllItemsRsp::set_def_ss_bag_size(::google::protobuf::uint32 value) {
  set_has_def_ss_bag_size();
  def_ss_bag_size_ = value;
}

// required uint32 def_ss_store_size = 4;
inline bool CSAllItemsRsp::has_def_ss_store_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSAllItemsRsp::set_has_def_ss_store_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSAllItemsRsp::clear_has_def_ss_store_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSAllItemsRsp::clear_def_ss_store_size() {
  def_ss_store_size_ = 0u;
  clear_has_def_ss_store_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_ss_store_size() const {
  return def_ss_store_size_;
}
inline void CSAllItemsRsp::set_def_ss_store_size(::google::protobuf::uint32 value) {
  set_has_def_ss_store_size();
  def_ss_store_size_ = value;
}

// required uint32 def_equip_lvup_max_times = 5;
inline bool CSAllItemsRsp::has_def_equip_lvup_max_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSAllItemsRsp::set_has_def_equip_lvup_max_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSAllItemsRsp::clear_has_def_equip_lvup_max_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSAllItemsRsp::clear_def_equip_lvup_max_times() {
  def_equip_lvup_max_times_ = 0u;
  clear_has_def_equip_lvup_max_times();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_equip_lvup_max_times() const {
  return def_equip_lvup_max_times_;
}
inline void CSAllItemsRsp::set_def_equip_lvup_max_times(::google::protobuf::uint32 value) {
  set_has_def_equip_lvup_max_times();
  def_equip_lvup_max_times_ = value;
}

// required uint32 def_reset_gem_times = 6;
inline bool CSAllItemsRsp::has_def_reset_gem_times() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSAllItemsRsp::set_has_def_reset_gem_times() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSAllItemsRsp::clear_has_def_reset_gem_times() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSAllItemsRsp::clear_def_reset_gem_times() {
  def_reset_gem_times_ = 0u;
  clear_has_def_reset_gem_times();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_reset_gem_times() const {
  return def_reset_gem_times_;
}
inline void CSAllItemsRsp::set_def_reset_gem_times(::google::protobuf::uint32 value) {
  set_has_def_reset_gem_times();
  def_reset_gem_times_ = value;
}

// required uint32 def_enter_manor_times = 7;
inline bool CSAllItemsRsp::has_def_enter_manor_times() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSAllItemsRsp::set_has_def_enter_manor_times() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSAllItemsRsp::clear_has_def_enter_manor_times() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSAllItemsRsp::clear_def_enter_manor_times() {
  def_enter_manor_times_ = 0u;
  clear_has_def_enter_manor_times();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_enter_manor_times() const {
  return def_enter_manor_times_;
}
inline void CSAllItemsRsp::set_def_enter_manor_times(::google::protobuf::uint32 value) {
  set_has_def_enter_manor_times();
  def_enter_manor_times_ = value;
}

// repeated .CSItemInfo items = 15;
inline int CSAllItemsRsp::items_size() const {
  return items_.size();
}
inline void CSAllItemsRsp::clear_items() {
  items_.Clear();
}
inline const ::CSItemInfo& CSAllItemsRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSItemInfo* CSAllItemsRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSItemInfo* CSAllItemsRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSAllItemsRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSAllItemsRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSItemAddRsp

// repeated .CSItemInfo items = 1;
inline int CSItemAddRsp::items_size() const {
  return items_.size();
}
inline void CSItemAddRsp::clear_items() {
  items_.Clear();
}
inline const ::CSItemInfo& CSItemAddRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSItemInfo* CSItemAddRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSItemInfo* CSItemAddRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSItemAddRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSItemAddRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSItemRemoveReq

// required uint32 pos = 1;
inline bool CSItemRemoveReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemRemoveReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemRemoveReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemRemoveReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemRemoveReq::pos() const {
  return pos_;
}
inline void CSItemRemoveReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemRemoveReq::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemRemoveReq::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemRemoveReq::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemRemoveReq::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemRemoveReq::item_id() const {
  return item_id_;
}
inline void CSItemRemoveReq::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSItemRemoveRsp

// required uint32 pos = 1;
inline bool CSItemRemoveRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemRemoveRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemRemoveRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemRemoveRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemRemoveRsp::pos() const {
  return pos_;
}
inline void CSItemRemoveRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemRemoveRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemRemoveRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemRemoveRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemRemoveRsp::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemRemoveRsp::item_id() const {
  return item_id_;
}
inline void CSItemRemoveRsp::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSItemUseReq

// required uint32 pos = 1;
inline bool CSItemUseReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemUseReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemUseReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemUseReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemUseReq::pos() const {
  return pos_;
}
inline void CSItemUseReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemUseReq::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemUseReq::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemUseReq::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemUseReq::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemUseReq::item_id() const {
  return item_id_;
}
inline void CSItemUseReq::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSItemMoveReq

// required uint32 pos_from = 1;
inline bool CSItemMoveReq::has_pos_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveReq::set_has_pos_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveReq::clear_has_pos_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveReq::clear_pos_from() {
  pos_from_ = 0u;
  clear_has_pos_from();
}
inline ::google::protobuf::uint32 CSItemMoveReq::pos_from() const {
  return pos_from_;
}
inline void CSItemMoveReq::set_pos_from(::google::protobuf::uint32 value) {
  set_has_pos_from();
  pos_from_ = value;
}

// required uint32 pos_to = 2;
inline bool CSItemMoveReq::has_pos_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemMoveReq::set_has_pos_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemMoveReq::clear_has_pos_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemMoveReq::clear_pos_to() {
  pos_to_ = 0u;
  clear_has_pos_to();
}
inline ::google::protobuf::uint32 CSItemMoveReq::pos_to() const {
  return pos_to_;
}
inline void CSItemMoveReq::set_pos_to(::google::protobuf::uint32 value) {
  set_has_pos_to();
  pos_to_ = value;
}

// -------------------------------------------------------------------

// CSItemMoveRsp

// required uint32 pos_from = 1;
inline bool CSItemMoveRsp::has_pos_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveRsp::set_has_pos_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveRsp::clear_has_pos_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveRsp::clear_pos_from() {
  pos_from_ = 0u;
  clear_has_pos_from();
}
inline ::google::protobuf::uint32 CSItemMoveRsp::pos_from() const {
  return pos_from_;
}
inline void CSItemMoveRsp::set_pos_from(::google::protobuf::uint32 value) {
  set_has_pos_from();
  pos_from_ = value;
}

// required uint32 pos_to = 2;
inline bool CSItemMoveRsp::has_pos_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemMoveRsp::set_has_pos_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemMoveRsp::clear_has_pos_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemMoveRsp::clear_pos_to() {
  pos_to_ = 0u;
  clear_has_pos_to();
}
inline ::google::protobuf::uint32 CSItemMoveRsp::pos_to() const {
  return pos_to_;
}
inline void CSItemMoveRsp::set_pos_to(::google::protobuf::uint32 value) {
  set_has_pos_to();
  pos_to_ = value;
}

// -------------------------------------------------------------------

// CSItemUpdateRsp

// repeated .CSItemInfo item = 1;
inline int CSItemUpdateRsp::item_size() const {
  return item_.size();
}
inline void CSItemUpdateRsp::clear_item() {
  item_.Clear();
}
inline const ::CSItemInfo& CSItemUpdateRsp::item(int index) const {
  return item_.Get(index);
}
inline ::CSItemInfo* CSItemUpdateRsp::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::CSItemInfo* CSItemUpdateRsp::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSItemUpdateRsp::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSItemUpdateRsp::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// CSItemOrderReq

// required uint32 target = 1;
inline bool CSItemOrderReq::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemOrderReq::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemOrderReq::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemOrderReq::clear_target() {
  target_ = 0u;
  clear_has_target();
}
inline ::google::protobuf::uint32 CSItemOrderReq::target() const {
  return target_;
}
inline void CSItemOrderReq::set_target(::google::protobuf::uint32 value) {
  set_has_target();
  target_ = value;
}

// -------------------------------------------------------------------

// CSInstanceReq

// required uint32 start = 1;
inline bool CSInstanceReq::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceReq::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceReq::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceReq::clear_start() {
  start_ = 0u;
  clear_has_start();
}
inline ::google::protobuf::uint32 CSInstanceReq::start() const {
  return start_;
}
inline void CSInstanceReq::set_start(::google::protobuf::uint32 value) {
  set_has_start();
  start_ = value;
}

// required uint32 end = 2;
inline bool CSInstanceReq::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstanceReq::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstanceReq::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstanceReq::clear_end() {
  end_ = 0u;
  clear_has_end();
}
inline ::google::protobuf::uint32 CSInstanceReq::end() const {
  return end_;
}
inline void CSInstanceReq::set_end(::google::protobuf::uint32 value) {
  set_has_end();
  end_ = value;
}

// -------------------------------------------------------------------

// CSInstanceRsp_CSInstance

// required uint32 instance_id = 1;
inline bool CSInstanceRsp_CSInstance::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceRsp_CSInstance::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceRsp_CSInstance::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceRsp_CSInstance::clear_instance_id() {
  instance_id_ = 0u;
  clear_has_instance_id();
}
inline ::google::protobuf::uint32 CSInstanceRsp_CSInstance::instance_id() const {
  return instance_id_;
}
inline void CSInstanceRsp_CSInstance::set_instance_id(::google::protobuf::uint32 value) {
  set_has_instance_id();
  instance_id_ = value;
}

// required bool activate = 2;
inline bool CSInstanceRsp_CSInstance::has_activate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstanceRsp_CSInstance::set_has_activate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstanceRsp_CSInstance::clear_has_activate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstanceRsp_CSInstance::clear_activate() {
  activate_ = false;
  clear_has_activate();
}
inline bool CSInstanceRsp_CSInstance::activate() const {
  return activate_;
}
inline void CSInstanceRsp_CSInstance::set_activate(bool value) {
  set_has_activate();
  activate_ = value;
}

// required uint32 star = 3;
inline bool CSInstanceRsp_CSInstance::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSInstanceRsp_CSInstance::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSInstanceRsp_CSInstance::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSInstanceRsp_CSInstance::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 CSInstanceRsp_CSInstance::star() const {
  return star_;
}
inline void CSInstanceRsp_CSInstance::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// CSInstanceRsp

// repeated .CSInstanceRsp.CSInstance instances = 1;
inline int CSInstanceRsp::instances_size() const {
  return instances_.size();
}
inline void CSInstanceRsp::clear_instances() {
  instances_.Clear();
}
inline const ::CSInstanceRsp_CSInstance& CSInstanceRsp::instances(int index) const {
  return instances_.Get(index);
}
inline ::CSInstanceRsp_CSInstance* CSInstanceRsp::mutable_instances(int index) {
  return instances_.Mutable(index);
}
inline ::CSInstanceRsp_CSInstance* CSInstanceRsp::add_instances() {
  return instances_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSInstanceRsp_CSInstance >&
CSInstanceRsp::instances() const {
  return instances_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSInstanceRsp_CSInstance >*
CSInstanceRsp::mutable_instances() {
  return &instances_;
}

// -------------------------------------------------------------------

// CSReward_RewardInfo

// required uint32 item_id = 1;
inline bool CSReward_RewardInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSReward_RewardInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSReward_RewardInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSReward_RewardInfo::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSReward_RewardInfo::item_id() const {
  return item_id_;
}
inline void CSReward_RewardInfo::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_level = 2;
inline bool CSReward_RewardInfo::has_item_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSReward_RewardInfo::set_has_item_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSReward_RewardInfo::clear_has_item_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSReward_RewardInfo::clear_item_level() {
  item_level_ = 0u;
  clear_has_item_level();
}
inline ::google::protobuf::uint32 CSReward_RewardInfo::item_level() const {
  return item_level_;
}
inline void CSReward_RewardInfo::set_item_level(::google::protobuf::uint32 value) {
  set_has_item_level();
  item_level_ = value;
}

// required uint32 item_num = 3;
inline bool CSReward_RewardInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSReward_RewardInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSReward_RewardInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSReward_RewardInfo::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSReward_RewardInfo::item_num() const {
  return item_num_;
}
inline void CSReward_RewardInfo::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSReward

// repeated .CSReward.RewardInfo rewards = 1;
inline int CSReward::rewards_size() const {
  return rewards_.size();
}
inline void CSReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::CSReward_RewardInfo& CSReward::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::CSReward_RewardInfo* CSReward::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::CSReward_RewardInfo* CSReward::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >&
CSReward::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >*
CSReward::mutable_rewards() {
  return &rewards_;
}

// optional uint32 add_coin = 2;
inline bool CSReward::has_add_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSReward::set_has_add_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSReward::clear_has_add_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSReward::clear_add_coin() {
  add_coin_ = 0u;
  clear_has_add_coin();
}
inline ::google::protobuf::uint32 CSReward::add_coin() const {
  return add_coin_;
}
inline void CSReward::set_add_coin(::google::protobuf::uint32 value) {
  set_has_add_coin();
  add_coin_ = value;
}

// optional uint32 add_exp = 3;
inline bool CSReward::has_add_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSReward::set_has_add_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSReward::clear_has_add_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSReward::clear_add_exp() {
  add_exp_ = 0u;
  clear_has_add_exp();
}
inline ::google::protobuf::uint32 CSReward::add_exp() const {
  return add_exp_;
}
inline void CSReward::set_add_exp(::google::protobuf::uint32 value) {
  set_has_add_exp();
  add_exp_ = value;
}

// optional uint32 add_exploit = 4;
inline bool CSReward::has_add_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSReward::set_has_add_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSReward::clear_has_add_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSReward::clear_add_exploit() {
  add_exploit_ = 0u;
  clear_has_add_exploit();
}
inline ::google::protobuf::uint32 CSReward::add_exploit() const {
  return add_exploit_;
}
inline void CSReward::set_add_exploit(::google::protobuf::uint32 value) {
  set_has_add_exploit();
  add_exploit_ = value;
}

// -------------------------------------------------------------------

// CSLevelUpRsp

// required uint32 level = 1;
inline bool CSLevelUpRsp::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLevelUpRsp::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLevelUpRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLevelUpRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSLevelUpRsp::level() const {
  return level_;
}
inline void CSLevelUpRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// CSBasicUserBattleInfoRsp

// required .BasicUserBattleInfo battle_info = 1;
inline bool CSBasicUserBattleInfoRsp::has_battle_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBasicUserBattleInfoRsp::set_has_battle_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBasicUserBattleInfoRsp::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBasicUserBattleInfoRsp::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_battle_info();
}
inline const ::BasicUserBattleInfo& CSBasicUserBattleInfoRsp::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::BasicUserBattleInfo* CSBasicUserBattleInfoRsp::mutable_battle_info() {
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::BasicUserBattleInfo;
  return battle_info_;
}
inline ::BasicUserBattleInfo* CSBasicUserBattleInfoRsp::release_battle_info() {
  clear_has_battle_info();
  ::BasicUserBattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}
inline void CSBasicUserBattleInfoRsp::set_allocated_battle_info(::BasicUserBattleInfo* battle_info) {
  delete battle_info_;
  battle_info_ = battle_info;
  if (battle_info) {
    set_has_battle_info();
  } else {
    clear_has_battle_info();
  }
}

// -------------------------------------------------------------------

// CSSearchSpiritStoneReq

// -------------------------------------------------------------------

// CSSearchSpiritStoneRsp

// required uint32 ret = 1;
inline bool CSSearchSpiritStoneRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSearchSpiritStoneRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSearchSpiritStoneRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::ret() const {
  return ret_;
}
inline void CSSearchSpiritStoneRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 cost_coin = 2;
inline bool CSSearchSpiritStoneRsp::has_cost_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_cost_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSearchSpiritStoneRsp::clear_has_cost_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSearchSpiritStoneRsp::clear_cost_coin() {
  cost_coin_ = 0u;
  clear_has_cost_coin();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::cost_coin() const {
  return cost_coin_;
}
inline void CSSearchSpiritStoneRsp::set_cost_coin(::google::protobuf::uint32 value) {
  set_has_cost_coin();
  cost_coin_ = value;
}

// optional uint32 mon_id = 3;
inline bool CSSearchSpiritStoneRsp::has_mon_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_mon_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSearchSpiritStoneRsp::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSearchSpiritStoneRsp::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::mon_id() const {
  return mon_id_;
}
inline void CSSearchSpiritStoneRsp::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// optional uint32 item_id = 4;
inline bool CSSearchSpiritStoneRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSSearchSpiritStoneRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSSearchSpiritStoneRsp::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::item_id() const {
  return item_id_;
}
inline void CSSearchSpiritStoneRsp::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneMoveBagReq

// required uint32 pos = 1;
inline bool CSSpiritStoneMoveBagReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneMoveBagReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneMoveBagReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneMoveBagReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneMoveBagReq::pos() const {
  return pos_;
}
inline void CSSpiritStoneMoveBagReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneMoveBagRsp

// required uint32 ret = 1;
inline bool CSSpiritStoneMoveBagRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneMoveBagRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneMoveBagRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneMoveBagRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSpiritStoneMoveBagRsp::ret() const {
  return ret_;
}
inline void CSSpiritStoneMoveBagRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneLevelUpReq

// required uint32 pos = 1;
inline bool CSSpiritStoneLevelUpReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneLevelUpReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneLevelUpReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneLevelUpReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpReq::pos() const {
  return pos_;
}
inline void CSSpiritStoneLevelUpReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneLevelUpRsp

// required uint32 ret = 1;
inline bool CSSpiritStoneLevelUpRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneLevelUpRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneLevelUpRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneLevelUpRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpRsp::ret() const {
  return ret_;
}
inline void CSSpiritStoneLevelUpRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// required uint32 pos = 2;
inline bool CSSpiritStoneLevelUpRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSpiritStoneLevelUpRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSpiritStoneLevelUpRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSpiritStoneLevelUpRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpRsp::pos() const {
  return pos_;
}
inline void CSSpiritStoneLevelUpRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 cost_sp = 3;
inline bool CSSpiritStoneLevelUpRsp::has_cost_sp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSpiritStoneLevelUpRsp::set_has_cost_sp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSpiritStoneLevelUpRsp::clear_has_cost_sp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSpiritStoneLevelUpRsp::clear_cost_sp() {
  cost_sp_ = 0u;
  clear_has_cost_sp();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpRsp::cost_sp() const {
  return cost_sp_;
}
inline void CSSpiritStoneLevelUpRsp::set_cost_sp(::google::protobuf::uint32 value) {
  set_has_cost_sp();
  cost_sp_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneToSPReq

// required uint32 pos = 1;
inline bool CSSpiritStoneToSPReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneToSPReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneToSPReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneToSPReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPReq::pos() const {
  return pos_;
}
inline void CSSpiritStoneToSPReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneToSPRsp

// required uint32 ret = 1;
inline bool CSSpiritStoneToSPRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneToSPRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneToSPRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneToSPRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPRsp::ret() const {
  return ret_;
}
inline void CSSpiritStoneToSPRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 sp_key = 2;
inline bool CSSpiritStoneToSPRsp::has_sp_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSpiritStoneToSPRsp::set_has_sp_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSpiritStoneToSPRsp::clear_has_sp_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSpiritStoneToSPRsp::clear_sp_key() {
  sp_key_ = 0u;
  clear_has_sp_key();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPRsp::sp_key() const {
  return sp_key_;
}
inline void CSSpiritStoneToSPRsp::set_sp_key(::google::protobuf::uint32 value) {
  set_has_sp_key();
  sp_key_ = value;
}

// optional uint32 sp_value = 3;
inline bool CSSpiritStoneToSPRsp::has_sp_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSpiritStoneToSPRsp::set_has_sp_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSpiritStoneToSPRsp::clear_has_sp_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSpiritStoneToSPRsp::clear_sp_value() {
  sp_value_ = 0u;
  clear_has_sp_value();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPRsp::sp_value() const {
  return sp_value_;
}
inline void CSSpiritStoneToSPRsp::set_sp_value(::google::protobuf::uint32 value) {
  set_has_sp_value();
  sp_value_ = value;
}

// -------------------------------------------------------------------

// CSGetExchangeSSInfoReq

// -------------------------------------------------------------------

// ExchangeSSInfo

// required uint32 ss_id = 1;
inline bool ExchangeSSInfo::has_ss_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeSSInfo::set_has_ss_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeSSInfo::clear_has_ss_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeSSInfo::clear_ss_id() {
  ss_id_ = 0u;
  clear_has_ss_id();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::ss_id() const {
  return ss_id_;
}
inline void ExchangeSSInfo::set_ss_id(::google::protobuf::uint32 value) {
  set_has_ss_id();
  ss_id_ = value;
}

// required uint32 consume = 2;
inline bool ExchangeSSInfo::has_consume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeSSInfo::set_has_consume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeSSInfo::clear_has_consume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeSSInfo::clear_consume() {
  consume_ = 0u;
  clear_has_consume();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::consume() const {
  return consume_;
}
inline void ExchangeSSInfo::set_consume(::google::protobuf::uint32 value) {
  set_has_consume();
  consume_ = value;
}

// required uint32 convert = 3;
inline bool ExchangeSSInfo::has_convert() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeSSInfo::set_has_convert() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeSSInfo::clear_has_convert() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeSSInfo::clear_convert() {
  convert_ = 0u;
  clear_has_convert();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::convert() const {
  return convert_;
}
inline void ExchangeSSInfo::set_convert(::google::protobuf::uint32 value) {
  set_has_convert();
  convert_ = value;
}

// required uint32 need_chip = 4;
inline bool ExchangeSSInfo::has_need_chip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeSSInfo::set_has_need_chip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeSSInfo::clear_has_need_chip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeSSInfo::clear_need_chip() {
  need_chip_ = 0u;
  clear_has_need_chip();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::need_chip() const {
  return need_chip_;
}
inline void ExchangeSSInfo::set_need_chip(::google::protobuf::uint32 value) {
  set_has_need_chip();
  need_chip_ = value;
}

// required uint32 key = 5;
inline bool ExchangeSSInfo::has_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExchangeSSInfo::set_has_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExchangeSSInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExchangeSSInfo::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::key() const {
  return key_;
}
inline void ExchangeSSInfo::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 6;
inline bool ExchangeSSInfo::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExchangeSSInfo::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExchangeSSInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExchangeSSInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::value() const {
  return value_;
}
inline void ExchangeSSInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSGetExchangeSSInfoRsp

// repeated .ExchangeSSInfo ss_list = 1;
inline int CSGetExchangeSSInfoRsp::ss_list_size() const {
  return ss_list_.size();
}
inline void CSGetExchangeSSInfoRsp::clear_ss_list() {
  ss_list_.Clear();
}
inline const ::ExchangeSSInfo& CSGetExchangeSSInfoRsp::ss_list(int index) const {
  return ss_list_.Get(index);
}
inline ::ExchangeSSInfo* CSGetExchangeSSInfoRsp::mutable_ss_list(int index) {
  return ss_list_.Mutable(index);
}
inline ::ExchangeSSInfo* CSGetExchangeSSInfoRsp::add_ss_list() {
  return ss_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >&
CSGetExchangeSSInfoRsp::ss_list() const {
  return ss_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >*
CSGetExchangeSSInfoRsp::mutable_ss_list() {
  return &ss_list_;
}

// -------------------------------------------------------------------

// CSAddManorReq

// required uint32 manor_id = 1;
inline bool CSAddManorReq::has_manor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddManorReq::set_has_manor_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddManorReq::clear_has_manor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddManorReq::clear_manor_id() {
  manor_id_ = 0u;
  clear_has_manor_id();
}
inline ::google::protobuf::uint32 CSAddManorReq::manor_id() const {
  return manor_id_;
}
inline void CSAddManorReq::set_manor_id(::google::protobuf::uint32 value) {
  set_has_manor_id();
  manor_id_ = value;
}

// -------------------------------------------------------------------

// CSAddManorRsp

// required uint32 pos = 1;
inline bool CSAddManorRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddManorRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddManorRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddManorRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSAddManorRsp::pos() const {
  return pos_;
}
inline void CSAddManorRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSWarmSportLvUpReq

// required uint32 pos = 1;
inline bool CSWarmSportLvUpReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWarmSportLvUpReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWarmSportLvUpReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWarmSportLvUpReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSWarmSportLvUpReq::pos() const {
  return pos_;
}
inline void CSWarmSportLvUpReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// optional bool to_max_lv = 2 [default = false];
inline bool CSWarmSportLvUpReq::has_to_max_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSWarmSportLvUpReq::set_has_to_max_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSWarmSportLvUpReq::clear_has_to_max_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSWarmSportLvUpReq::clear_to_max_lv() {
  to_max_lv_ = false;
  clear_has_to_max_lv();
}
inline bool CSWarmSportLvUpReq::to_max_lv() const {
  return to_max_lv_;
}
inline void CSWarmSportLvUpReq::set_to_max_lv(bool value) {
  set_has_to_max_lv();
  to_max_lv_ = value;
}

// -------------------------------------------------------------------

// CSWarmSportLvUpRsp

// required uint32 pos = 1;
inline bool CSWarmSportLvUpRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWarmSportLvUpRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWarmSportLvUpRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWarmSportLvUpRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSWarmSportLvUpRsp::pos() const {
  return pos_;
}
inline void CSWarmSportLvUpRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSManorOptReq

// required uint32 pos = 1;
inline bool CSManorOptReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSManorOptReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSManorOptReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSManorOptReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSManorOptReq::pos() const {
  return pos_;
}
inline void CSManorOptReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 opt = 2;
inline bool CSManorOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSManorOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSManorOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSManorOptReq::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 CSManorOptReq::opt() const {
  return opt_;
}
inline void CSManorOptReq::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// CSManorOptRsp

// required uint32 pos = 1;
inline bool CSManorOptRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSManorOptRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSManorOptRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSManorOptRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSManorOptRsp::pos() const {
  return pos_;
}
inline void CSManorOptRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 opt = 2;
inline bool CSManorOptRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSManorOptRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSManorOptRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSManorOptRsp::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 CSManorOptRsp::opt() const {
  return opt_;
}
inline void CSManorOptRsp::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// CSMonListReq

// required uint32 uid = 1;
inline bool CSMonListReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMonListReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMonListReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMonListReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSMonListReq::uid() const {
  return uid_;
}
inline void CSMonListReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string name = 2;
inline bool CSMonListReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMonListReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMonListReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMonListReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSMonListReq::name() const {
  return *name_;
}
inline void CSMonListReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMonListReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMonListReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMonListReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSMonListReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMonListReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MonInfo

// required uint32 mon_id = 1;
inline bool MonInfo::has_mon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonInfo::set_has_mon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonInfo::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonInfo::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 MonInfo::mon_id() const {
  return mon_id_;
}
inline void MonInfo::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// required uint32 mon_status = 2;
inline bool MonInfo::has_mon_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonInfo::set_has_mon_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonInfo::clear_has_mon_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonInfo::clear_mon_status() {
  mon_status_ = 0u;
  clear_has_mon_status();
}
inline ::google::protobuf::uint32 MonInfo::mon_status() const {
  return mon_status_;
}
inline void MonInfo::set_mon_status(::google::protobuf::uint32 value) {
  set_has_mon_status();
  mon_status_ = value;
}

// -------------------------------------------------------------------

// CSMonListRsp

// required uint32 uid = 1;
inline bool CSMonListRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMonListRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMonListRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMonListRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSMonListRsp::uid() const {
  return uid_;
}
inline void CSMonListRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string name = 2;
inline bool CSMonListRsp::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMonListRsp::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMonListRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMonListRsp::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSMonListRsp::name() const {
  return *name_;
}
inline void CSMonListRsp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMonListRsp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSMonListRsp::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMonListRsp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSMonListRsp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMonListRsp::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .MonInfo mon_info = 3;
inline int CSMonListRsp::mon_info_size() const {
  return mon_info_.size();
}
inline void CSMonListRsp::clear_mon_info() {
  mon_info_.Clear();
}
inline const ::MonInfo& CSMonListRsp::mon_info(int index) const {
  return mon_info_.Get(index);
}
inline ::MonInfo* CSMonListRsp::mutable_mon_info(int index) {
  return mon_info_.Mutable(index);
}
inline ::MonInfo* CSMonListRsp::add_mon_info() {
  return mon_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MonInfo >&
CSMonListRsp::mon_info() const {
  return mon_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MonInfo >*
CSMonListRsp::mutable_mon_info() {
  return &mon_info_;
}

// -------------------------------------------------------------------

// CSSetMonStatusReq

// required uint32 mon_id = 1;
inline bool CSSetMonStatusReq::has_mon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetMonStatusReq::set_has_mon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetMonStatusReq::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetMonStatusReq::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSSetMonStatusReq::mon_id() const {
  return mon_id_;
}
inline void CSSetMonStatusReq::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// required uint32 mon_status = 2;
inline bool CSSetMonStatusReq::has_mon_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetMonStatusReq::set_has_mon_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetMonStatusReq::clear_has_mon_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetMonStatusReq::clear_mon_status() {
  mon_status_ = 0u;
  clear_has_mon_status();
}
inline ::google::protobuf::uint32 CSSetMonStatusReq::mon_status() const {
  return mon_status_;
}
inline void CSSetMonStatusReq::set_mon_status(::google::protobuf::uint32 value) {
  set_has_mon_status();
  mon_status_ = value;
}

// -------------------------------------------------------------------

// CSSetMonStatusRsp

// required uint32 ret = 1;
inline bool CSSetMonStatusRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetMonStatusRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetMonStatusRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetMonStatusRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSetMonStatusRsp::ret() const {
  return ret_;
}
inline void CSSetMonStatusRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 mon_id = 2;
inline bool CSSetMonStatusRsp::has_mon_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetMonStatusRsp::set_has_mon_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetMonStatusRsp::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetMonStatusRsp::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSSetMonStatusRsp::mon_id() const {
  return mon_id_;
}
inline void CSSetMonStatusRsp::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// optional uint32 mon_status = 3;
inline bool CSSetMonStatusRsp::has_mon_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSetMonStatusRsp::set_has_mon_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSetMonStatusRsp::clear_has_mon_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSetMonStatusRsp::clear_mon_status() {
  mon_status_ = 0u;
  clear_has_mon_status();
}
inline ::google::protobuf::uint32 CSSetMonStatusRsp::mon_status() const {
  return mon_status_;
}
inline void CSSetMonStatusRsp::set_mon_status(::google::protobuf::uint32 value) {
  set_has_mon_status();
  mon_status_ = value;
}

// -------------------------------------------------------------------

// CSPVPQueryRoomReq

// -------------------------------------------------------------------

// PVPRoomBase

// required uint32 room_id = 1;
inline bool PVPRoomBase::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVPRoomBase::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVPRoomBase::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVPRoomBase::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 PVPRoomBase::room_id() const {
  return room_id_;
}
inline void PVPRoomBase::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool PVPRoomBase::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVPRoomBase::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVPRoomBase::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVPRoomBase::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 PVPRoomBase::top_level() const {
  return top_level_;
}
inline void PVPRoomBase::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 current_online = 3;
inline bool PVPRoomBase::has_current_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVPRoomBase::set_has_current_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVPRoomBase::clear_has_current_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVPRoomBase::clear_current_online() {
  current_online_ = 0u;
  clear_has_current_online();
}
inline ::google::protobuf::uint32 PVPRoomBase::current_online() const {
  return current_online_;
}
inline void PVPRoomBase::set_current_online(::google::protobuf::uint32 value) {
  set_has_current_online();
  current_online_ = value;
}

// required uint32 max_online = 4;
inline bool PVPRoomBase::has_max_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVPRoomBase::set_has_max_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVPRoomBase::clear_has_max_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVPRoomBase::clear_max_online() {
  max_online_ = 0u;
  clear_has_max_online();
}
inline ::google::protobuf::uint32 PVPRoomBase::max_online() const {
  return max_online_;
}
inline void PVPRoomBase::set_max_online(::google::protobuf::uint32 value) {
  set_has_max_online();
  max_online_ = value;
}

// -------------------------------------------------------------------

// CSPVPQueryRoomRsp

// repeated .PVPRoomBase rooms = 1;
inline int CSPVPQueryRoomRsp::rooms_size() const {
  return rooms_.size();
}
inline void CSPVPQueryRoomRsp::clear_rooms() {
  rooms_.Clear();
}
inline const ::PVPRoomBase& CSPVPQueryRoomRsp::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::PVPRoomBase* CSPVPQueryRoomRsp::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::PVPRoomBase* CSPVPQueryRoomRsp::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >&
CSPVPQueryRoomRsp::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >*
CSPVPQueryRoomRsp::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// CSPVPBaseInfoRsp

// required uint32 winning = 1;
inline bool CSPVPBaseInfoRsp::has_winning() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPBaseInfoRsp::set_has_winning() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPBaseInfoRsp::clear_has_winning() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPBaseInfoRsp::clear_winning() {
  winning_ = 0u;
  clear_has_winning();
}
inline ::google::protobuf::uint32 CSPVPBaseInfoRsp::winning() const {
  return winning_;
}
inline void CSPVPBaseInfoRsp::set_winning(::google::protobuf::uint32 value) {
  set_has_winning();
  winning_ = value;
}

// required uint32 remain_times = 2;
inline bool CSPVPBaseInfoRsp::has_remain_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPBaseInfoRsp::set_has_remain_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPBaseInfoRsp::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPBaseInfoRsp::clear_remain_times() {
  remain_times_ = 0u;
  clear_has_remain_times();
}
inline ::google::protobuf::uint32 CSPVPBaseInfoRsp::remain_times() const {
  return remain_times_;
}
inline void CSPVPBaseInfoRsp::set_remain_times(::google::protobuf::uint32 value) {
  set_has_remain_times();
  remain_times_ = value;
}

// -------------------------------------------------------------------

// CSPVPCreateRoomReq

// required uint32 type = 1;
inline bool CSPVPCreateRoomReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPCreateRoomReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPCreateRoomReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPCreateRoomReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPCreateRoomReq::type() const {
  return type_;
}
inline void CSPVPCreateRoomReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 top_level = 2;
inline bool CSPVPCreateRoomReq::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPCreateRoomReq::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPCreateRoomReq::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPCreateRoomReq::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVPCreateRoomReq::top_level() const {
  return top_level_;
}
inline void CSPVPCreateRoomReq::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// -------------------------------------------------------------------

// CSPVPJoinRoomReq

// required uint32 room_id = 1;
inline bool CSPVPJoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPJoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPJoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPJoinRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomReq::room_id() const {
  return room_id_;
}
inline void CSPVPJoinRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// PVPSeatBase

// required uint32 id = 1;
inline bool PVPSeatBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVPSeatBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVPSeatBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVPSeatBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PVPSeatBase::id() const {
  return id_;
}
inline void PVPSeatBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 avatar = 2;
inline bool PVPSeatBase::has_avatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVPSeatBase::set_has_avatar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVPSeatBase::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVPSeatBase::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 PVPSeatBase::avatar() const {
  return avatar_;
}
inline void PVPSeatBase::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
}

// required string name = 3;
inline bool PVPSeatBase::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVPSeatBase::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVPSeatBase::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVPSeatBase::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PVPSeatBase::name() const {
  return *name_;
}
inline void PVPSeatBase::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVPSeatBase::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVPSeatBase::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVPSeatBase::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PVPSeatBase::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PVPSeatBase::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 level = 4;
inline bool PVPSeatBase::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVPSeatBase::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVPSeatBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVPSeatBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PVPSeatBase::level() const {
  return level_;
}
inline void PVPSeatBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required bool ready = 5;
inline bool PVPSeatBase::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PVPSeatBase::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PVPSeatBase::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PVPSeatBase::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool PVPSeatBase::ready() const {
  return ready_;
}
inline void PVPSeatBase::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// -------------------------------------------------------------------

// CSPVPJoinRoomRsp

// required uint32 room_id = 1;
inline bool CSPVPJoinRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPJoinRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPJoinRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPJoinRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomRsp::room_id() const {
  return room_id_;
}
inline void CSPVPJoinRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 type = 2;
inline bool CSPVPJoinRoomRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPJoinRoomRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPJoinRoomRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPJoinRoomRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomRsp::type() const {
  return type_;
}
inline void CSPVPJoinRoomRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 top_level = 3;
inline bool CSPVPJoinRoomRsp::has_top_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVPJoinRoomRsp::set_has_top_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVPJoinRoomRsp::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVPJoinRoomRsp::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomRsp::top_level() const {
  return top_level_;
}
inline void CSPVPJoinRoomRsp::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// repeated .PVPSeatBase seats = 4;
inline int CSPVPJoinRoomRsp::seats_size() const {
  return seats_.size();
}
inline void CSPVPJoinRoomRsp::clear_seats() {
  seats_.Clear();
}
inline const ::PVPSeatBase& CSPVPJoinRoomRsp::seats(int index) const {
  return seats_.Get(index);
}
inline ::PVPSeatBase* CSPVPJoinRoomRsp::mutable_seats(int index) {
  return seats_.Mutable(index);
}
inline ::PVPSeatBase* CSPVPJoinRoomRsp::add_seats() {
  return seats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >&
CSPVPJoinRoomRsp::seats() const {
  return seats_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >*
CSPVPJoinRoomRsp::mutable_seats() {
  return &seats_;
}

// -------------------------------------------------------------------

// CSPVPExitRoomReq

// -------------------------------------------------------------------

// CSPVPExitRoomRsp

// -------------------------------------------------------------------

// CSPVPCloseRoomRsp

// -------------------------------------------------------------------

// CSPVPChangeSeatReq

// required uint32 seat = 1;
inline bool CSPVPChangeSeatReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPChangeSeatReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPChangeSeatReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPChangeSeatReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSPVPChangeSeatReq::seat() const {
  return seat_;
}
inline void CSPVPChangeSeatReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSPVPReadyReq

// -------------------------------------------------------------------

// CSPVPCancelReadyReq

// -------------------------------------------------------------------

// CSPVPKickoffReq

// required uint32 seat = 1;
inline bool CSPVPKickoffReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPKickoffReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPKickoffReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPKickoffReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSPVPKickoffReq::seat() const {
  return seat_;
}
inline void CSPVPKickoffReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSPVPKickoffRsp

// -------------------------------------------------------------------

// CSPVPStartReq

// -------------------------------------------------------------------

// CSPVPStartRsp

// required uint32 mapid = 1;
inline bool CSPVPStartRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPStartRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPStartRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPStartRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSPVPStartRsp::mapid() const {
  return mapid_;
}
inline void CSPVPStartRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// CSPPVEBattleReq

// -------------------------------------------------------------------

// CSPPVEBattleRsp

// repeated uint32 ids = 1;
inline int CSPPVEBattleRsp::ids_size() const {
  return ids_.size();
}
inline void CSPPVEBattleRsp::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint32 CSPPVEBattleRsp::ids(int index) const {
  return ids_.Get(index);
}
inline void CSPPVEBattleRsp::set_ids(int index, ::google::protobuf::uint32 value) {
  ids_.Set(index, value);
}
inline void CSPPVEBattleRsp::add_ids(::google::protobuf::uint32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSPPVEBattleRsp::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSPPVEBattleRsp::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// CSPVEQueryRoomReq

// -------------------------------------------------------------------

// PVERoomBase

// required uint32 room_id = 1;
inline bool PVERoomBase::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVERoomBase::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVERoomBase::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVERoomBase::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 PVERoomBase::room_id() const {
  return room_id_;
}
inline void PVERoomBase::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool PVERoomBase::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVERoomBase::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVERoomBase::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVERoomBase::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 PVERoomBase::top_level() const {
  return top_level_;
}
inline void PVERoomBase::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 current_online = 3;
inline bool PVERoomBase::has_current_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVERoomBase::set_has_current_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVERoomBase::clear_has_current_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVERoomBase::clear_current_online() {
  current_online_ = 0u;
  clear_has_current_online();
}
inline ::google::protobuf::uint32 PVERoomBase::current_online() const {
  return current_online_;
}
inline void PVERoomBase::set_current_online(::google::protobuf::uint32 value) {
  set_has_current_online();
  current_online_ = value;
}

// required uint32 max_online = 4;
inline bool PVERoomBase::has_max_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVERoomBase::set_has_max_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVERoomBase::clear_has_max_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVERoomBase::clear_max_online() {
  max_online_ = 0u;
  clear_has_max_online();
}
inline ::google::protobuf::uint32 PVERoomBase::max_online() const {
  return max_online_;
}
inline void PVERoomBase::set_max_online(::google::protobuf::uint32 value) {
  set_has_max_online();
  max_online_ = value;
}

// -------------------------------------------------------------------

// CSPVEQueryRoomRsp

// repeated .PVERoomBase rooms = 1;
inline int CSPVEQueryRoomRsp::rooms_size() const {
  return rooms_.size();
}
inline void CSPVEQueryRoomRsp::clear_rooms() {
  rooms_.Clear();
}
inline const ::PVERoomBase& CSPVEQueryRoomRsp::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::PVERoomBase* CSPVEQueryRoomRsp::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::PVERoomBase* CSPVEQueryRoomRsp::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVERoomBase >&
CSPVEQueryRoomRsp::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVERoomBase >*
CSPVEQueryRoomRsp::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// CSPVEBaseInfoRsp

// required uint32 countdown = 1;
inline bool CSPVEBaseInfoRsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEBaseInfoRsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEBaseInfoRsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEBaseInfoRsp::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 CSPVEBaseInfoRsp::countdown() const {
  return countdown_;
}
inline void CSPVEBaseInfoRsp::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
}

// required uint32 remain_times = 2;
inline bool CSPVEBaseInfoRsp::has_remain_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVEBaseInfoRsp::set_has_remain_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVEBaseInfoRsp::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVEBaseInfoRsp::clear_remain_times() {
  remain_times_ = 0u;
  clear_has_remain_times();
}
inline ::google::protobuf::uint32 CSPVEBaseInfoRsp::remain_times() const {
  return remain_times_;
}
inline void CSPVEBaseInfoRsp::set_remain_times(::google::protobuf::uint32 value) {
  set_has_remain_times();
  remain_times_ = value;
}

// -------------------------------------------------------------------

// CSPVECreateRoomReq

// required uint32 top_level = 1;
inline bool CSPVECreateRoomReq::has_top_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVECreateRoomReq::set_has_top_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVECreateRoomReq::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVECreateRoomReq::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVECreateRoomReq::top_level() const {
  return top_level_;
}
inline void CSPVECreateRoomReq::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 battle_id = 2;
inline bool CSPVECreateRoomReq::has_battle_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVECreateRoomReq::set_has_battle_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVECreateRoomReq::clear_has_battle_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVECreateRoomReq::clear_battle_id() {
  battle_id_ = 0u;
  clear_has_battle_id();
}
inline ::google::protobuf::uint32 CSPVECreateRoomReq::battle_id() const {
  return battle_id_;
}
inline void CSPVECreateRoomReq::set_battle_id(::google::protobuf::uint32 value) {
  set_has_battle_id();
  battle_id_ = value;
}

// -------------------------------------------------------------------

// CSPVEJoinRoomReq

// required uint32 room_id = 1;
inline bool CSPVEJoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEJoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEJoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEJoinRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomReq::room_id() const {
  return room_id_;
}
inline void CSPVEJoinRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// CSPVEJoinRoomFailureRsp

// required uint32 errcode = 1;
inline bool CSPVEJoinRoomFailureRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEJoinRoomFailureRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEJoinRoomFailureRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEJoinRoomFailureRsp::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomFailureRsp::errcode() const {
  return errcode_;
}
inline void CSPVEJoinRoomFailureRsp::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
}

// -------------------------------------------------------------------

// PVESeatBase

// required uint32 id = 1;
inline bool PVESeatBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVESeatBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVESeatBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVESeatBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PVESeatBase::id() const {
  return id_;
}
inline void PVESeatBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 avatar = 2;
inline bool PVESeatBase::has_avatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVESeatBase::set_has_avatar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVESeatBase::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVESeatBase::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 PVESeatBase::avatar() const {
  return avatar_;
}
inline void PVESeatBase::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
}

// required string name = 3;
inline bool PVESeatBase::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVESeatBase::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVESeatBase::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVESeatBase::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PVESeatBase::name() const {
  return *name_;
}
inline void PVESeatBase::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVESeatBase::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVESeatBase::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVESeatBase::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PVESeatBase::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PVESeatBase::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 level = 4;
inline bool PVESeatBase::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVESeatBase::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVESeatBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVESeatBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PVESeatBase::level() const {
  return level_;
}
inline void PVESeatBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required bool ready = 5;
inline bool PVESeatBase::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PVESeatBase::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PVESeatBase::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PVESeatBase::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool PVESeatBase::ready() const {
  return ready_;
}
inline void PVESeatBase::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// -------------------------------------------------------------------

// CSPVEJoinRoomRsp

// required uint32 room_id = 1;
inline bool CSPVEJoinRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEJoinRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEJoinRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEJoinRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomRsp::room_id() const {
  return room_id_;
}
inline void CSPVEJoinRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool CSPVEJoinRoomRsp::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVEJoinRoomRsp::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVEJoinRoomRsp::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVEJoinRoomRsp::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomRsp::top_level() const {
  return top_level_;
}
inline void CSPVEJoinRoomRsp::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// repeated .PVESeatBase seats = 3;
inline int CSPVEJoinRoomRsp::seats_size() const {
  return seats_.size();
}
inline void CSPVEJoinRoomRsp::clear_seats() {
  seats_.Clear();
}
inline const ::PVESeatBase& CSPVEJoinRoomRsp::seats(int index) const {
  return seats_.Get(index);
}
inline ::PVESeatBase* CSPVEJoinRoomRsp::mutable_seats(int index) {
  return seats_.Mutable(index);
}
inline ::PVESeatBase* CSPVEJoinRoomRsp::add_seats() {
  return seats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVESeatBase >&
CSPVEJoinRoomRsp::seats() const {
  return seats_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVESeatBase >*
CSPVEJoinRoomRsp::mutable_seats() {
  return &seats_;
}

// -------------------------------------------------------------------

// CSPVEExitRoomReq

// -------------------------------------------------------------------

// CSPVEExitRoomRsp

// -------------------------------------------------------------------

// CSPVECloseRoomRsp

// -------------------------------------------------------------------

// CSPVEReadyReq

// -------------------------------------------------------------------

// CSPVECancelReadyReq

// -------------------------------------------------------------------

// CSPVEKickoffReq

// required uint32 seat = 1;
inline bool CSPVEKickoffReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEKickoffReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEKickoffReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEKickoffReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSPVEKickoffReq::seat() const {
  return seat_;
}
inline void CSPVEKickoffReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSPVEKickoffRsp

// -------------------------------------------------------------------

// CSPVEStartReq

// -------------------------------------------------------------------

// CSPVEStartRsp

// required uint32 mapid = 1;
inline bool CSPVEStartRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEStartRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEStartRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEStartRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSPVEStartRsp::mapid() const {
  return mapid_;
}
inline void CSPVEStartRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// CSPVAIReq

// required uint32 userid = 1;
inline bool CSPVAIReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSPVAIReq::userid() const {
  return userid_;
}
inline void CSPVAIReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// -------------------------------------------------------------------

// CSPVAIInfoReq

// -------------------------------------------------------------------

// CSPVAIInfoRsq_CSPVAIInfo

// required uint32 userid = 1;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::userid() const {
  return userid_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::reg_time() const {
  return reg_time_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 rank = 3;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::rank() const {
  return rank_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required string name = 4;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPVAIInfoRsq_CSPVAIInfo::name() const {
  return *name_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPVAIInfoRsq_CSPVAIInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPVAIInfoRsq_CSPVAIInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 type = 5;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::type() const {
  return type_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 lv = 6;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::lv() const {
  return lv_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// -------------------------------------------------------------------

// CSPVAIInfoRsq_CSPVAILog

// required string name = 1;
inline bool CSPVAIInfoRsq_CSPVAILog::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPVAIInfoRsq_CSPVAILog::name() const {
  return *name_;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAILog::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAILog::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPVAIInfoRsq_CSPVAILog::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPVAIInfoRsq_CSPVAILog::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSPVAIInfoRsq_CSPVAILog::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool direct = 2;
inline bool CSPVAIInfoRsq_CSPVAILog::has_direct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_has_direct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_has_direct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_direct() {
  direct_ = false;
  clear_has_direct();
}
inline bool CSPVAIInfoRsq_CSPVAILog::direct() const {
  return direct_;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_direct(bool value) {
  set_has_direct();
  direct_ = value;
}

// required bool win = 3;
inline bool CSPVAIInfoRsq_CSPVAILog::has_win() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_has_win() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_has_win() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_win() {
  win_ = false;
  clear_has_win();
}
inline bool CSPVAIInfoRsq_CSPVAILog::win() const {
  return win_;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_win(bool value) {
  set_has_win();
  win_ = value;
}

// -------------------------------------------------------------------

// CSPVAIInfoRsq

// required uint32 rank = 1;
inline bool CSPVAIInfoRsq::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIInfoRsq::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIInfoRsq::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIInfoRsq::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq::rank() const {
  return rank_;
}
inline void CSPVAIInfoRsq::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// repeated .CSPVAIInfoRsq.CSPVAIInfo infos = 2;
inline int CSPVAIInfoRsq::infos_size() const {
  return infos_.size();
}
inline void CSPVAIInfoRsq::clear_infos() {
  infos_.Clear();
}
inline const ::CSPVAIInfoRsq_CSPVAIInfo& CSPVAIInfoRsq::infos(int index) const {
  return infos_.Get(index);
}
inline ::CSPVAIInfoRsq_CSPVAIInfo* CSPVAIInfoRsq::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::CSPVAIInfoRsq_CSPVAIInfo* CSPVAIInfoRsq::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >&
CSPVAIInfoRsq::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >*
CSPVAIInfoRsq::mutable_infos() {
  return &infos_;
}

// repeated .CSPVAIInfoRsq.CSPVAILog logs = 3;
inline int CSPVAIInfoRsq::logs_size() const {
  return logs_.size();
}
inline void CSPVAIInfoRsq::clear_logs() {
  logs_.Clear();
}
inline const ::CSPVAIInfoRsq_CSPVAILog& CSPVAIInfoRsq::logs(int index) const {
  return logs_.Get(index);
}
inline ::CSPVAIInfoRsq_CSPVAILog* CSPVAIInfoRsq::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::CSPVAIInfoRsq_CSPVAILog* CSPVAIInfoRsq::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >&
CSPVAIInfoRsq::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >*
CSPVAIInfoRsq::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// CSGetEquipLvUpCDReq

// -------------------------------------------------------------------

// CSGetEquipLvUpCDRsp

// required uint32 cold_time = 1;
inline bool CSGetEquipLvUpCDRsp::has_cold_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetEquipLvUpCDRsp::set_has_cold_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetEquipLvUpCDRsp::clear_has_cold_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetEquipLvUpCDRsp::clear_cold_time() {
  cold_time_ = 0u;
  clear_has_cold_time();
}
inline ::google::protobuf::uint32 CSGetEquipLvUpCDRsp::cold_time() const {
  return cold_time_;
}
inline void CSGetEquipLvUpCDRsp::set_cold_time(::google::protobuf::uint32 value) {
  set_has_cold_time();
  cold_time_ = value;
}

// -------------------------------------------------------------------

// CSEquipInlayGemReq

// required uint32 equip_pos = 1;
inline bool CSEquipInlayGemReq::has_equip_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipInlayGemReq::set_has_equip_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipInlayGemReq::clear_has_equip_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipInlayGemReq::clear_equip_pos() {
  equip_pos_ = 0u;
  clear_has_equip_pos();
}
inline ::google::protobuf::uint32 CSEquipInlayGemReq::equip_pos() const {
  return equip_pos_;
}
inline void CSEquipInlayGemReq::set_equip_pos(::google::protobuf::uint32 value) {
  set_has_equip_pos();
  equip_pos_ = value;
}

// required uint32 gem_id = 2;
inline bool CSEquipInlayGemReq::has_gem_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipInlayGemReq::set_has_gem_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipInlayGemReq::clear_has_gem_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipInlayGemReq::clear_gem_id() {
  gem_id_ = 0u;
  clear_has_gem_id();
}
inline ::google::protobuf::uint32 CSEquipInlayGemReq::gem_id() const {
  return gem_id_;
}
inline void CSEquipInlayGemReq::set_gem_id(::google::protobuf::uint32 value) {
  set_has_gem_id();
  gem_id_ = value;
}

// required uint32 hole_index = 3;
inline bool CSEquipInlayGemReq::has_hole_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipInlayGemReq::set_has_hole_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipInlayGemReq::clear_has_hole_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipInlayGemReq::clear_hole_index() {
  hole_index_ = 0u;
  clear_has_hole_index();
}
inline ::google::protobuf::uint32 CSEquipInlayGemReq::hole_index() const {
  return hole_index_;
}
inline void CSEquipInlayGemReq::set_hole_index(::google::protobuf::uint32 value) {
  set_has_hole_index();
  hole_index_ = value;
}

// -------------------------------------------------------------------

// CSEquipInlayGemRsp

// required uint32 ret = 1;
inline bool CSEquipInlayGemRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipInlayGemRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipInlayGemRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipInlayGemRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSEquipInlayGemRsp::ret() const {
  return ret_;
}
inline void CSEquipInlayGemRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CSResetGemAttrReq

// required uint32 equip_pos = 1;
inline bool CSResetGemAttrReq::has_equip_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSResetGemAttrReq::set_has_equip_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSResetGemAttrReq::clear_has_equip_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSResetGemAttrReq::clear_equip_pos() {
  equip_pos_ = 0u;
  clear_has_equip_pos();
}
inline ::google::protobuf::uint32 CSResetGemAttrReq::equip_pos() const {
  return equip_pos_;
}
inline void CSResetGemAttrReq::set_equip_pos(::google::protobuf::uint32 value) {
  set_has_equip_pos();
  equip_pos_ = value;
}

// repeated uint32 holes_index = 2;
inline int CSResetGemAttrReq::holes_index_size() const {
  return holes_index_.size();
}
inline void CSResetGemAttrReq::clear_holes_index() {
  holes_index_.Clear();
}
inline ::google::protobuf::uint32 CSResetGemAttrReq::holes_index(int index) const {
  return holes_index_.Get(index);
}
inline void CSResetGemAttrReq::set_holes_index(int index, ::google::protobuf::uint32 value) {
  holes_index_.Set(index, value);
}
inline void CSResetGemAttrReq::add_holes_index(::google::protobuf::uint32 value) {
  holes_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSResetGemAttrReq::holes_index() const {
  return holes_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSResetGemAttrReq::mutable_holes_index() {
  return &holes_index_;
}

// optional uint32 cost_attr_key = 3;
inline bool CSResetGemAttrReq::has_cost_attr_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSResetGemAttrReq::set_has_cost_attr_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSResetGemAttrReq::clear_has_cost_attr_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSResetGemAttrReq::clear_cost_attr_key() {
  cost_attr_key_ = 0u;
  clear_has_cost_attr_key();
}
inline ::google::protobuf::uint32 CSResetGemAttrReq::cost_attr_key() const {
  return cost_attr_key_;
}
inline void CSResetGemAttrReq::set_cost_attr_key(::google::protobuf::uint32 value) {
  set_has_cost_attr_key();
  cost_attr_key_ = value;
}

// -------------------------------------------------------------------

// CSResetGemAttrRsp

// required uint32 ret = 1;
inline bool CSResetGemAttrRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSResetGemAttrRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSResetGemAttrRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSResetGemAttrRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSResetGemAttrRsp::ret() const {
  return ret_;
}
inline void CSResetGemAttrRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentStrengthReq

// required uint32 pos = 1;
inline bool CSEquipmentStrengthReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentStrengthReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentStrengthReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentStrengthReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthReq::pos() const {
  return pos_;
}
inline void CSEquipmentStrengthReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentStrengthRsp

// required uint32 result = 1;
inline bool CSEquipmentStrengthRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentStrengthRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentStrengthRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentStrengthRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthRsp::result() const {
  return result_;
}
inline void CSEquipmentStrengthRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// required uint32 pos = 2;
inline bool CSEquipmentStrengthRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentStrengthRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentStrengthRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentStrengthRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthRsp::pos() const {
  return pos_;
}
inline void CSEquipmentStrengthRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 cold_time = 3;
inline bool CSEquipmentStrengthRsp::has_cold_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipmentStrengthRsp::set_has_cold_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipmentStrengthRsp::clear_has_cold_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipmentStrengthRsp::clear_cold_time() {
  cold_time_ = 0u;
  clear_has_cold_time();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthRsp::cold_time() const {
  return cold_time_;
}
inline void CSEquipmentStrengthRsp::set_cold_time(::google::protobuf::uint32 value) {
  set_has_cold_time();
  cold_time_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentComposeReq

// required uint32 exchange_item_id = 1;
inline bool CSEquipmentComposeReq::has_exchange_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentComposeReq::set_has_exchange_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentComposeReq::clear_has_exchange_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentComposeReq::clear_exchange_item_id() {
  exchange_item_id_ = 0u;
  clear_has_exchange_item_id();
}
inline ::google::protobuf::uint32 CSEquipmentComposeReq::exchange_item_id() const {
  return exchange_item_id_;
}
inline void CSEquipmentComposeReq::set_exchange_item_id(::google::protobuf::uint32 value) {
  set_has_exchange_item_id();
  exchange_item_id_ = value;
}

// repeated uint32 from_item_pos = 2;
inline int CSEquipmentComposeReq::from_item_pos_size() const {
  return from_item_pos_.size();
}
inline void CSEquipmentComposeReq::clear_from_item_pos() {
  from_item_pos_.Clear();
}
inline ::google::protobuf::uint32 CSEquipmentComposeReq::from_item_pos(int index) const {
  return from_item_pos_.Get(index);
}
inline void CSEquipmentComposeReq::set_from_item_pos(int index, ::google::protobuf::uint32 value) {
  from_item_pos_.Set(index, value);
}
inline void CSEquipmentComposeReq::add_from_item_pos(::google::protobuf::uint32 value) {
  from_item_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSEquipmentComposeReq::from_item_pos() const {
  return from_item_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSEquipmentComposeReq::mutable_from_item_pos() {
  return &from_item_pos_;
}

// optional uint32 multi = 3 [default = 1];
inline bool CSEquipmentComposeReq::has_multi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipmentComposeReq::set_has_multi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipmentComposeReq::clear_has_multi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipmentComposeReq::clear_multi() {
  multi_ = 1u;
  clear_has_multi();
}
inline ::google::protobuf::uint32 CSEquipmentComposeReq::multi() const {
  return multi_;
}
inline void CSEquipmentComposeReq::set_multi(::google::protobuf::uint32 value) {
  set_has_multi();
  multi_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentComposeRsp

// required uint32 exchange_item_id = 1;
inline bool CSEquipmentComposeRsp::has_exchange_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentComposeRsp::set_has_exchange_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentComposeRsp::clear_has_exchange_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentComposeRsp::clear_exchange_item_id() {
  exchange_item_id_ = 0u;
  clear_has_exchange_item_id();
}
inline ::google::protobuf::uint32 CSEquipmentComposeRsp::exchange_item_id() const {
  return exchange_item_id_;
}
inline void CSEquipmentComposeRsp::set_exchange_item_id(::google::protobuf::uint32 value) {
  set_has_exchange_item_id();
  exchange_item_id_ = value;
}

// required uint32 result = 2;
inline bool CSEquipmentComposeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentComposeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentComposeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentComposeRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CSEquipmentComposeRsp::result() const {
  return result_;
}
inline void CSEquipmentComposeRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CSTaskInfoReq

// -------------------------------------------------------------------

// TaskInfo

// required uint32 task_id = 1;
inline bool TaskInfo::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskInfo::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskInfo::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskInfo::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 TaskInfo::task_id() const {
  return task_id_;
}
inline void TaskInfo::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step_id = 2;
inline bool TaskInfo::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskInfo::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskInfo::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskInfo::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 TaskInfo::step_id() const {
  return step_id_;
}
inline void TaskInfo::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool TaskInfo::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskInfo::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskInfo::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskInfo::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 TaskInfo::step_value() const {
  return step_value_;
}
inline void TaskInfo::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// -------------------------------------------------------------------

// CSTaskInfoRsp

// repeated uint32 acceptable_tasks = 1;
inline int CSTaskInfoRsp::acceptable_tasks_size() const {
  return acceptable_tasks_.size();
}
inline void CSTaskInfoRsp::clear_acceptable_tasks() {
  acceptable_tasks_.Clear();
}
inline ::google::protobuf::uint32 CSTaskInfoRsp::acceptable_tasks(int index) const {
  return acceptable_tasks_.Get(index);
}
inline void CSTaskInfoRsp::set_acceptable_tasks(int index, ::google::protobuf::uint32 value) {
  acceptable_tasks_.Set(index, value);
}
inline void CSTaskInfoRsp::add_acceptable_tasks(::google::protobuf::uint32 value) {
  acceptable_tasks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSTaskInfoRsp::acceptable_tasks() const {
  return acceptable_tasks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSTaskInfoRsp::mutable_acceptable_tasks() {
  return &acceptable_tasks_;
}

// repeated .TaskInfo accept_tasks = 2;
inline int CSTaskInfoRsp::accept_tasks_size() const {
  return accept_tasks_.size();
}
inline void CSTaskInfoRsp::clear_accept_tasks() {
  accept_tasks_.Clear();
}
inline const ::TaskInfo& CSTaskInfoRsp::accept_tasks(int index) const {
  return accept_tasks_.Get(index);
}
inline ::TaskInfo* CSTaskInfoRsp::mutable_accept_tasks(int index) {
  return accept_tasks_.Mutable(index);
}
inline ::TaskInfo* CSTaskInfoRsp::add_accept_tasks() {
  return accept_tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
CSTaskInfoRsp::accept_tasks() const {
  return accept_tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
CSTaskInfoRsp::mutable_accept_tasks() {
  return &accept_tasks_;
}

// -------------------------------------------------------------------

// CSTaskDoStepReq

// required uint32 task_id = 1;
inline bool CSTaskDoStepReq::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskDoStepReq::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskDoStepReq::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskDoStepReq::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepReq::task_id() const {
  return task_id_;
}
inline void CSTaskDoStepReq::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step_id = 2;
inline bool CSTaskDoStepReq::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTaskDoStepReq::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTaskDoStepReq::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTaskDoStepReq::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepReq::step_id() const {
  return step_id_;
}
inline void CSTaskDoStepReq::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool CSTaskDoStepReq::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTaskDoStepReq::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTaskDoStepReq::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTaskDoStepReq::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 CSTaskDoStepReq::step_value() const {
  return step_value_;
}
inline void CSTaskDoStepReq::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// -------------------------------------------------------------------

// CSTaskDoStepRsp

// required uint32 task_id = 1;
inline bool CSTaskDoStepRsp::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskDoStepRsp::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskDoStepRsp::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskDoStepRsp::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepRsp::task_id() const {
  return task_id_;
}
inline void CSTaskDoStepRsp::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step_id = 2;
inline bool CSTaskDoStepRsp::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTaskDoStepRsp::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTaskDoStepRsp::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTaskDoStepRsp::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepRsp::step_id() const {
  return step_id_;
}
inline void CSTaskDoStepRsp::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool CSTaskDoStepRsp::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTaskDoStepRsp::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTaskDoStepRsp::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTaskDoStepRsp::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 CSTaskDoStepRsp::step_value() const {
  return step_value_;
}
inline void CSTaskDoStepRsp::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// -------------------------------------------------------------------

// CSTaskLogReq

// -------------------------------------------------------------------

// CSTaskLogRsp

// repeated .TaskInfo tasks = 1;
inline int CSTaskLogRsp::tasks_size() const {
  return tasks_.size();
}
inline void CSTaskLogRsp::clear_tasks() {
  tasks_.Clear();
}
inline const ::TaskInfo& CSTaskLogRsp::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::TaskInfo* CSTaskLogRsp::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::TaskInfo* CSTaskLogRsp::add_tasks() {
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
CSTaskLogRsp::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
CSTaskLogRsp::mutable_tasks() {
  return &tasks_;
}

// -------------------------------------------------------------------

// CSAttributesSetReq

// required uint32 key = 1;
inline bool CSAttributesSetReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAttributesSetReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAttributesSetReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAttributesSetReq::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSAttributesSetReq::key() const {
  return key_;
}
inline void CSAttributesSetReq::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool CSAttributesSetReq::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAttributesSetReq::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAttributesSetReq::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAttributesSetReq::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CSAttributesSetReq::value() const {
  return value_;
}
inline void CSAttributesSetReq::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSAttributesReq

// repeated uint32 keys = 1;
inline int CSAttributesReq::keys_size() const {
  return keys_.size();
}
inline void CSAttributesReq::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::uint32 CSAttributesReq::keys(int index) const {
  return keys_.Get(index);
}
inline void CSAttributesReq::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
}
inline void CSAttributesReq::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSAttributesReq::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSAttributesReq::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// CSAttributesRsp_KeyValue

// required uint32 key = 1;
inline bool CSAttributesRsp_KeyValue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAttributesRsp_KeyValue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAttributesRsp_KeyValue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAttributesRsp_KeyValue::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSAttributesRsp_KeyValue::key() const {
  return key_;
}
inline void CSAttributesRsp_KeyValue::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool CSAttributesRsp_KeyValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAttributesRsp_KeyValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAttributesRsp_KeyValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAttributesRsp_KeyValue::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CSAttributesRsp_KeyValue::value() const {
  return value_;
}
inline void CSAttributesRsp_KeyValue::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSAttributesRsp

// repeated .CSAttributesRsp.KeyValue values = 1;
inline int CSAttributesRsp::values_size() const {
  return values_.size();
}
inline void CSAttributesRsp::clear_values() {
  values_.Clear();
}
inline const ::CSAttributesRsp_KeyValue& CSAttributesRsp::values(int index) const {
  return values_.Get(index);
}
inline ::CSAttributesRsp_KeyValue* CSAttributesRsp::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::CSAttributesRsp_KeyValue* CSAttributesRsp::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >&
CSAttributesRsp::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >*
CSAttributesRsp::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// CSOnceSetReq

// required uint32 index = 1;
inline bool CSOnceSetReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOnceSetReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOnceSetReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOnceSetReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSOnceSetReq::index() const {
  return index_;
}
inline void CSOnceSetReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CSOnceReq

// repeated uint32 indexs = 1;
inline int CSOnceReq::indexs_size() const {
  return indexs_.size();
}
inline void CSOnceReq::clear_indexs() {
  indexs_.Clear();
}
inline ::google::protobuf::uint32 CSOnceReq::indexs(int index) const {
  return indexs_.Get(index);
}
inline void CSOnceReq::set_indexs(int index, ::google::protobuf::uint32 value) {
  indexs_.Set(index, value);
}
inline void CSOnceReq::add_indexs(::google::protobuf::uint32 value) {
  indexs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSOnceReq::indexs() const {
  return indexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSOnceReq::mutable_indexs() {
  return &indexs_;
}

// -------------------------------------------------------------------

// CSOnceRsp_Once

// required uint32 index = 1;
inline bool CSOnceRsp_Once::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOnceRsp_Once::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOnceRsp_Once::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOnceRsp_Once::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSOnceRsp_Once::index() const {
  return index_;
}
inline void CSOnceRsp_Once::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required bool is_set = 2;
inline bool CSOnceRsp_Once::has_is_set() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOnceRsp_Once::set_has_is_set() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOnceRsp_Once::clear_has_is_set() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOnceRsp_Once::clear_is_set() {
  is_set_ = false;
  clear_has_is_set();
}
inline bool CSOnceRsp_Once::is_set() const {
  return is_set_;
}
inline void CSOnceRsp_Once::set_is_set(bool value) {
  set_has_is_set();
  is_set_ = value;
}

// -------------------------------------------------------------------

// CSOnceRsp

// repeated .CSOnceRsp.Once values = 1;
inline int CSOnceRsp::values_size() const {
  return values_.size();
}
inline void CSOnceRsp::clear_values() {
  values_.Clear();
}
inline const ::CSOnceRsp_Once& CSOnceRsp::values(int index) const {
  return values_.Get(index);
}
inline ::CSOnceRsp_Once* CSOnceRsp::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::CSOnceRsp_Once* CSOnceRsp::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >&
CSOnceRsp::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >*
CSOnceRsp::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// CSTrainInfoReq

// -------------------------------------------------------------------

// CSTrainInfoRsp

// required uint32 potential = 1;
inline bool CSTrainInfoRsp::has_potential() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTrainInfoRsp::set_has_potential() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTrainInfoRsp::clear_has_potential() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTrainInfoRsp::clear_potential() {
  potential_ = 0u;
  clear_has_potential();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::potential() const {
  return potential_;
}
inline void CSTrainInfoRsp::set_potential(::google::protobuf::uint32 value) {
  set_has_potential();
  potential_ = value;
}

// required uint32 courage = 2;
inline bool CSTrainInfoRsp::has_courage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTrainInfoRsp::set_has_courage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTrainInfoRsp::clear_has_courage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTrainInfoRsp::clear_courage() {
  courage_ = 0u;
  clear_has_courage();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::courage() const {
  return courage_;
}
inline void CSTrainInfoRsp::set_courage(::google::protobuf::uint32 value) {
  set_has_courage();
  courage_ = value;
}

// required uint32 charm = 3;
inline bool CSTrainInfoRsp::has_charm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTrainInfoRsp::set_has_charm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTrainInfoRsp::clear_has_charm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTrainInfoRsp::clear_charm() {
  charm_ = 0u;
  clear_has_charm();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::charm() const {
  return charm_;
}
inline void CSTrainInfoRsp::set_charm(::google::protobuf::uint32 value) {
  set_has_charm();
  charm_ = value;
}

// required uint32 trick = 4;
inline bool CSTrainInfoRsp::has_trick() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSTrainInfoRsp::set_has_trick() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSTrainInfoRsp::clear_has_trick() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSTrainInfoRsp::clear_trick() {
  trick_ = 0u;
  clear_has_trick();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::trick() const {
  return trick_;
}
inline void CSTrainInfoRsp::set_trick(::google::protobuf::uint32 value) {
  set_has_trick();
  trick_ = value;
}

// -------------------------------------------------------------------

// CSTrainReq

// required uint32 type = 1;
inline bool CSTrainReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTrainReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTrainReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTrainReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSTrainReq::type() const {
  return type_;
}
inline void CSTrainReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSTrainRsp

// required int32 courage = 1;
inline bool CSTrainRsp::has_courage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTrainRsp::set_has_courage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTrainRsp::clear_has_courage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTrainRsp::clear_courage() {
  courage_ = 0;
  clear_has_courage();
}
inline ::google::protobuf::int32 CSTrainRsp::courage() const {
  return courage_;
}
inline void CSTrainRsp::set_courage(::google::protobuf::int32 value) {
  set_has_courage();
  courage_ = value;
}

// required int32 charm = 2;
inline bool CSTrainRsp::has_charm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTrainRsp::set_has_charm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTrainRsp::clear_has_charm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTrainRsp::clear_charm() {
  charm_ = 0;
  clear_has_charm();
}
inline ::google::protobuf::int32 CSTrainRsp::charm() const {
  return charm_;
}
inline void CSTrainRsp::set_charm(::google::protobuf::int32 value) {
  set_has_charm();
  charm_ = value;
}

// required int32 trick = 3;
inline bool CSTrainRsp::has_trick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTrainRsp::set_has_trick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTrainRsp::clear_has_trick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTrainRsp::clear_trick() {
  trick_ = 0;
  clear_has_trick();
}
inline ::google::protobuf::int32 CSTrainRsp::trick() const {
  return trick_;
}
inline void CSTrainRsp::set_trick(::google::protobuf::int32 value) {
  set_has_trick();
  trick_ = value;
}

// required bool succ = 4;
inline bool CSTrainRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSTrainRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSTrainRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSTrainRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSTrainRsp::succ() const {
  return succ_;
}
inline void CSTrainRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSTrainDetermineReq

// -------------------------------------------------------------------

// CSTrainDetermineRsp

// -------------------------------------------------------------------

// CSExploreReq

// required uint32 option = 1;
inline bool CSExploreReq::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreReq::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreReq::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreReq::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CSExploreReq::option() const {
  return option_;
}
inline void CSExploreReq::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// CSExploreRsp

// required uint32 option = 1;
inline bool CSExploreRsp::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreRsp::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreRsp::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreRsp::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CSExploreRsp::option() const {
  return option_;
}
inline void CSExploreRsp::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// required uint32 map_id = 2;
inline bool CSExploreRsp::has_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExploreRsp::set_has_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExploreRsp::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExploreRsp::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 CSExploreRsp::map_id() const {
  return map_id_;
}
inline void CSExploreRsp::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// -------------------------------------------------------------------

// CSExploreDetermineReq

// required uint32 option = 1;
inline bool CSExploreDetermineReq::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreDetermineReq::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreDetermineReq::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreDetermineReq::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CSExploreDetermineReq::option() const {
  return option_;
}
inline void CSExploreDetermineReq::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// CSExploreDetermineRsp

// required uint32 map_id = 1;
inline bool CSExploreDetermineRsp::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreDetermineRsp::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreDetermineRsp::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreDetermineRsp::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 CSExploreDetermineRsp::map_id() const {
  return map_id_;
}
inline void CSExploreDetermineRsp::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional .CSReward rewards = 2;
inline bool CSExploreDetermineRsp::has_rewards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExploreDetermineRsp::set_has_rewards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExploreDetermineRsp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExploreDetermineRsp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CSReward::Clear();
  clear_has_rewards();
}
inline const ::CSReward& CSExploreDetermineRsp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CSReward* CSExploreDetermineRsp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CSReward;
  return rewards_;
}
inline ::CSReward* CSExploreDetermineRsp::release_rewards() {
  clear_has_rewards();
  ::CSReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}
inline void CSExploreDetermineRsp::set_allocated_rewards(::CSReward* rewards) {
  delete rewards_;
  rewards_ = rewards;
  if (rewards) {
    set_has_rewards();
  } else {
    clear_has_rewards();
  }
}

// -------------------------------------------------------------------

// CSQueryDowerReq

// -------------------------------------------------------------------

// CSQueryDowerRsp_Dower

// required uint32 id = 1;
inline bool CSQueryDowerRsp_Dower::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryDowerRsp_Dower::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryDowerRsp_Dower::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::id() const {
  return id_;
}
inline void CSQueryDowerRsp_Dower::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool CSQueryDowerRsp_Dower::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryDowerRsp_Dower::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryDowerRsp_Dower::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::level() const {
  return level_;
}
inline void CSQueryDowerRsp_Dower::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 max_level = 3;
inline bool CSQueryDowerRsp_Dower::has_max_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_max_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryDowerRsp_Dower::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryDowerRsp_Dower::clear_max_level() {
  max_level_ = 0u;
  clear_has_max_level();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::max_level() const {
  return max_level_;
}
inline void CSQueryDowerRsp_Dower::set_max_level(::google::protobuf::uint32 value) {
  set_has_max_level();
  max_level_ = value;
}

// required uint32 plus = 4;
inline bool CSQueryDowerRsp_Dower::has_plus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_plus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSQueryDowerRsp_Dower::clear_has_plus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSQueryDowerRsp_Dower::clear_plus() {
  plus_ = 0u;
  clear_has_plus();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::plus() const {
  return plus_;
}
inline void CSQueryDowerRsp_Dower::set_plus(::google::protobuf::uint32 value) {
  set_has_plus();
  plus_ = value;
}

// required uint32 each_plus = 5;
inline bool CSQueryDowerRsp_Dower::has_each_plus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_each_plus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSQueryDowerRsp_Dower::clear_has_each_plus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSQueryDowerRsp_Dower::clear_each_plus() {
  each_plus_ = 0u;
  clear_has_each_plus();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::each_plus() const {
  return each_plus_;
}
inline void CSQueryDowerRsp_Dower::set_each_plus(::google::protobuf::uint32 value) {
  set_has_each_plus();
  each_plus_ = value;
}

// -------------------------------------------------------------------

// CSQueryDowerRsp

// repeated .CSQueryDowerRsp.Dower dower = 1;
inline int CSQueryDowerRsp::dower_size() const {
  return dower_.size();
}
inline void CSQueryDowerRsp::clear_dower() {
  dower_.Clear();
}
inline const ::CSQueryDowerRsp_Dower& CSQueryDowerRsp::dower(int index) const {
  return dower_.Get(index);
}
inline ::CSQueryDowerRsp_Dower* CSQueryDowerRsp::mutable_dower(int index) {
  return dower_.Mutable(index);
}
inline ::CSQueryDowerRsp_Dower* CSQueryDowerRsp::add_dower() {
  return dower_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >&
CSQueryDowerRsp::dower() const {
  return dower_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >*
CSQueryDowerRsp::mutable_dower() {
  return &dower_;
}

// optional uint32 timeout = 2;
inline bool CSQueryDowerRsp::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryDowerRsp::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryDowerRsp::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryDowerRsp::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp::timeout() const {
  return timeout_;
}
inline void CSQueryDowerRsp::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
}

// -------------------------------------------------------------------

// CSDowerInfoReq

// required uint32 id = 1;
inline bool CSDowerInfoReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerInfoReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerInfoReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerInfoReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDowerInfoReq::id() const {
  return id_;
}
inline void CSDowerInfoReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool CSDowerInfoReq::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDowerInfoReq::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDowerInfoReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDowerInfoReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSDowerInfoReq::level() const {
  return level_;
}
inline void CSDowerInfoReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// CSDowerInfoRsp

// required uint32 id = 1;
inline bool CSDowerInfoRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerInfoRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerInfoRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerInfoRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::id() const {
  return id_;
}
inline void CSDowerInfoRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool CSDowerInfoRsp::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDowerInfoRsp::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDowerInfoRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDowerInfoRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::level() const {
  return level_;
}
inline void CSDowerInfoRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 next_exploit = 3;
inline bool CSDowerInfoRsp::has_next_exploit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDowerInfoRsp::set_has_next_exploit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDowerInfoRsp::clear_has_next_exploit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDowerInfoRsp::clear_next_exploit() {
  next_exploit_ = 0u;
  clear_has_next_exploit();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::next_exploit() const {
  return next_exploit_;
}
inline void CSDowerInfoRsp::set_next_exploit(::google::protobuf::uint32 value) {
  set_has_next_exploit();
  next_exploit_ = value;
}

// required uint32 next_time = 4;
inline bool CSDowerInfoRsp::has_next_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSDowerInfoRsp::set_has_next_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSDowerInfoRsp::clear_has_next_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSDowerInfoRsp::clear_next_time() {
  next_time_ = 0u;
  clear_has_next_time();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::next_time() const {
  return next_time_;
}
inline void CSDowerInfoRsp::set_next_time(::google::protobuf::uint32 value) {
  set_has_next_time();
  next_time_ = value;
}

// required uint32 diff_physical_attack = 5;
inline bool CSDowerInfoRsp::has_diff_physical_attack() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_physical_attack() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSDowerInfoRsp::clear_has_diff_physical_attack() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSDowerInfoRsp::clear_diff_physical_attack() {
  diff_physical_attack_ = 0u;
  clear_has_diff_physical_attack();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_physical_attack() const {
  return diff_physical_attack_;
}
inline void CSDowerInfoRsp::set_diff_physical_attack(::google::protobuf::uint32 value) {
  set_has_diff_physical_attack();
  diff_physical_attack_ = value;
}

// required uint32 diff_magic_attack = 6;
inline bool CSDowerInfoRsp::has_diff_magic_attack() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_magic_attack() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSDowerInfoRsp::clear_has_diff_magic_attack() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSDowerInfoRsp::clear_diff_magic_attack() {
  diff_magic_attack_ = 0u;
  clear_has_diff_magic_attack();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_magic_attack() const {
  return diff_magic_attack_;
}
inline void CSDowerInfoRsp::set_diff_magic_attack(::google::protobuf::uint32 value) {
  set_has_diff_magic_attack();
  diff_magic_attack_ = value;
}

// required uint32 diff_skill_attack = 7;
inline bool CSDowerInfoRsp::has_diff_skill_attack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_skill_attack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSDowerInfoRsp::clear_has_diff_skill_attack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSDowerInfoRsp::clear_diff_skill_attack() {
  diff_skill_attack_ = 0u;
  clear_has_diff_skill_attack();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_skill_attack() const {
  return diff_skill_attack_;
}
inline void CSDowerInfoRsp::set_diff_skill_attack(::google::protobuf::uint32 value) {
  set_has_diff_skill_attack();
  diff_skill_attack_ = value;
}

// required uint32 diff_physical_defence = 8;
inline bool CSDowerInfoRsp::has_diff_physical_defence() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_physical_defence() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSDowerInfoRsp::clear_has_diff_physical_defence() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSDowerInfoRsp::clear_diff_physical_defence() {
  diff_physical_defence_ = 0u;
  clear_has_diff_physical_defence();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_physical_defence() const {
  return diff_physical_defence_;
}
inline void CSDowerInfoRsp::set_diff_physical_defence(::google::protobuf::uint32 value) {
  set_has_diff_physical_defence();
  diff_physical_defence_ = value;
}

// required uint32 diff_magic_defence = 9;
inline bool CSDowerInfoRsp::has_diff_magic_defence() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_magic_defence() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSDowerInfoRsp::clear_has_diff_magic_defence() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSDowerInfoRsp::clear_diff_magic_defence() {
  diff_magic_defence_ = 0u;
  clear_has_diff_magic_defence();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_magic_defence() const {
  return diff_magic_defence_;
}
inline void CSDowerInfoRsp::set_diff_magic_defence(::google::protobuf::uint32 value) {
  set_has_diff_magic_defence();
  diff_magic_defence_ = value;
}

// required uint32 diff_skill_defence = 10;
inline bool CSDowerInfoRsp::has_diff_skill_defence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_skill_defence() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSDowerInfoRsp::clear_has_diff_skill_defence() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSDowerInfoRsp::clear_diff_skill_defence() {
  diff_skill_defence_ = 0u;
  clear_has_diff_skill_defence();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_skill_defence() const {
  return diff_skill_defence_;
}
inline void CSDowerInfoRsp::set_diff_skill_defence(::google::protobuf::uint32 value) {
  set_has_diff_skill_defence();
  diff_skill_defence_ = value;
}

// required uint32 diff_hp = 11;
inline bool CSDowerInfoRsp::has_diff_hp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_hp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSDowerInfoRsp::clear_has_diff_hp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSDowerInfoRsp::clear_diff_hp() {
  diff_hp_ = 0u;
  clear_has_diff_hp();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_hp() const {
  return diff_hp_;
}
inline void CSDowerInfoRsp::set_diff_hp(::google::protobuf::uint32 value) {
  set_has_diff_hp();
  diff_hp_ = value;
}

// required uint32 plus = 12;
inline bool CSDowerInfoRsp::has_plus() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSDowerInfoRsp::set_has_plus() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSDowerInfoRsp::clear_has_plus() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSDowerInfoRsp::clear_plus() {
  plus_ = 0u;
  clear_has_plus();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::plus() const {
  return plus_;
}
inline void CSDowerInfoRsp::set_plus(::google::protobuf::uint32 value) {
  set_has_plus();
  plus_ = value;
}

// -------------------------------------------------------------------

// CSDowerReq

// required uint32 id = 1;
inline bool CSDowerReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDowerReq::id() const {
  return id_;
}
inline void CSDowerReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSDowerRsp

// required uint32 timeout = 1;
inline bool CSDowerRsp::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerRsp::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerRsp::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerRsp::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 CSDowerRsp::timeout() const {
  return timeout_;
}
inline void CSDowerRsp::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
}

// required uint32 level = 2;
inline bool CSDowerRsp::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDowerRsp::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDowerRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDowerRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSDowerRsp::level() const {
  return level_;
}
inline void CSDowerRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 plus = 3;
inline bool CSDowerRsp::has_plus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDowerRsp::set_has_plus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDowerRsp::clear_has_plus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDowerRsp::clear_plus() {
  plus_ = 0u;
  clear_has_plus();
}
inline ::google::protobuf::uint32 CSDowerRsp::plus() const {
  return plus_;
}
inline void CSDowerRsp::set_plus(::google::protobuf::uint32 value) {
  set_has_plus();
  plus_ = value;
}

// required uint32 next_exploit = 4;
inline bool CSDowerRsp::has_next_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSDowerRsp::set_has_next_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSDowerRsp::clear_has_next_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSDowerRsp::clear_next_exploit() {
  next_exploit_ = 0u;
  clear_has_next_exploit();
}
inline ::google::protobuf::uint32 CSDowerRsp::next_exploit() const {
  return next_exploit_;
}
inline void CSDowerRsp::set_next_exploit(::google::protobuf::uint32 value) {
  set_has_next_exploit();
  next_exploit_ = value;
}

// -------------------------------------------------------------------

// CSExchangeParameterReq

// required uint32 id = 1;
inline bool CSExchangeParameterReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeParameterReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeParameterReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeParameterReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSExchangeParameterReq::id() const {
  return id_;
}
inline void CSExchangeParameterReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 param = 2 [default = 0];
inline bool CSExchangeParameterReq::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExchangeParameterReq::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExchangeParameterReq::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExchangeParameterReq::clear_param() {
  param_ = 0u;
  clear_has_param();
}
inline ::google::protobuf::uint32 CSExchangeParameterReq::param() const {
  return param_;
}
inline void CSExchangeParameterReq::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// CSExchangeParameterRsp

// required bool succ = 1;
inline bool CSExchangeParameterRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeParameterRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeParameterRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeParameterRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSExchangeParameterRsp::succ() const {
  return succ_;
}
inline void CSExchangeParameterRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// required uint32 id = 2;
inline bool CSExchangeParameterRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExchangeParameterRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExchangeParameterRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExchangeParameterRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSExchangeParameterRsp::id() const {
  return id_;
}
inline void CSExchangeParameterRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 param = 3;
inline bool CSExchangeParameterRsp::has_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSExchangeParameterRsp::set_has_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSExchangeParameterRsp::clear_has_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSExchangeParameterRsp::clear_param() {
  param_ = 0u;
  clear_has_param();
}
inline ::google::protobuf::uint32 CSExchangeParameterRsp::param() const {
  return param_;
}
inline void CSExchangeParameterRsp::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// ShopItemInfo_Item

// required uint32 item_id = 1;
inline bool ShopItemInfo_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopItemInfo_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopItemInfo_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopItemInfo_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 ShopItemInfo_Item::item_id() const {
  return item_id_;
}
inline void ShopItemInfo_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool ShopItemInfo_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopItemInfo_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopItemInfo_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopItemInfo_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 ShopItemInfo_Item::item_num() const {
  return item_num_;
}
inline void ShopItemInfo_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// ShopItemInfo

// required uint32 index = 1;
inline bool ShopItemInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopItemInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopItemInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopItemInfo::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ShopItemInfo::index() const {
  return index_;
}
inline void ShopItemInfo::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required .ShopItemInfo.Item from_item = 2;
inline bool ShopItemInfo::has_from_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopItemInfo::set_has_from_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopItemInfo::clear_has_from_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopItemInfo::clear_from_item() {
  if (from_item_ != NULL) from_item_->::ShopItemInfo_Item::Clear();
  clear_has_from_item();
}
inline const ::ShopItemInfo_Item& ShopItemInfo::from_item() const {
  return from_item_ != NULL ? *from_item_ : *default_instance_->from_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::mutable_from_item() {
  set_has_from_item();
  if (from_item_ == NULL) from_item_ = new ::ShopItemInfo_Item;
  return from_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::release_from_item() {
  clear_has_from_item();
  ::ShopItemInfo_Item* temp = from_item_;
  from_item_ = NULL;
  return temp;
}
inline void ShopItemInfo::set_allocated_from_item(::ShopItemInfo_Item* from_item) {
  delete from_item_;
  from_item_ = from_item;
  if (from_item) {
    set_has_from_item();
  } else {
    clear_has_from_item();
  }
}

// required .ShopItemInfo.Item to_item = 3;
inline bool ShopItemInfo::has_to_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopItemInfo::set_has_to_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopItemInfo::clear_has_to_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopItemInfo::clear_to_item() {
  if (to_item_ != NULL) to_item_->::ShopItemInfo_Item::Clear();
  clear_has_to_item();
}
inline const ::ShopItemInfo_Item& ShopItemInfo::to_item() const {
  return to_item_ != NULL ? *to_item_ : *default_instance_->to_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::mutable_to_item() {
  set_has_to_item();
  if (to_item_ == NULL) to_item_ = new ::ShopItemInfo_Item;
  return to_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::release_to_item() {
  clear_has_to_item();
  ::ShopItemInfo_Item* temp = to_item_;
  to_item_ = NULL;
  return temp;
}
inline void ShopItemInfo::set_allocated_to_item(::ShopItemInfo_Item* to_item) {
  delete to_item_;
  to_item_ = to_item;
  if (to_item) {
    set_has_to_item();
  } else {
    clear_has_to_item();
  }
}

// required bool is_buy = 4;
inline bool ShopItemInfo::has_is_buy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopItemInfo::set_has_is_buy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopItemInfo::clear_has_is_buy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopItemInfo::clear_is_buy() {
  is_buy_ = false;
  clear_has_is_buy();
}
inline bool ShopItemInfo::is_buy() const {
  return is_buy_;
}
inline void ShopItemInfo::set_is_buy(bool value) {
  set_has_is_buy();
  is_buy_ = value;
}

// -------------------------------------------------------------------

// CSGetShopItemsReq

// -------------------------------------------------------------------

// CSGetShopItemsRsp

// repeated .ShopItemInfo items = 1;
inline int CSGetShopItemsRsp::items_size() const {
  return items_.size();
}
inline void CSGetShopItemsRsp::clear_items() {
  items_.Clear();
}
inline const ::ShopItemInfo& CSGetShopItemsRsp::items(int index) const {
  return items_.Get(index);
}
inline ::ShopItemInfo* CSGetShopItemsRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::ShopItemInfo* CSGetShopItemsRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
CSGetShopItemsRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
CSGetShopItemsRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSBuyShopItemReq

// required uint32 index = 1;
inline bool CSBuyShopItemReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBuyShopItemReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBuyShopItemReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBuyShopItemReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSBuyShopItemReq::index() const {
  return index_;
}
inline void CSBuyShopItemReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CSBuyShopItemRsp

// required uint32 index = 1;
inline bool CSBuyShopItemRsp::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBuyShopItemRsp::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBuyShopItemRsp::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBuyShopItemRsp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSBuyShopItemRsp::index() const {
  return index_;
}
inline void CSBuyShopItemRsp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required bool succ = 2;
inline bool CSBuyShopItemRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBuyShopItemRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBuyShopItemRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBuyShopItemRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSBuyShopItemRsp::succ() const {
  return succ_;
}
inline void CSBuyShopItemRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSGetUserItemReq

// required uint32 userid = 1;
inline bool CSGetUserItemReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserItemReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserItemReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserItemReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserItemReq::userid() const {
  return userid_;
}
inline void CSGetUserItemReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// -------------------------------------------------------------------

// CSGetUserItemRsp

// required uint32 userid = 1;
inline bool CSGetUserItemRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserItemRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserItemRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserItemRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserItemRsp::userid() const {
  return userid_;
}
inline void CSGetUserItemRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// repeated .CSItemInfo items = 2;
inline int CSGetUserItemRsp::items_size() const {
  return items_.size();
}
inline void CSGetUserItemRsp::clear_items() {
  items_.Clear();
}
inline const ::CSItemInfo& CSGetUserItemRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSItemInfo* CSGetUserItemRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSItemInfo* CSGetUserItemRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSGetUserItemRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSGetUserItemRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSGetUserAttributesReq

// required uint32 userid = 1;
inline bool CSGetUserAttributesReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserAttributesReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserAttributesReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserAttributesReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserAttributesReq::userid() const {
  return userid_;
}
inline void CSGetUserAttributesReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// -------------------------------------------------------------------

// CSGetUserAttributesRsp

// required uint32 userid = 1;
inline bool CSGetUserAttributesRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserAttributesRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserAttributesRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserAttributesRsp::userid() const {
  return userid_;
}
inline void CSGetUserAttributesRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required .CSAttributesRsp attributes = 2;
inline bool CSGetUserAttributesRsp::has_attributes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_attributes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserAttributesRsp::clear_has_attributes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserAttributesRsp::clear_attributes() {
  if (attributes_ != NULL) attributes_->::CSAttributesRsp::Clear();
  clear_has_attributes();
}
inline const ::CSAttributesRsp& CSGetUserAttributesRsp::attributes() const {
  return attributes_ != NULL ? *attributes_ : *default_instance_->attributes_;
}
inline ::CSAttributesRsp* CSGetUserAttributesRsp::mutable_attributes() {
  set_has_attributes();
  if (attributes_ == NULL) attributes_ = new ::CSAttributesRsp;
  return attributes_;
}
inline ::CSAttributesRsp* CSGetUserAttributesRsp::release_attributes() {
  clear_has_attributes();
  ::CSAttributesRsp* temp = attributes_;
  attributes_ = NULL;
  return temp;
}
inline void CSGetUserAttributesRsp::set_allocated_attributes(::CSAttributesRsp* attributes) {
  delete attributes_;
  attributes_ = attributes;
  if (attributes) {
    set_has_attributes();
  } else {
    clear_has_attributes();
  }
}

// -------------------------------------------------------------------

// CSNotifyMoneyConfInfoRsp

// required uint32 pay = 1;
inline bool CSNotifyMoneyConfInfoRsp::has_pay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_pay() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_pay() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_pay() {
  pay_ = 0u;
  clear_has_pay();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::pay() const {
  return pay_;
}
inline void CSNotifyMoneyConfInfoRsp::set_pay(::google::protobuf::uint32 value) {
  set_has_pay();
  pay_ = value;
}

// required uint32 diamond = 2;
inline bool CSNotifyMoneyConfInfoRsp::has_diamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_diamond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::diamond() const {
  return diamond_;
}
inline void CSNotifyMoneyConfInfoRsp::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
}

// required uint32 explore = 3;
inline bool CSNotifyMoneyConfInfoRsp::has_explore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_explore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_explore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_explore() {
  explore_ = 0u;
  clear_has_explore();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::explore() const {
  return explore_;
}
inline void CSNotifyMoneyConfInfoRsp::set_explore(::google::protobuf::uint32 value) {
  set_has_explore();
  explore_ = value;
}

// required uint32 train = 4;
inline bool CSNotifyMoneyConfInfoRsp::has_train() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_train() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_train() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_train() {
  train_ = 0u;
  clear_has_train();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::train() const {
  return train_;
}
inline void CSNotifyMoneyConfInfoRsp::set_train(::google::protobuf::uint32 value) {
  set_has_train();
  train_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_PLAYET_ATTR_T>() {
  return ::PB_PLAYET_ATTR_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_ITEM_ATTR_T>() {
  return ::PB_ITEM_ATTR_T_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cs_5fcore_2eproto__INCLUDED
